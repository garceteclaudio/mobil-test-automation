(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[79],{565:function(e,t,a){"use strict";a.d(t,"c",(function(){return C})),a.d(t,"b",(function(){return F})),a.d(t,"a",(function(){return R}));var n=a(16),c=a(11),l=a(41),o=a(99),r=a(39),s=a(87),i=a(187),u=a(50),b=a(38),d=a(82),m=a(490),j=a(74),O=a(33),p=a(8),f=a(36),v=a(6),_=a(494),g=a(79),h=a(80),T=a(51),x=a(270),E=a(574),y=a.n(E),P=a(575),A=a.n(P),M=a(10),S=A.a.NAME_MODAL_OTP,N=A.a.TYPE_MODAL_OTP,C=function(e,t,a){return Object(r.c)((function(n){return n?Object(i.d)(Object(i.m)(e),t):Object(i.d)(r.e.string.required(),a)}))},F=function(e,t,a){return r.e.object({otp:C(e,t,a)})};function R(e){var t=e,a=t.isModalVisible,r=t.handleModal,i=t.children,E=t.titleText,P=t.isLoading,A=Object(f.i)().isMobile,C=Object(p.b)(),F=Object(h.g)(),R=Object(T.sb)(T.kb),I=v.yb.SOFT_TOKEN,k=Object(p.c)(O.e.token),L=Object(p.c)(s.c.otpType),D=Object(p.c)(s.c.countSendOtpSMS),q=Object(p.c)(s.c.fetching)||P,H=Object(b.c)().textGet,Y=Object(o.a)().getValueConfig,B=Object(s.e)(),U=B.isSeedPresent,V=B.softToken,w=Object(g.d)().showSuccessToast,K=Object(j.a)(Y("safeway.otps.soft.length")),Q=c.b.useState(v.D),G=Object(n.a)(Q,2),J=G[0],X=G[1],W=L===v.Lb,Z=c.b.useState(!1),z=Object(n.a)(Z,2),$=z[0],ee=z[1],te=D>v.Sb?"spa.modal.otp.button.resendCode":"spa.modal.otp.button.sendCode",ae=c.b.useCallback((function(){if(!A||!W||!U)return X(v.D),void ee(!1);X(V),ee(!0)}),[A,W,V,U]);return c.b.useEffect((function(){ae()}),[ae]),c.b.useEffect((function(){D>v.Sb&&w("spa.modal.otp.success.sendCode")}),[D,w]),Object(M.jsx)(l.a,{name:S,tag:"section",type:N,children:Object(M.jsxs)(m.a,{open:a,title:"spa.modal.otp.title",onClose:r,children:[!q&&Object(M.jsxs)(c.b.Fragment,{children:[Object(M.jsxs)(m.a.Body,{children:[E&&Object(M.jsx)(b.b,{uuid:E}),L?Object(M.jsxs)(c.b.Fragment,{children:[i,!W&&Object(M.jsx)(b.b,{uuid:"spa.modal.otp.text.sendCode"}),Object(M.jsx)("div",{className:$?y.a.hiddenInput:v.D,children:Object(M.jsx)(_.a,{defaultValue:J,label:H({uuid:"spa.modal.otp.label"}),maxLength:K,name:"otp",start:Object(M.jsx)(u.Icon,{name:"tokenPadlock"})})})]}):Object(M.jsx)(b.b,{uuid:"spa.otp.not.assign"})]}),Object(M.jsx)(m.a.Footer,{children:Object(M.jsxs)("div",{className:y.a.footer,children:[L?Object(M.jsxs)(c.b.Fragment,{children:[!W&&Object(M.jsx)(d.a,{label:{uuid:te},onClick:function(){if(!k)return;C(s.b.sendOtpOverSms({accessToken:k}))}}),Object(M.jsx)(d.a,{disabled:!W&&D===v.Sb,label:{uuid:"spa.modal.otp.accept.button"},type:"submit"})]}):Object(M.jsx)(d.a,{label:{uuid:"spa.otp.not.assign.button"},onClick:function(){r(),F(R.replace(T.c,I))}}),Object(M.jsx)(d.a,{label:{uuid:"spa.modal.otp.cancel.button"},variant:"outlined",onClick:r})]})})]}),q&&Object(M.jsx)(x.a,{})]})})}R.defaultProps={isLoading:!1}},574:function(e,t,a){e.exports={NAME_MODAL_OTP:"ModalOTP",TYPE_MODAL_OTP:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",hiddenInput:"_rules_hiddenInput__2xfdH",footer:"_rules_footer__OXIXm"}},575:function(e,t,a){e.exports={NAME_MODAL_OTP:"ModalOTP",TYPE_MODAL_OTP:"Section"}},603:function(e,t,a){"use strict";a.d(t,"a",(function(){return u}));var n=a(0),c=a(5),l=a(16),o=a(11),r=a(8),s=a(33),i=a(87),u=function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=Object(r.b)(),a=Object(r.c)(s.e.token),u=Object(r.c)(s.e.linkedSoftTokenUser),b=Object(r.c)(s.e.linkedDeviceModel),d=o.b.useState(!0),m=Object(l.a)(d,2),j=m[0],O=m[1],p=o.b.useCallback(Object(c.a)(Object(n.a)().mark((function e(){return Object(n.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a){e.next=2;break}return e.abrupt("return");case 2:return e.next=4,t(i.b.otpConfigurationPre({accessToken:a,linkedSoftTokenUser:u,linkedDeviceModel:b}));case 4:O(!1);case 5:case"end":return e.stop()}}),e)}))),[a,u,b,t]);return o.b.useEffect((function(){e&&p()}),[p,e]),{fetchData:p,isLoading:j}}},773:function(e,t,a){"use strict";a.d(t,"a",(function(){return D}));var n=a(2),c=a(19),l=a(0),o=a(5),r=a(16),s=a(8),i=a(6),u=a(156),b=a(100),d=a(33),m=a(82),j=a(488),O=a(512),p=a(507),f=a(503),v=a(506),_=a(38),g=a(11),h=a(41),T=a(99),x=a(45),E=a(565),y=a(519),P=a(50),A=a(74),M=a(774),S=a.n(M),N=a(775),C=a.n(N),F=a(10),R=["group"],I=["label","currency"],k=S.a.NAME_QR_PAYMENT_FORM_LIST,L=S.a.TYPE_QR_PAYMENT_FORM_LIST;function D(e){var t=e,a=t.qrInfo,M=t.handleBack,S=t.latitude,N=t.longitude,D=a.merchantName,q=a.transactionAmount,H=a.transactionCurrency,Y=a.installmentsAmount,B=a.installments,U=a.plan,V=a.cards,w=a.financingPlans,K="#".repeat(i.Hb),Q=Object(b.c)(new Date,{format:b.a.SHORT}),G=Object(T.a)().getValueConfig,J=Object(s.b)(),X=Object(_.c)().textGet,W=j.a.useContext(),Z=j.a.useContext(),z=Z.getValues,$=Z.setError,ee=Z.formState.errors,te=X({uuid:"spa.modo.pay.qr.label.amount"}),ae=X({uuid:"spa.modo.pay.qr.label.account"}),ne=X({uuid:"spa.modo.pay.qr.label.card"}),ce=X({uuid:"spa.modo.pay.qr.label.financing"}),le=X({uuid:"spa.modo.pay.qr.label.cvv"}),oe=X({uuid:"spa.modo.link.cards.modal.cvv.error"}),re=X({uuid:"spa.modo.request.money.amount.error"}),se=X({uuid:"spa.generic.field.error.required"}),ie=X({uuid:"spa.modo.pay.qr.label.bancor.cards"}),ue=X({uuid:"spa.modo.pay.qr.label.another.cards"}),be=X({uuid:"".concat(i.h).concat(H)}),de=Object(A.a)(G("modo.payment.qr.input.cvv")),me=g.b.useState(!1),je=Object(r.a)(me,2),Oe=je[0],pe=je[1],fe=Object(s.c)(u.c.cardOptions),ve=Object(s.c)(u.c.accountOptions),_e=Object(s.c)(u.c.financingOptions),ge=Object(s.c)(u.c.financingPlanInfo),he=Object(s.c)(u.c.financingPlanDefaultInfo),Te=Object(s.c)(u.c.hasSelectedCardWithFinancingPlan),xe=Object(s.c)(u.c.qrCode),Ee=Object(s.c)(d.e.token),ye=Object(s.c)(u.c.encryptedCvv),Pe=Object(s.c)(u.c.paymentCard),Ae=Object(s.c)(u.c.paymentAccount),Me=Object(s.c)(u.c.isQrOpen),Se=Object(s.c)(u.c.hasCards),Ne=Object(s.c)(u.c.isPaymentWithCard),Ce=Object(s.c)(u.c.hasAccounts),Fe=Object(s.c)(u.c.totalAmount),Re=Object(s.c)(u.c.hasAmountChange),Ie=Object(s.c)(u.c.defaultPaymentCard),ke=Object(s.c)(u.c.defaultPaymentAccount),Le=Object(s.c)(u.c.isAlertCodeOTP),De=Se&&Ne&&de&&!ye,qe=Ne&&w&&Boolean(null===_e||void 0===_e?void 0:_e.length)&&Te;g.b.useEffect((function(){Le&&pe(!0)}),[Le]);var He=g.b.useCallback(function(){var e=Object(o.a)(Object(l.a)().mark((function e(t){var a,n;return Object(l.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(x.b)("".concat(t,"-cvv"));case 2:if(a=e.sent,(n=a.value)&&Number(n)!==i.ab){e.next=6;break}return e.abrupt("return");case 6:J(u.a.encryptedCvv(n));case 7:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),[J]);return g.b.useEffect((function(){var e;if(Se&&Ne){var t=null!==(e=null===Pe||void 0===Pe?void 0:Pe.lastFourDigits)&&void 0!==e?e:null===Ie||void 0===Ie?void 0:Ie.lastFourDigits;He(t)}}),[Ie,He,Se,Ne,Pe]),Object(F.jsx)(h.a,{className:C.a.qrPaymentFormList,name:k,tag:"ul",type:L,children:Object(F.jsxs)(g.b.Fragment,{children:[Object(F.jsxs)("li",{children:[Object(F.jsx)(_.b,{className:C.a.labelCommerce,tag:"span",uuid:"spa.modo.pay.qr.label.commerce"}),Object(F.jsx)(_.b,{tag:"span",children:D})]}),Object(F.jsx)("li",{children:Me?Object(F.jsx)(O.a,{fixedDecimalScale:!0,decimalScale:i.Jb,decimalSeparator:i.t,defaultValue:Fe,label:te,name:"amount",pattern:i.D,prefixCode:i.b,onBlur:Re?ze:void 0,onChange:Ze}):Object(F.jsxs)(g.b.Fragment,{children:[Object(F.jsx)(_.b,{className:C.a.labelAmount,tag:"span",uuid:"spa.modo.pay.qr.label.amount"}),Object(F.jsx)(_.b,{tag:"span",children:Object(F.jsx)(P.FormattedAmount,{amount:q,currency:be})})]})}),Boolean(B)&&Object(F.jsxs)(g.b.Fragment,{children:[Object(F.jsxs)("li",{children:[Object(F.jsx)(_.b,{className:C.a.labelInstallments,tag:"span",uuid:"spa.modo.pay.qr.label.instalments"}),Object(F.jsx)(_.b,{tag:"span",children:B})]}),Y&&!Me&&Object(F.jsxs)("li",{children:[Object(F.jsx)(_.b,{className:C.a.labelInstallmentsAmount,tag:"span",uuid:"spa.modo.pay.qr.instalment.info"}),Object(F.jsx)(_.b,{children:Object(F.jsx)(P.FormattedAmount,{amount:Y,currency:be})})]})]}),U&&Ye(),Object(F.jsxs)("li",{className:C.a.paymentMethods,children:[Object(F.jsx)(_.b,{className:C.a.labelPayment,tag:"span",uuid:"spa.modo.pay.qr.label.payment.method"}),Object(F.jsxs)(v.a,{name:"payment",value:We(),onChange:Xe,children:[Se&&Object(F.jsx)(p.a,{id:"1",label:Object(F.jsx)(_.b,{tag:"span",uuid:"spa.modo.pay.qr.label.card"}),name:"payment",value:"1"}),Ce&&Object(F.jsx)(p.a,{id:"2",isDisabled:B>i.fb,label:Object(F.jsx)(_.b,{tag:"span",uuid:"spa.modo.pay.qr.label.account"}),name:"payment",value:"2"})]})]}),Se&&Ne&&Be(),Ce&&!Ne&&Ue(),De&&Object(F.jsx)("li",{children:Object(F.jsx)(O.a,{format:K,label:le,name:"cvv",valueAsNumber:!1})}),qe&&Ke(),Object(F.jsxs)("footer",{className:C.a.footer,children:[Object(F.jsx)(m.a,{label:{uuid:"spa.form.continue"},onClick:$e}),Object(F.jsx)(m.a,{label:{uuid:"spa.form.cancel"},variant:"outlined",onClick:M})]}),Object(F.jsx)(E.a,{handleModal:et,isModalVisible:Oe,children:Je()})]})});function Ye(){var e=X({uuid:"spa.modo.pay.qr.label.plan"});return Object(F.jsx)("li",{children:Object(F.jsx)(_.b,{tag:"span",children:"".concat(e," ").concat(U)})})}function Be(){var e=null!==Pe&&void 0!==Pe?Pe:Ie,t=null!==e&&void 0!==e?e:{},a=t.label,l={label:a,value:t.value,searchKey:a};return Object(F.jsx)("li",{children:Object(F.jsx)(f.a,{defaultOption:l,label:ne,name:"paymentCard",options:fe?fe.map((function(e){var t=e.group,a=Object(c.a)(e,R),l=t===i.d?ie:ue;return Object(n.a)(Object(n.a)({},a),{},{group:l})})):void 0,onSelectOption:Ve})})}function Ue(){var e=null!==Ae&&void 0!==Ae?Ae:ke,t=null!==e&&void 0!==e?e:{},a=t.label,l=t.value,o={label:Ae?Ae.labelString:null===ke||void 0===ke?void 0:ke.label,value:l,searchKey:a};return Object(F.jsx)("li",{children:Object(F.jsx)(f.a,{defaultOption:o,label:ae,menuClassName:C.a.paymentAccount,name:"paymentAccount",options:ve?ve.map((function(e){var t=e.label,a=e.currency,l=Object(c.a)(e,I),o=function(e,t){var a=Object(r.a)(e,2),n=a[0],c=a[1],l=void 0===c?i.Sb:c;return Object(F.jsxs)("div",{children:[Object(F.jsx)(_.b,{tag:"p",children:n}),Object(F.jsx)(_.b,{className:C.a.labelSecondRow,tag:"p",children:Object(F.jsx)(P.FormattedAmount,{amount:l,currency:t})})]})}(t,a);return Object(n.a)(Object(n.a)({},l),{},{label:o,labelString:t[i.Sb]})})):void 0,onSelectOption:we})})}function Ve(e){var t=e.value,a=e.label,n=String(t).split(i.O)[i.Hb],c=String(a);ye&&J(u.a.cleanEncryptedCvv()),J(u.a.paymentCard({value:String(t),label:c,lastFourDigits:n})),ze()}function we(e){var t=e,a=t.value,n=t.label,c=t.labelString;J(u.a.paymentAccount({value:String(a),label:n,labelString:c}))}function Ke(){var e=null===_e||void 0===_e?void 0:_e.map((function(e){var t=e.label,a=e.value;return{label:Object(F.jsx)("span",{dangerouslySetInnerHTML:{__html:String(t)}}),value:a,searchKey:t}})),t={label:Object(F.jsx)("span",{dangerouslySetInnerHTML:{__html:String(null===_e||void 0===_e?void 0:_e[i.Sb].label)}}),value:String(null===_e||void 0===_e?void 0:_e[i.Sb].value),searchKey:String(null===_e||void 0===_e?void 0:_e[i.Sb].label)};return Object(F.jsxs)(g.b.Fragment,{children:[Object(F.jsx)("li",{children:Object(F.jsx)(f.a,{defaultOption:t,label:ce,name:"financingOption",options:e||[],onSelectOption:Qe})}),Ge()]})}function Qe(e){var t=e.value;J(u.a.financingPlan(String(t)))}function Ge(){var e,t,a,n=null!==(e=null===ge||void 0===ge?void 0:ge.total)&&void 0!==e?e:null===he||void 0===he?void 0:he.total,c=null!==(t=null===ge||void 0===ge?void 0:ge.CFT)&&void 0!==t?t:null===he||void 0===he?void 0:he.CFT,l=null!==(a=null===ge||void 0===ge?void 0:ge.TNA)&&void 0!==a?a:null===he||void 0===he?void 0:he.TNA,o=X({uuid:"spa.modo.pay.qr.label.cft",replace:c}),r=X({uuid:"spa.modo.pay.qr.label.tna",replace:l});return Object(F.jsxs)("li",{className:C.a.financingInfo,children:[Object(F.jsxs)("div",{className:C.a.totalAmount,children:[Object(F.jsx)(_.b,{tag:"span",uuid:"spa.modo.pay.qr.label.total.amount"}),Object(F.jsx)(_.b,{tag:"span",children:Object(F.jsx)(P.FormattedAmount,{amount:Number(n),currency:be})})]}),Object(F.jsxs)("div",{className:C.a.amountInterest,children:[Object(F.jsx)(_.b,{tag:"span",children:o}),Object(F.jsx)(_.b,{tag:"span",children:r})]})]})}function Je(){var e=Ne?"card":"account",t=(null===Pe||void 0===Pe?void 0:Pe.label)||(null===Ie||void 0===Ie?void 0:Ie.label),a=(null===Ae||void 0===Ae?void 0:Ae.labelString)||(null===ke||void 0===ke?void 0:ke.label),n=W.getValues().amount,c=ge?Number(null===ge||void 0===ge?void 0:ge.total):n,l=ge?Number(null===ge||void 0===ge?void 0:ge.total):q,o=Me?c:l,r=X({uuid:"spa.a11y.currency.ARS"}),s=X({uuid:"spa.modo.transaction.information.modal.body.".concat(e),replace:['<strong aria-label="'.concat(Object(b.e)(new Date),'">').concat(Q,"</strong>"),'<strong aria-label="'.concat(o," ").concat(r,'">').concat(Object(y.a)(o),"</strong>"),"<strong>".concat(Se&&Ne?t:a,"</strong>"),"<strong>".concat(D,"</strong>")]});return Object(F.jsx)(_.b,{children:Object(F.jsx)("span",{className:C.a.modalBody,dangerouslySetInnerHTML:{__html:s}})})}function Xe(e){var t=e.target.value;J(u.a.paymentMethod(t)),J(u.a.cleanFinancingPlan()),Re&&t===i.hb&&ze()}function We(){return Se&&Ne?i.hb:(J(u.a.paymentMethod(i.Kb)),i.Kb)}function Ze(){var e=W.getValues().amount;J(u.a.totalAmount(e)),J(e!==Fe?u.a.hasAmountChange(!0):u.a.hasAmountChange(!1))}function ze(){var e,t,a=W.getValues(),n=a.amount,c=a.paymentCard,l=a.payment,o=Me&&l===i.hb&&n>i.Sb,r=String(c).split(i.O)[i.fb]||(null===Pe||void 0===Pe?void 0:Pe.value.split(i.O)[i.fb]),s=null===(e=V.find((function(e){return e.tokenId===r})))||void 0===e?void 0:e.isDebitCard,b=(null===(t=V.find((function(e){return e.tokenId===r})))||void 0===t?void 0:t.printedName)===i.nb;o&&r&&!s&&!b&&J(u.b.financingPlans({token:String(Ee),codeQR:xe,latitude:S,longitude:N,medioPagoTokenId:[r],amount:n}))}function $e(){var e=Object.keys(ee),t=z(),a=e.length===i.fb&&"otp"===e[i.Sb];if(Array.isArray(e)&&e.length&&!a)!function(e,t){Object.entries(e).forEach((function(e){var a=Object(r.a)(e,2),n=a[0],c=a[1];n===t||Boolean(c)||$(n,{message:se},{shouldFocus:!0})}))}(t,"otp");else{var n=function(e){var t="cvv";if(De)return e[t]?String(e[t]).length!==i.Hb&&($(t,{message:oe},{shouldFocus:!0}),!0):($(t,{message:se},{shouldFocus:!0}),!0);return!1}(t),c=function(e){var t="amount";if(Me)return e[t]?!(e[t]>i.Sb)&&($(t,{message:re},{shouldFocus:!0}),!0):($(t,{message:se},{shouldFocus:!0}),!0);return!1}(t),l=function(e){var t="financingOption";if(Ne&&Te&&!e[t])return $(t,{message:se},{shouldFocus:!0}),!0;return!1}(t);n||l||c||et()}}function et(){Le&&J(u.a.cleanOtpError()),pe(!Oe)}}},774:function(e,t,a){e.exports={NAME_QR_PAYMENT_FORM_LIST:"QrPaymentFormList",TYPE_QR_PAYMENT_FORM_LIST:"Section"}},775:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_RADIO_GROUP:"RadioGroup",TYPE_RADIO_GROUP:"Element",NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",qrPaymentFormList:"_rules_qrPaymentFormList__34HWW",labelPayment:"_rules_labelPayment__p1deR",labelCommerce:"_rules_labelCommerce__2Hmno",labelAmount:"_rules_labelAmount__1KrxZ",labelInstallments:"_rules_labelInstallments__2G71f",labelInstallmentsAmount:"_rules_labelInstallmentsAmount__6Uch6",paymentMethods:"_rules_paymentMethods__29f_h",financingInfo:"_rules_financingInfo__1QdKL",totalAmount:"_rules_totalAmount__3Jg_c",amountInterest:"_rules_amountInterest__2tJAg",modalBody:"_rules_modalBody__18pkR",footer:"_rules_footer__3JaQx",labelSecondRow:"_rules_labelSecondRow__19Ny5",paymentAccount:"_rules_paymentAccount__qxMej"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=79.f8f70af5.chunk.js.map