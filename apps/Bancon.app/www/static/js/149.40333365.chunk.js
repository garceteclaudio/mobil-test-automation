(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[149,80,167,199,311],{356:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return p}));var a=n(0),r=n(5),o=(n(11),n(39)),i=n(8),s=n(149),l=n(187),u=n(270),c=n(488),_=n(489),E=n(38),d=n(82),b=n(147),T=n(494),m=n(535),O=n(99),N=n(428),h=n.n(N),j=n(10);function p(){var e=Object(E.c)().textGet,t=Object(i.b)(),n=Object(O.a)().getValueConfig,N=Object(i.c)(s.c.fetching),p=Object(i.c)(s.c.warning),P=Object(i.c)(b.c.exchangeToken),f=Object(i.c)(s.c.phoneCodeArea),g=Object(i.c)(s.c.phoneNumber),M=Object(m.a)(n),A=e({uuid:"spa.generic.field.error.required"}),C=e({uuid:"spa.onboarding.step5.code.label"}),R=o.e.object({validationCode:Object(l.d)(o.e.string.required(),A)});return N?Object(j.jsx)(u.a,{}):Object(j.jsx)(_.a,{"header-onBack":function(){t(s.a.cleanSetPhone())},"header-title":"spa.onboarding.step5.title",children:Object(j.jsx)("section",{children:Object(j.jsxs)(c.a,{schema:R,warnings:p,onSubmit:function(e){return L.apply(this,arguments)},children:[Object(j.jsx)(E.b,{className:h.a.validateTitle,uuid:"spa.onboarding.step5.text1"}),Object(j.jsx)("div",{className:h.a.inputContainerPhone,children:Object(j.jsx)(T.a,{label:C,maxLength:M,name:"validationCode",withSuggestions:!1,onChange:function(){t(s.a.cleanWarnings())}})}),Object(j.jsx)(d.a,{label:{uuid:"spa.form.continue"},loading:N,type:"submit"}),Object(j.jsxs)("div",{className:h.a.resendCode,children:[Object(j.jsx)(E.b,{tag:"span",uuid:"spa.onboarding.step5.text2"}),Object(j.jsx)(d.a,{kind:"plain",label:{uuid:"spa.onboarding.step5.button"},onClick:function(){return x.apply(this,arguments)}})]})]})})});function x(){return(x=Object(r.a)(Object(a.a)().mark((function e(){return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t(s.b.sendPhone({exchangeToken:P,mobilePhoneCodeArea:f,mobilePhoneNumber:g}));case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function L(){return(L=Object(r.a)(Object(a.a)().mark((function e(n){var r;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n.validationCode,e.next=3,t(s.b.sendCodePhone({exchangeToken:P,validationCode:r}));case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},428:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",presentation:"_rules_presentation__2rnDT",image:"_rules_image__2dV7m",containerText:"_rules_containerText__pu48C",title:"_rules_title__3WK5D",text:"_rules_text__3khoq",nextButton:"_rules_nextButton__3nv4A",skipButton:"_rules_skipButton__6WOgG",finishButton:"_rules_finishButton__VsgGK",subtitle:"_rules_subtitle__bTvVh",inputSelectContainer:"_rules_inputSelectContainer__2j7Df",submitButton:"_rules_submitButton__3FaKR",alert:"_rules_alert__laL5T",alertLottie:"_rules_alertLottie__2sgW7",termsAndConditions:"_rules_termsAndConditions__cNiMg",validateTitle:"_rules_validateTitle__2Nx1p",emailValue:"_rules_emailValue__yLDPW",noteEmail:"_rules_noteEmail__4AmC9",subtitleEmail:"_rules_subtitleEmail__2J0wM",inputContainerEmail:"_rules_inputContainerEmail__2O1ou",resendCode:"_rules_resendCode__lH6Jj",inputContainerPhone:"_rules_inputContainerPhone__1gKy1",securitySealContainer:"_rules_securitySealContainer__1LU5g",onboardingWelcome:"_rules_onboardingWelcome__ijVs1",downloadPrincipal:"_rules_downloadPrincipal__2thE8",logosContainer:"_rules_logosContainer__2uaXe"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var a=n(2),r=n(16),o=n(19),i=n(11),s=n(502),l=n(505),u=n(41),c=n(6),_=n(79),E=n(8),d=n(493),b=n.n(d),T=n(10),m=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],O=b.a.NAME_FORM,N=b.a.TYPE_FORM;function h(e){var t=e,n=t.ariaLabel,d=t.ariaLabelledby,b=t.schema,h=t.onSubmit,j=t.children,p=t.warnings,P=t.isRequiredToast,f=t.isResetForm,g=Object(o.a)(t,m),M=Object(E.b)(),A=Object(s.e)({resolver:Object(l.a)(b)}),C=A.handleSubmit,R=A.setError,x=A.formState.errors,L=A.reset,I=Object.keys(x),v=i.b.useState(!1),S=Object(r.a)(v,2),F=S[0],y=S[1],B=i.b.useCallback((function(){P&&F&&M(_.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:c.w})),y(!1)}),[M,P,F]),w=i.b.useCallback((function(){L()}),[L]);return i.b.useEffect((function(){p&&Object.keys(p.data).map((function(e){var t=e.startsWith(c.Nb)?e.slice(c.fb):e;return R(t,{message:p.data[e]},{shouldFocus:!1}),null})),I.length>c.Sb&&B(),f&&w()}),[I.length,f,w,R,B,p]),Object(T.jsx)(s.b,Object(a.a)(Object(a.a)(Object(a.a)({},A),g),{},{children:Object(T.jsx)(u.a,{noValidate:!0,"aria-label":n,"aria-labelledby":d,name:O,tag:"form",type:N,onSubmit:C(h,(function(){return y(!F)})),children:j})}))}h.useContext=s.f,h.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),r=n(19),o=(n(11),n(41)),i=n(136),s=n(82),l=n(38),u=n(101),c=n(491),_=n.n(c),E={name:_.a.NAME_EXTERNAL_CONTAINER,type:_.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},d=n(492),b=n.n(d),T=n(10),m=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function O(e){var t=e,n=t["header-onBack"],c=t["header-title"],_=t.children,E=t.name,d=t.type,O=t.headerClassName,N=t.showLogo,h=Object(r.a)(t,m),j=Boolean(n||c),p=Object(o.c)(!c&&b.a.onlyRow,O),P=Object(o.c)(N&&b.a.step1Logo),f=Object(o.c)(N&&b.a.hasLogo);return Object(T.jsxs)(u.a,{children:[N&&Object(T.jsx)("div",{className:P,children:Object(T.jsx)(i.a,{alt:"logo",uuid:"logo150Login"})}),Object(T.jsx)(o.a,Object(a.a)(Object(a.a)({name:E,tag:"article",type:d},h),{},{children:Object(T.jsxs)("article",{className:f,children:[j&&Object(T.jsxs)("header",{className:p,children:[n&&Object(T.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),c&&Object(T.jsx)(l.b,{tag:"h5",uuid:c})]}),_]})}))]})}O.defaultProps=E},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},494:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),r=n(19),o=n(16),i=n(11),s=n(50),l=n(41),u=n(488),c=n(498),_=n.n(c),E=n(10),d=["id","name","methods","defaultValue","pattern","withSuggestions","onChange","onBlur"],b=_.a.NAME_INPUT_FIELD,T=_.a.TYPE_INPUT_FIELD,m=i.b.memo((function(e){var t,n=i.b.useState(!1),u=Object(o.a)(n,2),c=u[0],_=u[1],m=e.id,O=e.name,N=e.methods,h=e.defaultValue,j=e.pattern,p=e.withSuggestions,P=void 0===p||p,f=e.onChange,g=e.onBlur,M=Object(r.a)(e,d),A=N.register,C=N.formState,R=N.setValue,x=N.clearErrors,L=C.errors,I="".concat(O),v=L[O];return i.b.useEffect((function(){h&&R(I,h),h||R(I,void 0),P&&_(!0)}),[h,I,R,P,_]),Object(E.jsx)(l.a,{name:b,type:T,children:Object(E.jsx)(s.TextField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({id:m||O},h&&{defaultValue:h}),v&&{error:null===(t=v.message)||void 0===t?void 0:t.toString()}),A(I,{onChange:function(e){f&&f(e);x([I])},onBlur:g})),M),{},{autoComplete:P?"on":"off",pattern:j,onKeyDown:function(e){e.target.value||c||_(!0)}}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function O(e){var t=u.a.useContext();return Object(E.jsx)(m,Object(a.a)({methods:t},e))}O.displayName=b},498:function(e,t,n){e.exports={NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element"}},535:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(6);function r(e){var t=Number(e("validationCodes.id.groups.length"));return Number(e("validationCodes.id.groupLength"))*t+t-a.fb}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=149.40333365.chunk.js.map