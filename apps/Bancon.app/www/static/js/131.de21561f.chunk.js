(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[131,82,284],{188:function(e,t,n){"use strict";n.r(t),n.d(t,"SPA_MODO_LINK_ACCOUNT",(function(){return g})),n.d(t,"default",(function(){return M}));var c=n(0),a=n(5),r=n(16),o=n(11),i=n(39),s=n(187),u=n(518),l=n(506),b=n(507),d=n(488),O=n(38),j=n(82),f=n(270),p=n(500),m=n(8),E=n(33),_=n(117),T=n(65),h=n(497),A=n(51),x=n(6),N=n(439),v=n.n(N),P=n(10),g="spa.modo.link.accounts";function M(){var e=Object(A.qb)(),t=Object(m.b)(),n=Object(A.sb)(A.n),N=Object(A.sb)(A.r),M=Object(A.sb)(A.x),R=Object(A.sb)(A.w),k=Object(A.sb)(A.C),I=Object(A.sb)(A.q),D=o.b.useState(!1),C=Object(r.a)(D,2),w=C[0],S=C[1],L=(0,Object(O.c)().textGet)({uuid:"spa.generic.field.error.required"}),F=i.e.object({linkAccount:Object(s.d)(i.e.string.required(),L)}),U=Object(m.c)(_.c.fetching),y=Object(m.c)(_.c.warning),B=Object(m.c)(_.c.accountListToLink),Y=Object(m.c)(_.c.deepLinkPath),H=Object(m.c)(_.c.isChangeFavoriteAccountFromOtherBank),K=Object(m.c)(_.c.isFavoriteAccountFromOtherBank),V=Object(m.c)(_.c.hasFinishedModoOnboarding),G=Object(m.c)(_.c.hasSentVerificationCode),z=Object(m.c)(E.e.token);return o.b.useEffect((function(){Y&&t(_.a.cleanDeepLinkData())}),[Y,t]),o.b.useEffect((function(){z&&(V||G?(t(_.b.getLinkAccounts({token:z})),S(!0)):e(k,{replace:!0}))}),[t,V,G,e,z,k]),o.b.useEffect((function(){(K||H)&&(K&&H||e(M))}),[K,e,M,H]),o.b.useEffect((function(){y&&t(T.a.add({id:y.code,message:y.message}))}),[y,t]),!U&&w&&B?Object(P.jsxs)(h.a,{withFooter:!0,className:v.a.linkAccount,hasNotifications:!1,"header-onBack":function(){if(Y)return void e(n);e(Object(u.a)(I,x.Z.MODO))},children:[Object(P.jsx)("header",{children:Object(P.jsx)(O.b,{tag:"h1",uuid:"spa.modo.register.title"})}),B.length>x.Sb?Object(P.jsxs)("section",{children:[Object(P.jsx)(O.b,{className:v.a.description,uuid:"".concat(g,".description")}),Object(P.jsxs)(d.a,{schema:F,onSubmit:function(e){return W.apply(this,arguments)},children:[Object(P.jsxs)("header",{children:[Object(P.jsx)(O.b,{uuid:"".concat(g,".account")}),Object(P.jsx)(O.b,{uuid:"".concat(g,".balance")})]}),Object(P.jsx)("section",{children:Object(P.jsx)(l.a,{name:"linkAccount",value:function(){var e=null===B||void 0===B?void 0:B.findIndex((function(e){return e.isFavouriteAccount}));return String(e)}(),children:B.map((function(e,t){var n=e.productType,c=e.accountCBU,a=e.amount,r=e.shortLabel;return Object(P.jsx)(b.a,{isFavorite:!0,id:c,label:J(n,r,a),name:"linkAccount",value:String(t)},c)}))})}),Object(P.jsx)("footer",{children:Object(P.jsx)(j.a,{label:{uuid:"spa.form.continue"},type:"submit"})})]})]}):Object(P.jsxs)("section",{className:v.a.withoutAccounts,children:[Object(P.jsx)(O.b,{uuid:"".concat(g,".add")}),Object(P.jsx)(j.a,{label:{uuid:"spa.form.accept"},onClick:function(){e(Object(u.a)(N,"legacy.menu.products.item.highProduct"))}}),Object(P.jsx)(j.a,{label:{uuid:"spa.form.cancel"},variant:"outlined",onClick:function(){e(n)}})]})]}):Object(P.jsx)(f.a,{});function W(){return(W=Object(a.a)(Object(c.a)().mark((function n(a){var r,o,i;return Object(c.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(z&&B){n.next=2;break}return n.abrupt("return");case 2:return r=a.linkAccount,o=B[Number(r)],i=o.shortLabel,t(_.a.favoriteAccountSelected(i)),n.next=8,t(_.b.sendLinkAccount({account:o,token:z,updateFavourite:!0}));case 8:e(R);case 9:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function J(e,t,n){var c=e===x.pb.CURRENT_ACCOUNT?"spa.modo.label.current.account":"spa.modo.label.saving.account";return Object(P.jsxs)("div",{className:v.a.accountInfo,children:[Object(P.jsxs)("div",{children:[Object(P.jsx)(O.b,{className:v.a.accountType,tag:"span",uuid:c}),Object(P.jsx)(O.b,{tag:"span",children:t})]}),Object(P.jsx)(p.a,{amount:n})]})}}},388:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return m}));n(11);var c=n(80),a=n(117),r=n(38),o=n(270),i=n(504),s=n(497),u=n(8),l=n(532),b=n(51),d=n(6),O=n(188),j=n(439),f=n.n(j),p=n(10);function m(){var e=Object(c.g)(),t=Object(b.sb)(b.v),n=Object(b.sb)(b.n),j=Object(u.c)(a.c.linkAccountDetail),m=Object(u.c)(a.c.favoriteAccountSelected);if(!j)return Object(p.jsx)(o.a,{});var E=j.idTransactionShort,_=j.dateExecution,T=j.statusTransaction,h=T!==d.F,A="".concat(O.SPA_MODO_LINK_ACCOUNT,h?".ticket.title.success":".ticket.title.rejected"),x="".concat(O.SPA_MODO_LINK_ACCOUNT,h?".ticket.description.success":".ticket.description.rejected");return Object(p.jsx)(s.a,{className:f.a.linkAccountDetail,hasNotifications:!1,"header-onBack":function(){e(t)},children:Object(p.jsx)(l.a,{hasModoLogo:!0,buttonText:"spa.form.continue",handleButton:function(){e(n)},responseDescription:x,responseTitle:A,titleText:"spa.modo.register.title",transactionStatus:T,children:Object(p.jsxs)("ul",{children:[Object(p.jsxs)("li",{children:[Object(p.jsx)(r.b,{tag:"span",uuid:"".concat(O.SPA_MODO_LINK_ACCOUNT,".ticket.code")}),Object(p.jsx)(r.b,{tag:"span",children:E})]}),Object(p.jsxs)("li",{children:[Object(p.jsx)(r.b,{tag:"span",uuid:"".concat(O.SPA_MODO_LINK_ACCOUNT,".ticket.date")}),Object(p.jsx)(i.a,{date:_})]}),Object(p.jsxs)("li",{children:[Object(p.jsx)(r.b,{tag:"span",uuid:"".concat(O.SPA_MODO_LINK_ACCOUNT,".ticket.status")}),Object(p.jsx)(r.b,{tag:"span",uuid:"spa.modo.ticket.status.".concat(T)})]}),Object(p.jsxs)("li",{children:[Object(p.jsx)(r.b,{tag:"span",uuid:"".concat(O.SPA_MODO_LINK_ACCOUNT,".account")}),Object(p.jsx)(r.b,{tag:"span",children:m})]})]})})})}},439:function(e,t,n){e.exports={NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",NAME_FORM:"Form",TYPE_FORM:"Element",NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element",linkAccount:"_rules_linkAccount__1AGyj",accountInfo:"_rules_accountInfo__1OuBR",accountType:"_rules_accountType__wKJJh",withoutAccounts:"_rules_withoutAccounts__LpBoE",keepAccounts:"_rules_keepAccounts__3OMSa",title:"_rules_title__Nuc-p",subtitle:"_rules_subtitle__2NTyW",linkAccountDetail:"_rules_linkAccountDetail__62gFi"}},499:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var c=n(0),a=n(5);function r(e){var t=e.filename,n=e.path,c=e.flags;return new Promise((function(e,a){var r;function o(e){a(e)}(r=window.cordova.file[n],new Promise((function(e,t){window.resolveLocalFileSystemURL(r,(function(t){e(t)}),(function(e){t(e)}))}))).then((function(n){var a=n;a.getFile(t,c,(function(t){var n=new FileReader;t.createWriter((function(c){e({fileEntry:t,dirEntry:a,fileReader:n,fileWriter:c,fileWrite:function(e){return new Promise((function(t,n){c.onwriteend=function(){return t(c)},c.onerror=function(e){return n(e)},c.write(e)}))},fileRemove:function(){return new Promise((function(e,n){t.remove((function(){return e(!0)}),(function(e){return n(e)}))}))}})}),o)}),o)}))}))}var o=n(36),i=n(26),s=n(28);function u(){return l.apply(this,arguments)}function l(){return(l=Object(a.a)(Object(c.a)().mark((function e(){var t;return Object(c.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(i.c)();case 2:if(e.sent&&cordova.plugins){e.next=5;break}throw i.a.CORDOVA_UNAVAILABLE;case 5:if(t=cordova.plugins.fileOpener2){e.next=8;break}throw i.a.PLUGIN_UNAVAILABLE;case 8:return e.abrupt("return",t);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function b(e){return d.apply(this,arguments)}function d(){return d=Object(a.a)(Object(c.a)().mark((function e(t){var n,a,r,o,l;return Object(c.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.contentType,a=t.fileName,r=t.withDialog,e.next=3,Object(i.c)();case 3:if(e.sent){e.next=6;break}throw i.a.CORDOVA_UNAVAILABLE;case 6:return e.next=8,u();case 8:return o=e.sent,l=r?o.open:o.showOpenWithDialog,e.abrupt("return",new Promise((function(e,t){try{l(a,n,{success:function(){e({code:s.a.SUCCESS,value:!0})},error:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){t("boolean"===typeof e?new s.b(s.a.ERROR,o.open.name,s.c):new s.b(s.a.ERROR,o.open.name,e.message))}))})}catch(c){t(new s.b(s.a.ERROR_UNKNOWN,o.open.name,s.c))}})));case 11:case"end":return e.stop()}}),e)}))),d.apply(this,arguments)}function O(){var e=Object(o.i)(),t=e.isDesktop,n=e.isUnknown,i=e.platform;function s(e){var t=e.split(".").pop();return"png"===t||"jpg"===t||"gif"===t||"bmp"===t?"image/".concat(t):"pdf"===t?"application/".concat(t):"doc"===t||"docx"===t?"application/msword":"ppt"===t||"pptx"===t?"application/vnd.ms-powerpoint":"xls"===t||"xlsx"===t?"application/vnd.ms-excel":"xlsm"===t?"application/vnd.ms-excel.sheet.macroEnabled.12":"txt"===t?"text/plain":"zip"===t?"application/zip":void 0}return function(){var e=Object(a.a)(Object(c.a)().mark((function e(a,u){var l,d,O,j,f,p,m;return Object(c.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(l=i===o.b.CORDOVA_ANDROID,!(d=s(a))){e.next=19;break}if(!t&&!n){e.next=9;break}return(O=document.createElement("a")).href=window.URL.createObjectURL(u),O.download=a,O.click(),e.abrupt("return");case 9:return e.next=11,r({filename:a,path:l?"externalApplicationStorageDirectory":"dataDirectory",flags:{create:!0,exclusive:!1}});case 11:return j=e.sent,f=j.fileWrite,p=j.fileEntry,e.next=16,f(u);case 16:return m={contentType:d,fileName:p.nativeURL,withDialog:!0},e.next=19,b(m);case 19:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}()}},501:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var c=512,a=0;function r(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c,r=window.atob(e),o=[],i=a;i<r.length;i+=n){for(var s=r.slice(i,i+n),u=new Array(s.length),l=a;l<s.length;l++)u[l]=s.charCodeAt(l);o.push(new Uint8Array(u))}return new Blob(o,{type:t})}},506:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var c=n(2),a=n(19),r=n(11),o=n(50),i=n(41),s=n(488),u=n(509),l=n.n(u),b=n(10),d=["id","name","children","methods","value","onChange"],O=l.a.NAME_RADIO_GROUP,j=l.a.TYPE_RADIO_GROUP,f={id:O},p=r.b.memo((function(e){var t=e.id,n=e.name,s=e.children,u=e.methods,l=e.value,f=e.onChange,p=Object(a.a)(e,d),m=u.formState,E=u.setValue,_=m.errors[n];return r.b.useEffect((function(){l&&E(n,l,{shouldValidate:!0})}),[l,n,E]),Object(b.jsx)(i.a,{name:O,type:j,children:Object(b.jsx)(o.RadioGroup,Object(c.a)(Object(c.a)(Object(c.a)({id:t,name:n,value:l,onChange:function(e){E(n,e.target.value),f&&f(e)}},_&&{error:String(_.message)}),p),{},{children:s}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function m(e){var t=s.a.useContext();return Object(b.jsx)(p,Object(c.a)({methods:t},e))}m.defaultProps=f},507:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var c=n(2),a=n(19),r=n(11),o=n(50),i=n(41),s=n(488),u=n(510),l=n.n(u),b=(n(511),n(10)),d=["id","name","methods","onChange"],O=l.a.NAME_INPUT_RADIO,j=l.a.TYPE_INPUT_RADIO,f={id:O},p=r.b.memo((function(e){var t=e.id,n=e.name,r=e.methods,s=e.onChange,u=Object(a.a)(e,d),l=r.register,f=r.formState,p=r.clearErrors,m=f.errors,E="".concat(n),_=m[n];return Object(b.jsx)(i.a,{name:O,type:j,children:Object(b.jsx)(o.Radio,Object(c.a)(Object(c.a)(Object(c.a)({id:t},_&&{error:String(_.message)}),l(E)),{},{name:n,onChange:function(e){s&&s(e),p([E])}},u))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function m(e){var t=s.a.useContext();return Object(b.jsx)(p,Object(c.a)({methods:t},e))}m.defaultProps=f},508:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var c=n(6);function a(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"pdf";if("string"===typeof e&&e.trim()){var n=e.trim().toLowerCase().replace(/[^a-zA-Z0-9]/g,c.Nb);return"".concat(n,".").concat(t)}var a=new Date,r=a.getMonth()+c.fb,o=(r<c.Fb?c.Ub:c.D)+r,i=a.getDate(),s=(i<c.Fb?c.Ub:c.D)+i;return"".concat(a.getFullYear(),"_").concat(o,"_").concat(s,".").concat(t)}},509:function(e,t,n){e.exports={NAME_RADIO_GROUP:"RadioGroup",TYPE_RADIO_GROUP:"Element"}},510:function(e,t,n){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element"}},511:function(e,t,n){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider"}},532:function(e,t,n){"use strict";n.d(t,"a",(function(){return g}));var c=n(16),a=n(11),r=n(41),o=n(36),i=n(50),s=n(6),u=n(8),l=n(33),b=n(271),d=n(501),O=n(154),j=n(499),f=n(38),p=n(82),m=n(533),E=n.n(m),_=n(534),T=n.n(_),h=n(508),A=n(270),x=n(10),N=T.a.NAME_TICKET,v=T.a.TYPE_TICKET,P={hasModoLogo:!1,isDownloadable:!1,isShareable:!1,navigateButton:{},responseDescription:s.D};function g(e){var t=e,n=t.idTransaction,s=t.buttonText,m=t.children,_=t.className,T=t.transactionStatus,P=t.responseTitle,g=t.responseDescription,M=t.navigateButton,R=t.hasModoLogo,k=t.titleText,I=t.handleButton,D=t.isDownloadable,C=t.isShareable,w=Object(u.b)(),S=Object(j.a)(),L=Object(o.i)().isDesktop,F=a.b.useState(!1),U=Object(c.a)(F,2),y=U[0],B=U[1],Y=a.b.useState(!1),H=Object(c.a)(Y,2),K=H[0],V=H[1],G=Object(u.c)(l.e.token),z=Object(u.c)(O.c.fetching),W=Object(u.c)(O.c.fetchedFile),J=Object(u.c)(O.c.filename),q=Object(u.c)(O.c.content),X=D||C,Z=Object(h.a)(J),Q="string"===typeof k;a.b.useEffect((function(){w(O.a.clean())}),[w]),a.b.useEffect((function(){(K||y)&&G&&(W||J||q?(J&&q&&(y&&(S(Z,Object(d.a)(q)),B(!1)),K&&(Object(b.a)({options:{message:J,subject:J},files:[{fileName:Z,base64File:q}]}),V(!1))),w(O.a.setFetchedFile(!1))):w(O.b.generatePdf({token:G,idTransaction:n})))}),[q,w,y,W,J,Z,S,n,K,G]);var $={FINISHED:Object(x.jsx)(i.Icon,{name:"success",size:"large",stroke:"success"}),PROCESSING:Object(x.jsx)(i.Icon,{name:"clock",size:"large",stroke:"info"}),PENDING:Object(x.jsx)(i.Icon,{name:"clock",size:"large",stroke:"info"}),FAILED:Object(x.jsx)(i.Icon,{name:"error",size:"large",stroke:"error"}),ANNULED:Object(x.jsx)(i.Icon,{name:"warning",size:"large",stroke:"warning"}),RETURNED:Object(x.jsx)(i.Icon,{name:"warning",size:"large",stroke:"warning"})};return z?Object(x.jsx)(A.a,{}):Object(x.jsxs)(r.a,{className:_,name:N,tag:"section",type:v,children:[Object(x.jsx)("header",{children:Q?Object(x.jsx)(f.b,{className:E.a.title,fallback:k,tag:"h1",uuid:k}):k}),Object(x.jsxs)("section",{children:[X&&Object(x.jsxs)("div",{className:E.a.actions,children:[C&&!L&&Object(x.jsx)(p.a,{icon:"share",kind:"icon",label:{uuid:"spa.a11y.buttons.share"},size:"small",variant:"text",onClick:function(){V(!0)}}),D&&Object(x.jsx)(p.a,{icon:"download",kind:"icon",label:{uuid:"spa.a11y.buttons.download"},size:"small",variant:"text",onClick:function(){B(!0)}})]}),Object(x.jsx)("div",{className:E.a.responseIcon,children:$[T]}),Object(x.jsx)(f.b,{className:E.a.responseTitle,fallback:P,tag:"h2",uuid:P}),g&&Object(x.jsx)(f.b,{className:E.a.responseDescription,tag:"h3",uuid:g}),(null===M||void 0===M?void 0:M.label)&&(null===M||void 0===M?void 0:M.handleClick)&&Object(x.jsx)(p.a,{className:E.a.navigateButton,kind:"plain",label:M.label,type:"button",onClick:M.handleClick}),m,R&&Object(x.jsx)("div",{className:E.a.responseIcon,children:Object(x.jsx)(i.Icon,{name:"modo"})})]}),Object(x.jsx)("footer",{children:Object(x.jsx)(p.a,{label:{uuid:s},onClick:I})})]})}g.defaultProps=P},533:function(e,t,n){e.exports={NAME_TICKET:"Ticket",TYPE_TICKET:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",title:"_rules_title__1SNPA",actions:"_rules_actions__30efJ",responseIcon:"_rules_responseIcon__1McyH",responseTitle:"_rules_responseTitle__3H3Id",responseDescription:"_rules_responseDescription__1NvkT",navigateButton:"_rules_navigateButton__Dlve9"}},534:function(e,t,n){e.exports={NAME_TICKET:"Ticket",TYPE_TICKET:"Section"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=131.de21561f.chunk.js.map