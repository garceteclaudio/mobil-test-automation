(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[238],{151:function(n,t,e){"use strict";e.d(t,"a",(function(){return l.a})),e.d(t,"c",(function(){return v})),e.d(t,"b",(function(){return u.a})),e.d(t,"d",(function(){return O}));var a=e(9),r=e(52),o=e(2),i=e(1),c=e(12),u=e(61),l=e(71),f=e(31),d=e(3),s=e(6),b=Object(i.d)(r.a,(function(n){var t=n.addCase,e=n.addMatcher;t(l.a.clean,(function(){return Object(o.a)({},r.a)})),t(u.a.listLoansForWidget.fulfilled,(function(n,t){var e=t.payload;if(n.fetching=!1,n.error=r.a.error,e){var a=e.data,o=a.loans,i=a.offerLoansNotification;n.loans=o,n.offerLoansNotification=i}})),t(u.a.getLoanOffer.fulfilled,(function(n,t){var e=t.payload;if(n.fetchingOffer=!1,e){var a=e.data.loanOffer;n.loanOffer=a}})),t(u.a.getLoanOffer.pending,(function(n){n.fetchingOffer=!0})),t(u.a.getLoanOffer.rejected,(function(n){n.fetchingOffer=!1})),t(u.a.searchLoanTerms.fulfilled,(function(n,t){var e=t.payload;if(n.fetching=!1,e){var a=e.data.loanTerms;n.loanTerms=a}})),t(u.a.getLoanDetailTerms.fulfilled,(function(n,t){var e=t.payload;if(n.fetching=!1,e){var a=e.data.loanSimulation;n.loanSimulation=a}})),t(u.a.createLoan.fulfilled,(function(n,t){var e,a=t.payload;n.fetching=!1,a&&(n.idCreateLoanTransaction=null!==(e=a.idTransaction)&&void 0!==e?e:s.D)})),t(l.a.setContractObject,(function(n,t){var e=t.payload;n.contract=e})),t(l.a.setLoanAmount,(function(n,t){var e=t.payload;n.amount=e})),t(l.a.setPreTicket,(function(n,t){var e=t.payload;n.isPreTicket=e})),t(u.a.getLoanList.fulfilled,(function(n,t){var e=t.payload;if(n.fetching=!1,n.fetchingLoanList=!1,e){var a=e.data.loans;n.loanList=a}})),t(u.a.getLoanList.pending,(function(n){n.fetchingLoanList=!0})),t(u.a.getLoanList.rejected,(function(n){n.fetchingLoanList=!1})),t(l.a.setLoanTerm,(function(n,t){var e=t.payload;n.selectedLoanTerm=e})),t(l.a.setTyCOffer,(function(n,t){var e=t.payload;n.isTyCOffer=e})),t(l.a.cleanStep1,(function(n){n.loanOffer=r.a.loanOffer})),t(l.a.cleanStep2,(function(n){n.contract=r.a.contract})),t(l.a.cleanStep3,(function(n){n.amount=r.a.amount})),t(l.a.cleanStep4,(function(n){n.warning=r.a.warning,n.selectedLoanTerm=r.a.selectedLoanTerm})),t(l.a.cleanReceipt,(function(n){n.filename=r.a.filename,n.content=r.a.content})),t(u.a.listInstallments.fulfilled,(function(n,t){var e=t.payload;if(n.fetching=!1,e){var a=e.data.installments;n.installments=a}})),t(u.a.getLoanDetail.fulfilled,(function(n,t){var e=t.meta.arg.idLoan,a=t.payload;if(n.fetching=!1,a){var r=a.data,o=r.loanGeneral,i=r.loanInstallments,c=r.pendingInstallment;n.loanGeneral=o,n.loanInstallments=i,n.pendingInstallment=c,n.loanId=e}})),t(u.a.downloadInstallment.fulfilled,(function(n,t){var e=t.payload;if(n.fetching=!1,e){var a=e.data,r=a.filename,o=a.content;n.filename=r,n.content=o}})),t(u.a.downloadSettlmentReceipt.fulfilled,(function(n,t){var e=t.payload;if(n.fetching=!1,e){var a=e.data,r=a.filename,o=a.content;n.filename=r,n.content=o}})),t(u.a.downloadLastReceipt.fulfilled,(function(n,t){var e=t.payload;if(n.fetching=!1,e){var a=e.data,r=a.filename,o=a.content;n.filename=r,n.content=o}})),t(u.a.downloadContractFile.fulfilled,(function(n,t){var e=t.payload;if(n.fetching=!1,e){var a=e.data,r=a.filename,o=a.content;n.filename=r,n.content=o}})),e((function(n){return Object(c.b)(n,r.b)}),(function(n){n.fetchingOffer&&n.fetchingLoanList||(n.fetching=!0),n.error=r.a.error})),e((function(n){return Object(c.c)(n,r.b)}),(function(n,t){var e=t.payload;n.fetching=!1;var a=e.code;Object(d.x)(f.l,a)?n.warning=e:n.error=e}))}));function v(n){return n[r.b]}v.offerLoansNotification=Object(i.e)(v,(function(n){return n.offerLoansNotification})),v.loans=Object(i.e)(v,(function(n){return n.loans})),v.fetching=Object(i.e)(v,(function(n){return n.fetching})),v.warning=Object(i.e)(v,(function(n){return n.warning})),v.error=Object(i.e)(v,(function(n){return n.error})),v.offer=Object(i.e)(v,(function(n){return n.loanOffer})),v.contracts=Object(i.e)(v,(function(n){var t;return null===(t=n.loanOffer)||void 0===t?void 0:t.contractObjects})),v.selectedContract=Object(i.e)(v,(function(n){return n.contract})),v.loanAmount=Object(i.e)(v,(function(n){return n.amount})),v.loanTerms=Object(i.e)(v,(function(n){return n.loanTerms})),v.loanSimulation=Object(i.e)(v,(function(n){return n.loanSimulation})),v.selectedLoanTerm=Object(i.e)(v,(function(n){return n.selectedLoanTerm})),v.isStep1=Object(i.e)(v,(function(n){return Boolean(!n.contract)})),v.isStep2=Object(i.e)(v,(function(n){return Boolean(n.contract&&!n.amount)})),v.isStep3=Object(i.e)(v,(function(n){return Boolean(n.amount&&n.contract&&!n.selectedLoanTerm)})),v.isStep4=Object(i.e)(v,(function(n){return Boolean(n.amount&&n.contract&&n.selectedLoanTerm&&!n.idCreateLoanTransaction&&!n.error)})),v.isStep5Pre=Object(i.e)(v,(function(n){return Boolean(n.amount&&n.contract&&n.selectedLoanTerm&&n.isTyCOffer&&!n.isPreTicket&&(n.idCreateLoanTransaction||n.error))})),v.isStep5=Object(i.e)(v,(function(n){return Boolean(n.amount&&n.contract&&n.selectedLoanTerm&&n.isTyCOffer&&n.isPreTicket&&(n.idCreateLoanTransaction||n.error))})),v.minAmount=Object(i.e)(v,(function(n){var t;return null===(t=n.loanOffer)||void 0===t?void 0:t.loanProductMinAmountNet})),v.maxAmount=Object(i.e)(v,(function(n){var t;return null===(t=n.loanOffer)||void 0===t?void 0:t.loanProductMaxAmountNet})),v.loanList=Object(i.e)(v,(function(n){return n.loanList})),v.loanDetail=Object(i.e)(v,(function(n){return n.loanGeneral})),v.pendingInstallment=Object(i.e)(v,(function(n){return n.pendingInstallment})),v.loanInstallments=Object(i.e)(v,(function(n){return n.loanInstallments})),v.loanId=Object(i.e)(v,(function(n){return n.loanId})),v.filename=Object(i.e)(v,(function(n){return n.filename})),v.content=Object(i.e)(v,(function(n){return n.content})),v.idCreateLoanTransaction=Object(i.e)(v,(function(n){return n.idCreateLoanTransaction})),v.fetchingOffer=Object(i.e)(v,(function(n){return n.fetchingOffer})),v.fetchingLoanList=Object(i.e)(v,(function(n){return n.fetchingLoanList})),v.installments=Object(i.e)(v,(function(n){return n.installments}));var O=Object(a.a)({},r.b,b)},156:function(n,t,e){"use strict";e.d(t,"c",(function(){return j})),e.d(t,"b",(function(){return v})),e.d(t,"a",(function(){return d})),e.d(t,"d",(function(){return y}));var a=e(9),r=e(6),o="qrpayment",i={fetching:!1,error:void 0,warning:void 0,qrInfo:void 0,isAlertCodeOTP:!1,qrPending:!1,invalidQr:!1,notifyNotPay:!1,notifyAlreadyProcessed:!1,qrCode:r.D,planList:void 0,financingPlan:void 0,encryptedCvv:void 0,paymentDetail:void 0,paymentMethod:r.hb,paymentCard:void 0,paymentAccount:void 0,hasAmountChange:!1,totalAmount:0,idTransaction:r.D},c=e(2),u=e(12),l=e(1),f=e(77),d=Object(l.b)(o,["clean","qrCode","paymentMethod","paymentCard","paymentAccount","financingPlan","cleanFinancingPlan","encryptedCvv","cleanEncryptedCvv","cleanPaymentDetail","cleanOtpError","hasAmountChange","totalAmount"]),s=e(0),b=e(5),v=Object(l.c)(o,{parseQr:function(n,t){return Object(b.a)(Object(s.a)().mark((function e(){var a,r;return Object(s.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.rejectWithValue,e.next=3,Object(f.c)(Object(c.a)({},n));case 3:if(r=e.sent){e.next=6;break}return e.abrupt("return",null);case 6:if(!Object(f.e)(r)){e.next=8;break}return e.abrupt("return",a(Object(c.a)(Object(c.a)({},r),f.b[r.code])));case 8:return e.abrupt("return",r);case 9:case"end":return e.stop()}}),e)})))()},financingPlans:function(n,t){return Object(b.a)(Object(s.a)().mark((function e(){var a,r;return Object(s.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.rejectWithValue,e.next=3,Object(f.a)(Object(c.a)({},n));case 3:if(r=e.sent){e.next=6;break}return e.abrupt("return",null);case 6:if(!Object(f.e)(r)){e.next=8;break}return e.abrupt("return",a(Object(c.a)(Object(c.a)({},r),f.b[r.code])));case 8:return e.abrupt("return",r);case 9:case"end":return e.stop()}}),e)})))()},sendQrPayment:function(n,t){return Object(b.a)(Object(s.a)().mark((function e(){var a,r;return Object(s.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.rejectWithValue,e.next=3,Object(f.d)(n);case 3:if(r=e.sent){e.next=6;break}return e.abrupt("return",null);case 6:if(!Object(f.e)(r)){e.next=8;break}return e.abrupt("return",a(Object(c.a)(Object(c.a)({},r),f.b[r.code])));case 8:return e.abrupt("return",r);case 9:case"end":return e.stop()}}),e)})))()}}),O=e(3),p=Object(l.d)(i,(function(n){var t=n.addCase,e=n.addMatcher;t(d.clean,(function(){return Object(c.a)({},i)})),t(d.cleanPaymentDetail,(function(n){n.paymentDetail=i.paymentDetail})),t(d.cleanEncryptedCvv,(function(n){n.encryptedCvv=i.encryptedCvv})),t(d.cleanFinancingPlan,(function(n){n.financingPlan=i.financingPlan})),t(d.encryptedCvv,(function(n,t){var e=t.payload;n.encryptedCvv=e})),t(d.qrCode,(function(n,t){var e=t.payload;n.qrCode=e})),t(d.paymentMethod,(function(n,t){var e=t.payload;n.paymentMethod=e})),t(d.paymentCard,(function(n,t){var e=t.payload;n.paymentCard=e})),t(d.hasAmountChange,(function(n,t){var e=t.payload;n.hasAmountChange=e})),t(d.totalAmount,(function(n,t){var e=t.payload;n.totalAmount=e})),t(d.paymentAccount,(function(n,t){var e=t.payload;n.paymentAccount=e})),t(d.financingPlan,(function(n,t){var e=t.payload;n.financingPlan=e})),t(v.parseQr.fulfilled,(function(n,t){var e=t.payload;if(n.fetching=!1,n.error=i.error,n.warning=i.warning,e){var a=e.data,r=a.qrParse,o=a.notifySeller,c=a.invalidQr,u=a.notifyNotPay,l=a.notifyAlreadyProcessed;n.qrPending=Boolean(o),n.notifyNotPay=Boolean(u),n.notifyAlreadyProcessed=Boolean(l),n.invalidQr=Boolean(c),r&&(n.qrInfo=r)}})),t(v.financingPlans.fulfilled,(function(n,t){var e=t.payload;if(n.fetching=!1,n.error=i.error,n.warning=i.warning,e){var a=e.data.planList;n.planList=a}})),t(v.sendQrPayment.fulfilled,(function(n,t){var e,a=t.payload;if(n.fetching=!1,n.error=i.error,n.warning=i.warning,a){var o=a.data,c=o.saveCvv;n.idTransaction=null!==(e=a.idTransaction)&&void 0!==e?e:r.D,n.paymentDetail=o,n.encryptedCvv=c}})),t(d.cleanOtpError,(function(n){n.isAlertCodeOTP=i.isAlertCodeOTP})),e((function(n){return Object(u.b)(n,o)}),(function(n){n.fetching=!0,n.error=i.error,n.warning=i.warning})),e((function(n){return Object(u.c)(n,o)}),(function(n,t){var e=t.payload;n.fetching=!1,Object(O.x)(f.b,e.code)?n.warning=e:n.error=e;var a=e.code;n.isAlertCodeOTP=a===O.k}))})),m=e(16);function j(n){return n[o]}j.qrCode=Object(l.e)(j,(function(n){return n.qrCode})),j.planList=Object(l.e)(j,(function(n){return n.planList})),j.paymentMethod=Object(l.e)(j,(function(n){return n.paymentMethod})),j.isQrOpen=Object(l.e)(j,(function(n){var t;return(null===(t=n.qrInfo)||void 0===t?void 0:t.stateQrId)===r.fb})),j.isPaymentWithCard=Object(l.e)(j,(function(n){return n.paymentMethod===r.hb})),j.hasCards=Object(l.e)(j,(function(n){var t;return Number(null===(t=n.qrInfo)||void 0===t?void 0:t.cards.length)>r.Sb})),j.paymentCard=Object(l.e)(j,(function(n){return n.paymentCard})),j.hasAccounts=Object(l.e)(j,(function(n){var t;return Number(null===(t=n.qrInfo)||void 0===t?void 0:t.accounts.length)>r.Sb})),j.paymentAccount=Object(l.e)(j,(function(n){return n.paymentAccount})),j.cardOptions=Object(l.e)(j,(function(n){var t,e,a,o;return null!==(t=n.qrInfo)&&void 0!==t&&t.installments&&(null===(e=n.qrInfo)||void 0===e?void 0:e.installments)>r.fb?null===(o=n.qrInfo)||void 0===o?void 0:o.cards.filter((function(n){return!n.isDebitCard})).map((function(n){var t=n.label,e=n.tokenId,a=n.printedName,o=n.lastFourDigits,i=n.bin,c=n.nameType;return{isDisabled:!1,value:r.O+e+r.O+a+r.O+o+r.O+i,label:t,searchKey:t,group:c}})):null===(a=n.qrInfo)||void 0===a?void 0:a.cards.map((function(n){var t=n.label,e=n.tokenId,a=n.printedName,o=n.lastFourDigits,i=n.bin,c=n.nameType,u=[e,a,o,i].join(r.O);return{value:"".concat(r.O).concat(u),label:t,searchKey:t,group:c}}))})),j.accountOptions=Object(l.e)(j,(function(n){var t;return null===(t=n.qrInfo)||void 0===t?void 0:t.accounts.map((function(n){var t=n.label,e=n.uriAccount,a=n.tokenId,o=n.cbu,i=n.productName,c=n.currency,u=n.balance,l=[e,o,i,c,a].join(r.O),f=[t,u];return{value:"".concat(r.O).concat(l).concat(r.O),balance:u,label:f,searchKey:t,currency:c}}))})),j.defaultPaymentCard=Object(l.e)(j,(function(n){var t,e=null===(t=n.qrInfo)||void 0===t?void 0:t.cards[r.Sb];if(!e)return null;var a=e.tokenId,o=e.printedName,i=e.lastFourDigits,c=e.bin,u=e.label,l=[a,o,i,c].join(r.O);return{value:"".concat(r.O).concat(l),label:u,lastFourDigits:i}})),j.defaultPaymentAccount=Object(l.e)(j,(function(n){var t,e=null===(t=n.qrInfo)||void 0===t?void 0:t.accounts[r.Sb];if(!e)return null;var a=e.uriAccount,o=e.cbu,i=e.productName,c=e.currency,u=e.tokenId,l=e.label,f=[a,o,i,c,u].join(r.O);return{value:"".concat(r.O).concat(f).concat(r.O),label:l}})),j.financingOptions=Object(l.e)(j,(function(n){var t;return null===(t=n.planList)||void 0===t?void 0:t.filter((function(t){var e;return t.id.split(r.O)[r.Sb]===(null===(e=n.paymentCard)||void 0===e?void 0:e.value.split(r.O)[r.fb])})).map((function(n){var t=n.id,e=n.label;return{value:t,label:e,searchKey:e}}))})),j.hasSelectedCardWithFinancingPlan=Object(l.e)(j,(function(n){var t;return null===(t=n.planList)||void 0===t?void 0:t.some((function(t){var e;return t.id.split(r.O)[r.Sb]===(null===(e=n.paymentCard)||void 0===e?void 0:e.value.split(r.O)[r.fb])}))})),j.financingPlanInfo=Object(l.e)(j,(function(n){if(n.financingPlan)return{total:n.financingPlan.split(r.O)[r.Bb],CFT:n.financingPlan.split(r.O)[r.Ab],TNA:n.financingPlan.split(r.O)[r.A]}})),j.financingPlanDefaultInfo=Object(l.e)(j,(function(n){if(n.planList&&n.planList.length>r.Sb){var t=Object(m.a)(n.planList,1)[0];return{total:t.id.split(r.O)[r.Bb],TNA:t.id.split(r.O)[r.Ab],CFT:t.id.split(r.O)[r.A]}}})),j.qrInfo=Object(l.e)(j,(function(n){return n.qrInfo})),j.qrPending=Object(l.e)(j,(function(n){return n.qrPending})),j.invalidQr=Object(l.e)(j,(function(n){return n.invalidQr})),j.notifyAlreadyProcessed=Object(l.e)(j,(function(n){return n.notifyAlreadyProcessed})),j.notifyNotPay=Object(l.e)(j,(function(n){return n.notifyNotPay})),j.paymentDetail=Object(l.e)(j,(function(n){return n.paymentDetail})),j.encryptedCvv=Object(l.e)(j,(function(n){return n.encryptedCvv})),j.totalAmount=Object(l.e)(j,(function(n){return n.totalAmount})),j.hasAmountChange=Object(l.e)(j,(function(n){return n.hasAmountChange})),j.fetching=Object(l.e)(j,(function(n){return n.fetching})),j.error=Object(l.e)(j,(function(n){return n.error})),j.warning=Object(l.e)(j,(function(n){return n.warning})),j.idTransaction=Object(l.e)(j,(function(n){return n.idTransaction})),j.isAlertCodeOTP=Object(l.e)(j,(function(n){return n.isAlertCodeOTP}));var y=Object(a.a)({},o,p)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=main~8b04f57a.3edbbc8d.chunk.js.map