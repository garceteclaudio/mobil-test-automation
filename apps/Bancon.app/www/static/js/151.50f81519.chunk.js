(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[151,80,167,199,314],{311:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return C}));var a=n(0),o=n(5),i=n(16),r=n(11),s=n(39),c=n(8),l=n(118),u=n(187),d=n(6),E=n(79),_=n(147),b=n(38),T=n(488),m=n(82),O=n(494),N=n(489),f=n(429),j=n.n(f),h=n(10);function C(){var e=Object(c.b)(),t=Object(b.c)().textGet,n=Object(c.c)(_.c.exchangeToken),f=Object(c.c)(l.c.fetching),C=Object(c.c)(l.c.warning),p=Object(c.c)(l.c.sentData),M=p.replace(p,"<b>".concat(p,"</b>")),A=Object(c.c)(l.c.sentChannelVerificationCode),P=Object(c.c)(l.c.invitationCode),R=t({uuid:"spa.generic.field.error.required"}),x=r.b.useState(!1),g=Object(i.a)(x,2),v=g[0],S=g[1],L=t({uuid:"spa.enrollment.byCode.step3.verificationCode.input.label"}),y=s.e.object({verificationCode:Object(u.d)(s.e.string.required(),R)}),I=r.b.useCallback((function(){e(E.a.clean()),e(E.a.set({kind:"SUCCESS",text:{uuid:"spa.enrollment.byCode.step3.verificationCode.alert.text",replace:M},duration:d.v}))}),[e,M]);return r.b.useEffect((function(){(p||v)&&(I(),S(!1))}),[I,p,v]),Object(h.jsx)(N.a,{"header-onBack":function(){e(l.a.setInvitationCode(d.D)),e(l.a.cleanSentData()),e(E.a.clean())},"header-title":"spa.signup.title",children:Object(h.jsx)("section",{children:Object(h.jsxs)(T.a,{schema:y,warnings:C,onSubmit:function(e){return F.apply(this,arguments)},children:[Object(h.jsx)(b.b,{className:j.a.byCodeInvitationCode,uuid:"spa.enrollment.byCode.step3.subtitle"}),Object(h.jsx)(O.a,{withoutSpaces:!0,id:"verification",label:L,maxLength:d.Bb,name:"verificationCode",onChange:function(){e(l.a.cleanWarnings())}}),Object(h.jsx)(m.a,{className:j.a.submitButton,label:{uuid:"spa.form.continue"},loading:f,type:"submit"}),Object(h.jsxs)("div",{className:j.a.alignInvitationCode,children:[Object(h.jsx)(b.b,{tag:"span",uuid:"spa.enrollment.byCode.notReceive.text"}),Object(h.jsx)(m.a,{className:j.a.haveCode,kind:"plain",label:{uuid:"spa.enrollment.byCode.resend.link"},onClick:function(){return k.apply(this,arguments)}})]})]})})});function F(){return(F=Object(o.a)(Object(a.a)().mark((function t(o){var i;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return i=o.verificationCode,e(l.a.setVerificationCode(i)),t.next=4,e(l.b.byCodeStep3({exchangeToken:n,invitationCode:P,verificationCode:i}));case 4:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function k(){return(k=Object(o.a)(Object(a.a)().mark((function t(){return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e(l.b.reSendInvitationCode({exchangeToken:n,resendChannel:A,invitationCode:P}));case 2:S(!0);case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},429:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_SECURITY_SEAL:"SecuritySeal",TYPE_SECURITY_SEAL:"Element",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",byCodeTitle:"_rules_byCodeTitle__yr3wN",byCodeInvitationCode:"_rules_byCodeInvitationCode__1vi5-",byPin:"_rules_byPin__15kE-",haveCodeSubtitle:"_rules_haveCodeSubtitle__1Zpe2",alignInputs:"_rules_alignInputs__5ZcTE",byCodeSubtitle:"_rules_byCodeSubtitle__33HL5",securitySealContainer:"_rules_securitySealContainer__2vwIC",alignInvitationCode:"_rules_alignInvitationCode__1NX5C",textSubtitle:"_rules_textSubtitle__159WN",haveCode:"_rules_haveCode__Kknyv",submitButton:"_rules_submitButton__1hASq",termsAndConditions:"_rules_termsAndConditions__2CP8-",textBody:"_rules_textBody__3hBIX"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var a=n(2),o=n(16),i=n(19),r=n(11),s=n(502),c=n(505),l=n(41),u=n(6),d=n(79),E=n(8),_=n(493),b=n.n(_),T=n(10),m=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],O=b.a.NAME_FORM,N=b.a.TYPE_FORM;function f(e){var t=e,n=t.ariaLabel,_=t.ariaLabelledby,b=t.schema,f=t.onSubmit,j=t.children,h=t.warnings,C=t.isRequiredToast,p=t.isResetForm,M=Object(i.a)(t,m),A=Object(E.b)(),P=Object(s.e)({resolver:Object(c.a)(b)}),R=P.handleSubmit,x=P.setError,g=P.formState.errors,v=P.reset,S=Object.keys(g),L=r.b.useState(!1),y=Object(o.a)(L,2),I=y[0],F=y[1],k=r.b.useCallback((function(){C&&I&&A(d.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:u.w})),F(!1)}),[A,C,I]),w=r.b.useCallback((function(){v()}),[v]);return r.b.useEffect((function(){h&&Object.keys(h.data).map((function(e){var t=e.startsWith(u.Nb)?e.slice(u.fb):e;return x(t,{message:h.data[e]},{shouldFocus:!1}),null})),S.length>u.Sb&&k(),p&&w()}),[S.length,p,w,x,k,h]),Object(T.jsx)(s.b,Object(a.a)(Object(a.a)(Object(a.a)({},P),M),{},{children:Object(T.jsx)(l.a,{noValidate:!0,"aria-label":n,"aria-labelledby":_,name:O,tag:"form",type:N,onSubmit:R(f,(function(){return F(!I)})),children:j})}))}f.useContext=s.f,f.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),o=n(19),i=(n(11),n(41)),r=n(136),s=n(82),c=n(38),l=n(101),u=n(491),d=n.n(u),E={name:d.a.NAME_EXTERNAL_CONTAINER,type:d.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},_=n(492),b=n.n(_),T=n(10),m=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function O(e){var t=e,n=t["header-onBack"],u=t["header-title"],d=t.children,E=t.name,_=t.type,O=t.headerClassName,N=t.showLogo,f=Object(o.a)(t,m),j=Boolean(n||u),h=Object(i.c)(!u&&b.a.onlyRow,O),C=Object(i.c)(N&&b.a.step1Logo),p=Object(i.c)(N&&b.a.hasLogo);return Object(T.jsxs)(l.a,{children:[N&&Object(T.jsx)("div",{className:C,children:Object(T.jsx)(r.a,{alt:"logo",uuid:"logo150Login"})}),Object(T.jsx)(i.a,Object(a.a)(Object(a.a)({name:E,tag:"article",type:_},f),{},{children:Object(T.jsxs)("article",{className:p,children:[j&&Object(T.jsxs)("header",{className:h,children:[n&&Object(T.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),u&&Object(T.jsx)(c.b,{tag:"h5",uuid:u})]}),d]})}))]})}O.defaultProps=E},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},494:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),o=n(19),i=n(16),r=n(11),s=n(50),c=n(41),l=n(488),u=n(498),d=n.n(u),E=n(10),_=["id","name","methods","defaultValue","pattern","withSuggestions","onChange","onBlur"],b=d.a.NAME_INPUT_FIELD,T=d.a.TYPE_INPUT_FIELD,m=r.b.memo((function(e){var t,n=r.b.useState(!1),l=Object(i.a)(n,2),u=l[0],d=l[1],m=e.id,O=e.name,N=e.methods,f=e.defaultValue,j=e.pattern,h=e.withSuggestions,C=void 0===h||h,p=e.onChange,M=e.onBlur,A=Object(o.a)(e,_),P=N.register,R=N.formState,x=N.setValue,g=N.clearErrors,v=R.errors,S="".concat(O),L=v[O];return r.b.useEffect((function(){f&&x(S,f),f||x(S,void 0),C&&d(!0)}),[f,S,x,C,d]),Object(E.jsx)(c.a,{name:b,type:T,children:Object(E.jsx)(s.TextField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({id:m||O},f&&{defaultValue:f}),L&&{error:null===(t=L.message)||void 0===t?void 0:t.toString()}),P(S,{onChange:function(e){p&&p(e);g([S])},onBlur:M})),A),{},{autoComplete:C?"on":"off",pattern:j,onKeyDown:function(e){e.target.value||u||d(!0)}}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function O(e){var t=l.a.useContext();return Object(E.jsx)(m,Object(a.a)({methods:t},e))}O.displayName=b},498:function(e,t,n){e.exports={NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=151.50f81519.chunk.js.map