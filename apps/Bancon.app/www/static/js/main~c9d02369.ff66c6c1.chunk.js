(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[248],{137:function(e,t,n){"use strict";n.d(t,"c",(function(){return F})),n.d(t,"b",(function(){return T})),n.d(t,"a",(function(){return f})),n.d(t,"d",(function(){return k}));var r=n(9),a=n(55),c=n(100),i="generatepayment",u={idTransaction:void 0,sendFulfilled:!1,fetching:!1,error:void 0,warning:void 0,transferWarning:void 0,dataPaymentPre:void 0,dataGeneratePayment:void 0,fetchedFile:!1,paymentsFileTemplate:void 0,supplier:void 0,account:void 0,transfer:{paymentDate:Object(c.c)(new Date,{defaultResult:"/",format:c.a.SHORT})},transferTable:void 0,hasOrders:!1,deletedTransfers:!1,deletedOrders:!1,transfersSuppliersError:void 0,paymentErrorFile:void 0,paymentType:a.a,massiveFileId:void 0,idLote:void 0,cleanTransferFields:!1},o=n(2),d=n(12),s=n(1),l=n(47),f=Object(s.b)(i,["clean","generatePaymentPre","generatePaymentPreData","supplier","account","transfer","transferTable","setDeletedTransfers","setDeletedOrders","setOrder","transfersSuppliersError","sendFulfilled","paymentType","massiveFileId","cleanDataPaymentPre","cleanDataGeneratePayment","cleanOnAddTransfer","cleanTransferFields","cleanTransferWarning","cleanWarnings","cleanAccount"]),p=n(272),b=n(0),m=n(19),O=n(5),y=n(96),j=n(6),v=n(8),P=["otp"],T=Object(s.c)(i,{generatePaymentPre:function(e,t){return Object(O.a)(Object(b.a)().mark((function n(){var r,a,c,i,u,d,s,p,O,y,T,h,g,F,k,x;return Object(b.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,a=e.otp,c=Object(m.a)(e,P),n.next=4,Object(l.d)(Object(o.a)({},c));case 4:if(i=n.sent){n.next=7;break}return n.abrupt("return",null);case 7:if(!Object(l.i)(i)){n.next=9;break}return n.abrupt("return",r(Object(o.a)(Object(o.a)({},i),l.c[i.code])));case 9:if(u=e.token,d=e.field_total_amount,s=i.data,p=s.nameFile,O=s.idFile,y=s.accountIdProduct,T=s.debitAccountLabel,h=s.currency,g=s.numTransfersProcessed,F=s.transfersSuppliersError,!s.error){n.next=15;break}return v.a.dispatch(f.transfersSuppliersError(F)),n.abrupt("return",r(Object(o.a)(Object(o.a)({},i),{},{code:"COR020W",message:"Revis\xe1 los pagos con errores agregados"})));case 15:return k={token:String(u),idFile:O,nameFile:p,amount:Number(d.replace(/,/g,j.t)),total_amount:{currency:j.g.ARG_ISO,quantity:d.replace(/,/g,j.t)},currency:h,contractId:String(e.contractId),rows:g,debitAccount:y,debitAccountLabel:T,consolidateDebit:!1,_otp:a},n.next=18,Object(l.e)(Object(o.a)({},k));case 18:if(x=n.sent){n.next=21;break}return n.abrupt("return",null);case 21:if(!Object(l.i)(x)){n.next=23;break}return n.abrupt("return",r(Object(o.a)(Object(o.a)({},x),l.c[x.code])));case 23:return v.a.dispatch(f.sendFulfilled(!0)),i.idTransaction=x.idTransaction,i.data.idLote=x.data.idLote,n.abrupt("return",i);case 27:case"end":return n.stop()}}),n)})))()},getSuppliersAccounts:function(e,t){return Object(O.a)(Object(b.a)().mark((function n(){var r,a,c;return Object(b.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.rejectWithValue,a=e.token){n.next=4;break}return n.abrupt("return",null);case 4:return n.next=6,Object(l.f)({token:a});case 6:if(c=n.sent){n.next=9;break}return n.abrupt("return",null);case 9:if(!Object(y.c)(c)){n.next=11;break}return n.abrupt("return",r(Object(o.a)(Object(o.a)({},c),l.c[c.code])));case 11:return n.abrupt("return",c);case 12:case"end":return n.stop()}}),n)})))()},downloadPaymentsFileTemplate:function(e,t){return Object(O.a)(Object(b.a)().mark((function n(){var r,a,c,i,u,d;return Object(b.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.rejectWithValue,a=e.token,c=e.templateType,a){n.next=4;break}return n.abrupt("return",null);case 4:return n.next=6,Object(l.g)({templateType:c,token:a});case 6:if(i=n.sent){n.next=9;break}return n.abrupt("return",null);case 9:if(!Object(l.j)(i)){n.next=11;break}return n.abrupt("return",r(Object(o.a)(Object(o.a)({},i),l.c[i.code])));case 11:return u=i.data.idTemplate,n.next=14,Object(l.b)({idTemplate:u,token:a});case 14:if(d=n.sent){n.next=17;break}return n.abrupt("return",null);case 17:if(!Object(l.j)(d)){n.next=19;break}return n.abrupt("return",r(Object(o.a)(Object(o.a)({},d),l.c[d.code])));case 19:return n.abrupt("return",d);case 20:case"end":return n.stop()}}),n)})))()},validatePaymentsFile:function(e,t){return Object(O.a)(Object(b.a)().mark((function n(){var r,a;return Object(b.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.rejectWithValue,e.token){n.next=4;break}return n.abrupt("return",null);case 4:return n.next=6,Object(l.h)(Object(o.a)({},e));case 6:if(a=n.sent){n.next=9;break}return n.abrupt("return",null);case 9:if(!Object(l.i)(a)){n.next=11;break}return n.abrupt("return",r(Object(o.a)(Object(o.a)({},a),l.c[a.code])));case 11:return n.abrupt("return",a);case 12:case"end":return n.stop()}}),n)})))()},downloadPaymentErrorFile:function(e,t){return Object(O.a)(Object(b.a)().mark((function n(){var r,a;return Object(b.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.rejectWithValue,e.token){n.next=4;break}return n.abrupt("return",null);case 4:return n.next=6,Object(l.a)(e);case 6:if(a=n.sent){n.next=9;break}return n.abrupt("return",null);case 9:if(!Object(l.i)(a)){n.next=11;break}return n.abrupt("return",r(Object(o.a)(Object(o.a)({},a),l.c[a.code])));case 11:return n.abrupt("return",a);case 12:case"end":return n.stop()}}),n)})))()},generatePaymentSend:function(e,t){return Object(O.a)(Object(b.a)().mark((function n(){var r,a,c;return Object(b.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,a=Object.assign({},(Object(p.a)(e),e)),n.next=4,Object(l.e)(Object(o.a)({},a));case 4:if(c=n.sent){n.next=7;break}return n.abrupt("return",null);case 7:if(!Object(l.i)(c)){n.next=9;break}return n.abrupt("return",r(Object(o.a)(Object(o.a)({},c),l.c[c.code])));case 9:return n.abrupt("return",c);case 10:case"end":return n.stop()}}),n)})))()}}),h=n(3),g=Object(s.d)(u,(function(e){var t=e.addCase,n=e.addMatcher;t(f.clean,(function(){return Object(o.a)({},u)})),t(T.generatePaymentPre.fulfilled,(function(e,t){var n=t.payload;if(e.fetching=!1,e.error=u.error,n){var r=n.data,a=n.idTransaction;e.dataPaymentPre=r,e.idTransaction=a}})),t(f.cleanDataGeneratePayment,(function(e){e.dataGeneratePayment=u.dataGeneratePayment})),t(f.cleanDataPaymentPre,(function(e){e.dataPaymentPre=u.dataPaymentPre})),t(f.cleanOnAddTransfer,(function(e){e.transfer=Object(o.a)(Object(o.a)({},e.transfer),{},{paymentAmount:j.D}),e.supplier=Object(o.a)(Object(o.a)({},e.supplier),{},{paymentReference:j.D})})),t(f.cleanTransferFields,(function(e,t){var n=t.payload;e.cleanTransferFields=n})),t(f.cleanWarnings,(function(e){e.warning=u.warning})),t(f.cleanTransferWarning,(function(e){e.transferWarning=u.transferWarning})),t(f.cleanAccount,(function(e){e.account=u.account})),t(f.setOrder,(function(e,t){var n=t.payload;e.hasOrders=n})),t(T.getSuppliersAccounts.fulfilled,(function(e,t){var n=t.payload;e.fetching=!1,e.error=u.error,n&&(e.transferAccounts=n.data.transferAccounts)})),t(T.downloadPaymentsFileTemplate.fulfilled,(function(e,t){var n=t.payload;e.fetching=!1,e.error=u.error,n&&(e.fetchedFile=!0,e.paymentsFileTemplate=n.data)})),t(T.validatePaymentsFile.fulfilled,(function(e,t){var n=t.payload;if(e.fetching=!1,e.error=u.error,n){var r=n.data,a=n.idTransaction;r.transfersSuppliers&&r.transfersSuppliers.splice(j.Sb,j.fb),r.warning&&a&&(e.transferWarning=r.warningMessage),e.dataPaymentPre=r,e.idTransaction=a}})),t(T.downloadPaymentErrorFile.fulfilled,(function(e,t){var n=t.payload;if(e.fetching=!1,e.error=u.error,n){var r=n.data;e.paymentErrorFile=r}})),t(T.generatePaymentSend.fulfilled,(function(e,t){var n=t.payload;if(e.fetching=!1,e.error=u.error,n){var r=n.data,a=n.idTransaction;r.idLote&&(e.idLote=r.idLote),e.sendFulfilled=!0,e.idTransaction=a}})),t(f.massiveFileId,(function(e,t){var n=t.payload;e.massiveFileId="".concat(n)})),t(f.sendFulfilled,(function(e,t){var n=t.payload;e.sendFulfilled=n})),t(f.generatePaymentPreData,(function(e,t){var n=t.payload;e.dataGeneratePayment=n.dataGeneratePayment})),t(f.supplier,(function(e,t){var n=t.payload;e.supplier=n})),t(f.account,(function(e,t){var n=t.payload;e.account=n})),t(f.transfer,(function(e,t){var n=t.payload;e.transfer=n})),t(f.transferTable,(function(e,t){var n=t.payload;e.transferTable=n})),t(f.setDeletedTransfers,(function(e,t){var n=t.payload;e.deletedTransfers=n})),t(f.setDeletedOrders,(function(e,t){var n=t.payload;e.deletedOrders=n})),t(f.transfersSuppliersError,(function(e,t){var n=t.payload;e.transfersSuppliersError=n})),t(f.paymentType,(function(e,t){var n=t.payload;e.paymentType=n})),n((function(e){return Object(d.b)(e,i)}),(function(e){e.fetching=!0,e.error=u.error,e.warning=u.warning})),n((function(e){return Object(d.c)(e,i)}),(function(e,t){var n=t.payload;e.fetching=!1,Object(h.x)(l.c,n.code)?e.warning=n:e.error=n}))}));function F(e){return e[i]}F.fetching=Object(s.e)(F,(function(e){return e.fetching})),F.error=Object(s.e)(F,(function(e){return e.error})),F.warning=Object(s.e)(F,(function(e){return e.warning})),F.generatePaymentPre=Object(s.e)(F,(function(e){return e.dataPaymentPre})),F.getSuppliersAccounts=Object(s.e)(F,(function(e){return e.transferAccounts})),F.getGeneratePaymentPreData=Object(s.e)(F,(function(e){return e.dataGeneratePayment})),F.nameFile=Object(s.e)(F,(function(e){var t;return null===(t=e.dataPaymentPre)||void 0===t?void 0:t.nameFile})),F.fetchedFile=Object(s.e)(F,(function(e){return e.fetchedFile})),F.paymentsTemplateFileName=Object(s.e)(F,(function(e){var t;return null===(t=e.paymentsFileTemplate)||void 0===t?void 0:t.fileName})),F.paymentsTemplateFileContent=Object(s.e)(F,(function(e){var t;return null===(t=e.paymentsFileTemplate)||void 0===t?void 0:t.content})),F.idFile=Object(s.e)(F,(function(e){var t;return null===(t=e.dataPaymentPre)||void 0===t?void 0:t.idFile})),F.supplier=Object(s.e)(F,(function(e){return e.supplier})),F.account=Object(s.e)(F,(function(e){return e.account})),F.transfer=Object(s.e)(F,(function(e){return e.transfer})),F.transferTable=Object(s.e)(F,(function(e){return e.transferTable})),F.deletedTransfers=Object(s.e)(F,(function(e){return e.deletedTransfers})),F.deletedOrders=Object(s.e)(F,(function(e){return e.deletedOrders})),F.transfersSuppliersError=Object(s.e)(F,(function(e){return e.transfersSuppliersError})),F.sendFulfilled=Object(s.e)(F,(function(e){return e.sendFulfilled})),F.dataPaymentPre=Object(s.e)(F,(function(e){return e.dataPaymentPre})),F.dataGeneratePayment=Object(s.e)(F,(function(e){return e.dataGeneratePayment})),F.idTransaction=Object(s.e)(F,(function(e){return e.idTransaction})),F.paymentType=Object(s.e)(F,(function(e){return e.paymentType})),F.isPaymentManual=Object(s.e)(F,(function(e){return e.paymentType===a.a})),F.massiveFileId=Object(s.e)(F,(function(e){return e.massiveFileId})),F.paymentErrorFilename=Object(s.e)(F,(function(e){var t;return null===(t=e.paymentErrorFile)||void 0===t?void 0:t.fileName})),F.paymentErrorFileContent=Object(s.e)(F,(function(e){var t;return null===(t=e.paymentErrorFile)||void 0===t?void 0:t.content})),F.idLote=Object(s.e)(F,(function(e){return e.idLote})),F.hasOrders=Object(s.e)(F,(function(e){return e.hasOrders})),F.cleanTransferFields=Object(s.e)(F,(function(e){return e.cleanTransferFields})),F.transferWarning=Object(s.e)(F,(function(e){return e.transferWarning}));var k=Object(r.a)({},i,g)},160:function(e,t,n){"use strict";n.d(t,"c",(function(){return j})),n.d(t,"b",(function(){return b})),n.d(t,"a",(function(){return l})),n.d(t,"d",(function(){return v}));var r=n(9),a=n(6),c="voidpayments",i={paymentsToVoid:[],fetching:!1,fetched:!1,error:void 0,warning:void 0,contractId:a.D,states:[],idTransaction:a.D,completedVoidPayment:!1},u=n(2),o=n(12),d=n(1),s=n(129),l=Object(d.b)(c,["clean","updatePaymentsToVoid","removePaymentToVoid","cleanCompletedVoidPayments"]),f=n(0),p=n(5),b=Object(d.c)(c,{voidPayments:function(e,t){return Object(p.a)(Object(f.a)().mark((function n(){var r,a;return Object(f.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,n.next=3,Object(s.b)(Object(u.a)({},e));case 3:if(a=n.sent){n.next=6;break}return n.abrupt("return",null);case 6:if(!Object(s.c)(a)){n.next=8;break}return n.abrupt("return",r(Object(u.a)(Object(u.a)({},a),s.a[a.code])));case 8:return n.abrupt("return",a);case 9:case"end":return n.stop()}}),n)})))()}}),m=n(3),O=n(55),y=Object(d.d)(i,(function(e){var t=e.addCase,n=e.addMatcher;t(l.clean,(function(){return Object(u.a)({},i)})),t(l.cleanCompletedVoidPayments,(function(e){e.completedVoidPayment=i.completedVoidPayment})),t(l.updatePaymentsToVoid,(function(e,t){var n=t.payload,r=n.paymentIds,a=n.payments.filter((function(e){return r.includes(e.paymentBatchPayId)})).map((function(e){return{paymentBatchId:e.paymentBatchId,paymentBatchPayId:e.paymentBatchPayId,paymentBatchBankAccountCBUReceiver:e.paymentBatchBankAccountCBUReceiver,paymentBatchTotalAmount:e.paymentBatchTotalAmount,paymentBatchDate:e.paymentBatchDate,paymentBatchFile:e.paymentBatchFile,paymentBatchReference:e.paymentBatchReference}}));e.paymentsToVoid=a})),t(l.removePaymentToVoid,(function(e,t){var n=t.payload,r=e.paymentsToVoid.filter((function(e){return e.paymentBatchPayId!==n}));e.paymentsToVoid=r})),t(b.voidPayments.fulfilled,(function(e,t){var n=t.payload;if(e.fetching=!1,e.error=i.error,n){e.fetched=!0;var r=n.data,c=r.contractId,o=r.states,d=e.paymentsToVoid.filter((function(e){return e.batchSigners&&e.batchSigners.length>a.Sb})),s=null===o||void 0===o?void 0:o.map((function(e){var t=e.statusId===O.b,n=d.findIndex((function(t){return t.paymentBatchId===e.batchId}))>a.ab,r=null;return r=t?O.f.VOIDED:n?O.f.PENDING:O.f.REJECTED,Object(u.a)(Object(u.a)({},e),{},{statusName:r})}));e.contractId=null!==c&&void 0!==c?c:a.D,e.states=null!==s&&void 0!==s?s:[],e.idTransaction=n.idTransaction,e.completedVoidPayment=!0}})),n((function(e){return Object(o.b)(e,c)}),(function(e){e.fetching=!0,e.error=i.error,e.warning=i.warning})),n((function(e){return Object(o.c)(e,c)}),(function(e,t){var n=t.payload;e.fetching=!1,Object(m.x)(s.a,n.code)?e.warning=n:e.error=n}))}));function j(e){return e[c]}j.fetching=Object(d.e)(j,(function(e){return e.fetching})),j.fetched=Object(d.e)(j,(function(e){return e.fetched})),j.error=Object(d.e)(j,(function(e){return e.error})),j.warning=Object(d.e)(j,(function(e){return e.warning})),j.paymentsToVoid=Object(d.e)(j,(function(e){return e.paymentsToVoid})),j.paymentStates=Object(d.e)(j,(function(e){var t=e.states;return e.paymentsToVoid.map((function(e,n){var r;return Object(u.a)(Object(u.a)({},e),{},{paymentStatus:null===(r=t[n])||void 0===r?void 0:r.statusName})}))})),j.idTransaction=Object(d.e)(j,(function(e){return e.idTransaction})),j.completedVoidPayment=Object(d.e)(j,(function(e){return e.completedVoidPayment}));var v=Object(r.a)({},c,y)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi1kYXRhL3NsaWNlcy9zdXBwbGllcnMvZ2VuZXJhdGVQYXltZW50L19uYW1lc3BhY2UudHMiLCJ3ZWJwYWNrOi8vLy4tZGF0YS9zbGljZXMvc3VwcGxpZXJzL2dlbmVyYXRlUGF5bWVudC9fYWN0aW9ucy50cyIsIndlYnBhY2s6Ly8vLi1kYXRhL3NsaWNlcy9zdXBwbGllcnMvZ2VuZXJhdGVQYXltZW50L19mZXRjaGVycy50cyIsIndlYnBhY2s6Ly8vLi1kYXRhL3NsaWNlcy9zdXBwbGllcnMvZ2VuZXJhdGVQYXltZW50L19yZWR1Y2Vycy50cyIsIndlYnBhY2s6Ly8vLi1kYXRhL3NsaWNlcy9zdXBwbGllcnMvZ2VuZXJhdGVQYXltZW50L19zZWxlY3RvcnMudHMiLCJ3ZWJwYWNrOi8vLy4tZGF0YS9zbGljZXMvc3VwcGxpZXJzL2dlbmVyYXRlUGF5bWVudC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi1kYXRhL3NsaWNlcy9zdXBwbGllcnMvdm9pZFBheW1lbnRzL19uYW1lc3BhY2UudHMiLCJ3ZWJwYWNrOi8vLy4tZGF0YS9zbGljZXMvc3VwcGxpZXJzL3ZvaWRQYXltZW50cy9fYWN0aW9ucy50cyIsIndlYnBhY2s6Ly8vLi1kYXRhL3NsaWNlcy9zdXBwbGllcnMvdm9pZFBheW1lbnRzL19mZXRjaGVycy50cyIsIndlYnBhY2s6Ly8vLi1kYXRhL3NsaWNlcy9zdXBwbGllcnMvdm9pZFBheW1lbnRzL19yZWR1Y2Vycy50cyIsIndlYnBhY2s6Ly8vLi1kYXRhL3NsaWNlcy9zdXBwbGllcnMvdm9pZFBheW1lbnRzL19zZWxlY3RvcnMudHMiLCJ3ZWJwYWNrOi8vLy4tZGF0YS9zbGljZXMvc3VwcGxpZXJzL3ZvaWRQYXltZW50cy9pbmRleC50cyJdLCJuYW1lcyI6WyJOQU1FX1NMSUNFX0dFTkVSQVRFX1BBWU1FTlQiLCJJTklUX1NMSUNFX0dFTkVSQVRFX1BBWU1FTlQiLCJpZFRyYW5zYWN0aW9uIiwidW5kZWZpbmVkIiwic2VuZEZ1bGZpbGxlZCIsImZldGNoaW5nIiwiZXJyb3IiLCJ3YXJuaW5nIiwidHJhbnNmZXJXYXJuaW5nIiwiZGF0YVBheW1lbnRQcmUiLCJkYXRhR2VuZXJhdGVQYXltZW50IiwiZmV0Y2hlZEZpbGUiLCJwYXltZW50c0ZpbGVUZW1wbGF0ZSIsInN1cHBsaWVyIiwiYWNjb3VudCIsInRyYW5zZmVyIiwicGF5bWVudERhdGUiLCJkYXRlRm9ybWF0dGVyIiwiRGF0ZSIsImRlZmF1bHRSZXN1bHQiLCJmb3JtYXQiLCJEYXRlRm9ybWF0cyIsIlNIT1JUIiwidHJhbnNmZXJUYWJsZSIsImhhc09yZGVycyIsImRlbGV0ZWRUcmFuc2ZlcnMiLCJkZWxldGVkT3JkZXJzIiwidHJhbnNmZXJzU3VwcGxpZXJzRXJyb3IiLCJwYXltZW50RXJyb3JGaWxlIiwicGF5bWVudFR5cGUiLCJNQU5VQUwiLCJtYXNzaXZlRmlsZUlkIiwiaWRMb3RlIiwiY2xlYW5UcmFuc2ZlckZpZWxkcyIsIkFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50IiwiQ3JlYXRlQWN0aW9ucyIsIkZldGNoZXJTbGljZUdlbmVyYXRlUGF5bWVudCIsIkNyZWF0ZUZldGNoZXJzIiwiZ2VuZXJhdGVQYXltZW50UHJlIiwib3B0cyIsIl9yZWYiLCJfYXN5bmNUb0dlbmVyYXRvciIsIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJtYXJrIiwiX2NhbGxlZSIsInJlamVjdFdpdGhWYWx1ZSIsIl9vdHAiLCJyZXN0IiwicmVzcG9uc2UiLCJ0b2tlbiIsImZpZWxkX3RvdGFsX2Ftb3VudCIsImRhdGEiLCJuYW1lRmlsZSIsImlkRmlsZSIsImFjY291bnRJZFByb2R1Y3QiLCJkZWJpdEFjY291bnRMYWJlbCIsImN1cnJlbmN5IiwibnVtVHJhbnNmZXJzUHJvY2Vzc2VkIiwiYm9keSIsInJlc3BvbnNlU2VuZCIsIndyYXAiLCJfY29udGV4dCIsInByZXYiLCJuZXh0Iiwib3RwIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiX2V4Y2x1ZGVkIiwiR2VuZXJhdGVQYXltZW50UHJlIiwiX29iamVjdFNwcmVhZCIsInNlbnQiLCJhYnJ1cHQiLCJpc0dlbmVyYXRlUGF5bWVudEVycm9yIiwiR0VORVJBVEVfUEFZTUVOVF9FUlJPUlMiLCJjb2RlIiwiU3RvcmUiLCJkaXNwYXRjaCIsIm1lc3NhZ2UiLCJTdHJpbmciLCJhbW91bnQiLCJOdW1iZXIiLCJyZXBsYWNlIiwiRE9UX1NUUiIsInRvdGFsX2Ftb3VudCIsIkNVUlJFTkNZIiwiQVJHX0lTTyIsInF1YW50aXR5IiwiY29udHJhY3RJZCIsInJvd3MiLCJkZWJpdEFjY291bnQiLCJjb25zb2xpZGF0ZURlYml0IiwiR2VuZXJhdGVQYXltZW50U2VuZCIsInN0b3AiLCJnZXRTdXBwbGllcnNBY2NvdW50cyIsIl9yZWYyIiwiX2NhbGxlZTIiLCJfY29udGV4dDIiLCJHZXRTdXBwbGllcnNBY2NvdW50cyIsImlzQWNjb3VudEVycm9yIiwiZG93bmxvYWRQYXltZW50c0ZpbGVUZW1wbGF0ZSIsIl9yZWYzIiwiX2NhbGxlZTMiLCJ0ZW1wbGF0ZVR5cGUiLCJpZFRlbXBsYXRlIiwicmVzcG9uc2VEb3dubG9hZCIsIl9jb250ZXh0MyIsIlBheW1lbnRzR2V0VGVtcGxhdGVJZCIsImlzUGF5bWVudHNGaWxlVGVtcGxhdGVFcnJvciIsIkRvd25sb2FkUGF5bWVudHNGaWxlVGVtcGxhdGUiLCJ2YWxpZGF0ZVBheW1lbnRzRmlsZSIsIl9yZWY0IiwiX2NhbGxlZTQiLCJfY29udGV4dDQiLCJWYWxpZGF0ZVBheW1lbnRGaWxlUHJlIiwiZG93bmxvYWRQYXltZW50RXJyb3JGaWxlIiwiX3JlZjUiLCJfY2FsbGVlNSIsIl9jb250ZXh0NSIsIkRvd25sb2FkUGF5bWVudEVycm9yRmlsZSIsImdlbmVyYXRlUGF5bWVudFNlbmQiLCJfcmVmNiIsIl9jYWxsZWU2IiwiX2NvbnRleHQ2IiwiT2JqZWN0IiwiYXNzaWduIiwiX29iamVjdERlc3RydWN0dXJpbmdFbXB0eSIsIlJlZHVjZXJTbGljZUdlbmVyYXRlUGF5bWVudCIsIkNyZWF0ZVJlZHVjZXIiLCJhZGRDYXNlIiwiYWRkTWF0Y2hlciIsImNsZWFuIiwiZnVsZmlsbGVkIiwic3RhdGUiLCJwYXlsb2FkIiwiY2xlYW5EYXRhR2VuZXJhdGVQYXltZW50IiwiY2xlYW5EYXRhUGF5bWVudFByZSIsImNsZWFuT25BZGRUcmFuc2ZlciIsInBheW1lbnRBbW91bnQiLCJFTVBUWV9TVFJJTkciLCJwYXltZW50UmVmZXJlbmNlIiwiY2xlYW5XYXJuaW5ncyIsImNsZWFuVHJhbnNmZXJXYXJuaW5nIiwiY2xlYW5BY2NvdW50Iiwic2V0T3JkZXIiLCJ0cmFuc2ZlckFjY291bnRzIiwiX3JlZjciLCJ0cmFuc2ZlcnNTdXBwbGllcnMiLCJzcGxpY2UiLCJaRVJPIiwiT05FIiwid2FybmluZ01lc3NhZ2UiLCJfcmVmOCIsIl9yZWY5IiwiX3JlZjEwIiwiY29uY2F0IiwiX3JlZjExIiwiZ2VuZXJhdGVQYXltZW50UHJlRGF0YSIsIl9yZWYxMiIsIl9yZWYxMyIsIl9yZWYxNCIsIl9yZWYxNSIsIl9yZWYxNiIsInNldERlbGV0ZWRUcmFuc2ZlcnMiLCJfcmVmMTciLCJzZXREZWxldGVkT3JkZXJzIiwiX3JlZjE4IiwiX3JlZjE5IiwiX3JlZjIwIiwiYWN0aW9uIiwiaXNQZW5kaW5nIiwiaXNSZWplY3RlZCIsIl9yZWYyMSIsImlzVmFsaWRhdGVFcnJvckNvZGUiLCJTZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50Iiwic3RvcmUiLCJDcmVhdGVTZWxlY3RvciIsImdldEdlbmVyYXRlUGF5bWVudFByZURhdGEiLCJfc3RhdGUkZGF0YVBheW1lbnRQcmUiLCJwYXltZW50c1RlbXBsYXRlRmlsZU5hbWUiLCJfc3RhdGUkcGF5bWVudHNGaWxlVGUiLCJmaWxlTmFtZSIsInBheW1lbnRzVGVtcGxhdGVGaWxlQ29udGVudCIsIl9zdGF0ZSRwYXltZW50c0ZpbGVUZTIiLCJjb250ZW50IiwiX3N0YXRlJGRhdGFQYXltZW50UHJlMiIsImlzUGF5bWVudE1hbnVhbCIsInBheW1lbnRFcnJvckZpbGVuYW1lIiwiX3N0YXRlJHBheW1lbnRFcnJvckZpIiwicGF5bWVudEVycm9yRmlsZUNvbnRlbnQiLCJfc3RhdGUkcGF5bWVudEVycm9yRmkyIiwiU2xpY2VHZW5lcmF0ZVBheW1lbnQiLCJfZGVmaW5lUHJvcGVydHkiLCJOQU1FX1NMSUNFX1ZPSURfUEFZTUVOVFMiLCJJTklUX1NMSUNFX1ZPSURfUEFZTUVOVFMiLCJwYXltZW50c1RvVm9pZCIsImZldGNoZWQiLCJzdGF0ZXMiLCJjb21wbGV0ZWRWb2lkUGF5bWVudCIsIkFjdGlvblNsaWNlVm9pZFBheW1lbnRzIiwiRmV0Y2hlclNsaWNlVm9pZFBheW1lbnRzIiwidm9pZFBheW1lbnRzIiwiVm9pZFBheW1lbnRzIiwiaXNWb2lkUGF5bWVudHNFcnJvciIsIlZPSURfUEFZTUVOVFNfRVJST1JTIiwiUmVkdWNlclNsaWNlVm9pZFBheW1lbnRzIiwiY2xlYW5Db21wbGV0ZWRWb2lkUGF5bWVudHMiLCJ1cGRhdGVQYXltZW50c1RvVm9pZCIsInBheW1lbnRJZHMiLCJwYXltZW50cyIsImZpbHRlciIsInBheW1lbnQiLCJpbmNsdWRlcyIsInBheW1lbnRCYXRjaFBheUlkIiwibWFwIiwicHAiLCJwYXltZW50QmF0Y2hJZCIsInBheW1lbnRCYXRjaEJhbmtBY2NvdW50Q0JVUmVjZWl2ZXIiLCJwYXltZW50QmF0Y2hUb3RhbEFtb3VudCIsInBheW1lbnRCYXRjaERhdGUiLCJwYXltZW50QmF0Y2hGaWxlIiwicGF5bWVudEJhdGNoUmVmZXJlbmNlIiwicmVtb3ZlUGF5bWVudFRvVm9pZCIsInBheW1lbnRJZCIsIm5ld1BheW1lbnRzVG9Wb2lkIiwicG10IiwiX3BheWxvYWQkZGF0YSIsInBlbmRpbmdTaWduYXR1cmVQYXltZW50cyIsImJhdGNoU2lnbmVycyIsImxlbmd0aCIsIm1hcHBlZFN0YXRlcyIsInBheW1lbnRTdGF0ZSIsImlzUGF5bWVudE9rIiwic3RhdHVzSWQiLCJPS19TVFIiLCJoYXNQYXltZW50UGVuZGluZyIsImZpbmRJbmRleCIsInBzcCIsImJhdGNoSWQiLCJNSU5VU19PTkUiLCJzdGF0dXNOYW1lIiwiVk9JREVEX1BBWU1FTlRfU1RBVFVTIiwiVk9JREVEIiwiUEVORElORyIsIlJFSkVDVEVEIiwiU2VsZWN0b3JTbGljZVZvaWRQYXltZW50cyIsInBheW1lbnRTdGF0ZXMiLCJwYXltZW50c1N0YXRlcyIsImlkeCIsIl9wYXltZW50c1N0YXRlcyRpZHgiLCJwYXltZW50U3RhdHVzIiwiU2xpY2VWb2lkUGF5bWVudHMiXSwibWFwcGluZ3MiOiJ3UkFLYUEsRUFBOEIsa0JBZ0w5QkMsRUFBNEQsQ0FDckVDLG1CQUFlQyxFQUNmQyxlQUFlLEVBQ2ZDLFVBQVUsRUFDVkMsV0FBT0gsRUFDUEksYUFBU0osRUFDVEsscUJBQWlCTCxFQUNqQk0sb0JBQWdCTixFQUNoQk8seUJBQXFCUCxFQUNyQlEsYUFBYSxFQUNiQywwQkFBc0JULEVBQ3RCVSxjQUFVVixFQUNWVyxhQUFTWCxFQUNUWSxTQUFVLENBQ05DLFlBQWFDLFlBQWMsSUFBSUMsS0FBUSxDQUNuQ0MsY0FBZSxJQUNmQyxPQUFRQyxJQUFZQyxTQUc1QkMsbUJBQWVwQixFQUNmcUIsV0FBVyxFQUNYQyxrQkFBa0IsRUFDbEJDLGVBQWUsRUFDZkMsNkJBQXlCeEIsRUFDekJ5QixzQkFBa0J6QixFQUNsQjBCLFlBQWFDLElBQ2JDLG1CQUFlNUIsRUFDZjZCLFlBQVE3QixFQUNSOEIscUJBQXFCLEcsOEJDN01aQyxFQUE2QkMsWUF3QnZDbkMsRUFBNkIsQ0FDNUIsUUFDQSxxQkFDQSx5QkFDQSxXQUNBLFVBQ0EsV0FDQSxnQkFDQSxzQkFDQSxtQkFDQSxXQUNBLDBCQUNBLGdCQUNBLGNBQ0EsZ0JBQ0Esc0JBQ0EsMkJBQ0EscUJBQ0Esc0JBQ0EsdUJBQ0EsZ0JBQ0EsaUIsK0RDekJTb0MsRUFBOEJDLFlBQWVyQyxFQUE2QixDQUU3RXNDLG1CQUFrQixTQUNwQkMsRUFBb0RDLEdBRWtCLE9BQURDLFlBQUFDLGNBQUFDLE1BQUEsU0FBQUMsSUFBQSxJQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBOUIsRUFBQStCLEVBQUFDLEVBQUEsT0FBQWpCLGNBQUFrQixNQUFBLFNBQUFDLEdBQUEsY0FBQUEsRUFBQUMsS0FBQUQsRUFBQUUsTUFBQSxPQUNsQyxPQUZqQ2xCLEVBQWVMLEVBQWZLLGdCQUVXQyxFQUFrQlAsRUFBdkJ5QixJQUFjakIsRUFBSWtCLFlBQUsxQixFQUFJMkIsR0FBQUwsRUFBQUUsS0FBQSxFQUNaSSxZQUFrQkMsWUFBQyxDQUFDLEVBQUlyQixJQUFRLEtBQUQsRUFBeEMsR0FBUkMsRUFBUWEsRUFBQVEsS0FFQSxDQUFEUixFQUFBRSxLQUFBLGVBQUFGLEVBQUFTLE9BQUEsU0FBUyxNQUFJLFdBRXRCQyxZQUF1QnZCLEdBQVUsQ0FBRGEsRUFBQUUsS0FBQSxlQUFBRixFQUFBUyxPQUFBLFNBQ3pCekIsRUFBZXVCLHdCQUFDLENBQUMsRUFBSXBCLEdBQWF3QixJQUF3QnhCLEVBQVN5QixTQUFRLE9BYTdFLEdBVkR4QixFQUE4QlYsRUFBOUJVLE1BQU9DLEVBQXVCWCxFQUF2QlcsbUJBQ1BDLEVBQVNILEVBQVRHLEtBRUpDLEVBUUFELEVBUkFDLFNBQ0FDLEVBT0FGLEVBUEFFLE9BQ0FDLEVBTUFILEVBTkFHLGlCQUNBQyxFQUtBSixFQUxBSSxrQkFDQUMsRUFJQUwsRUFKQUssU0FDQUMsRUFHQU4sRUFIQU0sc0JBQ0E5QixFQUVBd0IsRUFGQXhCLHlCQUVBd0IsRUFEQTdDLE1BR00sQ0FBRHVELEVBQUFFLEtBQUEsU0FJTCxPQUhBVyxJQUFNQyxTQUNGekMsRUFBMkJQLHdCQUF3QkEsSUFFdkRrQyxFQUFBUyxPQUFBLFNBQ096QixFQUFldUIsd0JBQUMsQ0FBQyxFQUNqQnBCLEdBQVEsSUFDWHlCLEtBQU0sVUFDTkcsUUFBUyxnREFDWCxRQWtCTCxPQWhCS2xCLEVBQU8sQ0FDVFQsTUFBTzRCLE9BQU81QixHQUNkSSxTQUNBRCxXQUNBMEIsT0FBUUMsT0FBTzdCLEVBQW1COEIsUUFBUSxLQUFNQyxNQUNoREMsYUFBYyxDQUNWMUIsU0FBVTJCLElBQVNDLFFBQ25CQyxTQUFVbkMsRUFBbUI4QixRQUFRLEtBQU1DLE1BRS9DekIsV0FDQThCLFdBQVlULE9BQU90QyxFQUFLK0MsWUFDeEJDLEtBQU05QixFQUNOK0IsYUFBY2xDLEVBQ2RDLG9CQUNBa0Msa0JBQWtCLEVBQ2xCM0MsUUFDSGUsRUFBQUUsS0FBQSxHQUMwQjJCLFlBQW1CdEIsWUFBQyxDQUFDLEVBQUlWLElBQVEsS0FBRCxHQUF6QyxHQUFaQyxFQUFZRSxFQUFBUSxLQUVBLENBQURSLEVBQUFFLEtBQUEsZ0JBQUFGLEVBQUFTLE9BQUEsU0FBUyxNQUFJLFlBRTFCQyxZQUF1QlosR0FBYyxDQUFERSxFQUFBRSxLQUFBLGdCQUFBRixFQUFBUyxPQUFBLFNBQzdCekIsRUFBZXVCLHdCQUFDLENBQUMsRUFDakJULEdBQ0FhLElBQXdCYixFQUFhYyxTQUMxQyxRQUkwQyxPQUZoREMsSUFBTUMsU0FBU3pDLEVBQTJCOUIsZUFBYyxJQUN4RDRDLEVBQVM5QyxjQUFnQnlELEVBQWF6RCxjQUN0QzhDLEVBQVNHLEtBQUtuQixPQUFTMkIsRUFBYVIsS0FBS25CLE9BQU82QixFQUFBUyxPQUFBLFNBQ3pDdEIsR0FBUSx5QkFBQWEsRUFBQThCLE9BQUEsR0FBQS9DLEVBQUEsSUFoRXNESCxFQWlFekUsRUFHTW1ELHFCQUFvQixTQUN0QnJELEVBQStDc0QsR0FFd0IsT0FBRHBELFlBQUFDLGNBQUFDLE1BQUEsU0FBQW1ELElBQUEsSUFBQWpELEVBQUFJLEVBQUFELEVBQUEsT0FBQU4sY0FBQWtCLE1BQUEsU0FBQW1DLEdBQUEsY0FBQUEsRUFBQWpDLEtBQUFpQyxFQUFBaEMsTUFBQSxPQUN6RCxHQUZYbEIsRUFBZWdELEVBQWZoRCxnQkFFTUksRUFBVVYsRUFBVlUsTUFDRyxDQUFEOEMsRUFBQWhDLEtBQUEsZUFBQWdDLEVBQUF6QixPQUFBLFNBQVMsTUFBSSxjQUFBeUIsRUFBQWhDLEtBQUEsRUFFQWlDLFlBQXFCLENBQUUvQyxVQUFTLEtBQUQsRUFBeEMsR0FBUkQsRUFBUStDLEVBQUExQixLQUVBLENBQUQwQixFQUFBaEMsS0FBQSxlQUFBZ0MsRUFBQXpCLE9BQUEsU0FBUyxNQUFJLFdBQ3RCMkIsWUFBZWpELEdBQVUsQ0FBRCtDLEVBQUFoQyxLQUFBLGdCQUFBZ0MsRUFBQXpCLE9BQUEsU0FDakJ6QixFQUFldUIsd0JBQUMsQ0FBQyxFQUFJcEIsR0FBYXdCLElBQXdCeEIsRUFBU3lCLFNBQVEsZUFBQXNCLEVBQUF6QixPQUFBLFNBRS9FdEIsR0FBUSx5QkFBQStDLEVBQUFKLE9BQUEsR0FBQUcsRUFBQSxJQVZ1RHJELEVBVzFFLEVBR015RCw2QkFBNEIsU0FDOUIzRCxFQUFxRDRELEdBRW9CLE9BQUQxRCxZQUFBQyxjQUFBQyxNQUFBLFNBQUF5RCxJQUFBLElBQUF2RCxFQUFBSSxFQUFBb0QsRUFBQXJELEVBQUFzRCxFQUFBQyxFQUFBLE9BQUE3RCxjQUFBa0IsTUFBQSxTQUFBNEMsR0FBQSxjQUFBQSxFQUFBMUMsS0FBQTBDLEVBQUF6QyxNQUFBLE9BQzdDLEdBRnpCbEIsRUFBZXNELEVBQWZ0RCxnQkFFTUksRUFBd0JWLEVBQXhCVSxNQUFPb0QsRUFBaUI5RCxFQUFqQjhELGFBQ1ZwRCxFQUFNLENBQUR1RCxFQUFBekMsS0FBQSxlQUFBeUMsRUFBQWxDLE9BQUEsU0FBUyxNQUFJLGNBQUFrQyxFQUFBekMsS0FBQSxFQUVBMEMsWUFBc0IsQ0FBRUosZUFBY3BELFVBQVMsS0FBRCxFQUF2RCxHQUFSRCxFQUFRd0QsRUFBQW5DLEtBRUEsQ0FBRG1DLEVBQUF6QyxLQUFBLGVBQUF5QyxFQUFBbEMsT0FBQSxTQUFTLE1BQUksV0FDdEJvQyxZQUE0QjFELEdBQVUsQ0FBRHdELEVBQUF6QyxLQUFBLGdCQUFBeUMsRUFBQWxDLE9BQUEsU0FDOUJ6QixFQUFldUIsd0JBQUMsQ0FBQyxFQUFJcEIsR0FBYXdCLElBQXdCeEIsRUFBU3lCLFNBQVEsUUFHcEUsT0FBVjZCLEVBQWV0RCxFQUFTRyxLQUF4Qm1ELFdBQVVFLEVBQUF6QyxLQUFBLEdBRWE0QyxZQUE2QixDQUFFTCxhQUFZckQsVUFBUyxLQUFELEdBQTVELEdBQWhCc0QsRUFBZ0JDLEVBQUFuQyxLQUNBLENBQURtQyxFQUFBekMsS0FBQSxnQkFBQXlDLEVBQUFsQyxPQUFBLFNBQVMsTUFBSSxZQUM5Qm9DLFlBQTRCSCxHQUFrQixDQUFEQyxFQUFBekMsS0FBQSxnQkFBQXlDLEVBQUFsQyxPQUFBLFNBQ3RDekIsRUFBZXVCLHdCQUFDLENBQUMsRUFDakJtQyxHQUNBL0IsSUFBd0IrQixFQUFpQjlCLFNBQzlDLGVBQUErQixFQUFBbEMsT0FBQSxTQUdDaUMsR0FBZ0IseUJBQUFDLEVBQUFiLE9BQUEsR0FBQVMsRUFBQSxJQXRCaUQzRCxFQXVCNUUsRUFHTW1FLHFCQUFvQixTQUN0QnJFLEVBQXFEc0UsR0FFaUIsT0FBRHBFLFlBQUFDLGNBQUFDLE1BQUEsU0FBQW1FLElBQUEsSUFBQWpFLEVBQUFHLEVBQUEsT0FBQU4sY0FBQWtCLE1BQUEsU0FBQW1ELEdBQUEsY0FBQUEsRUFBQWpELEtBQUFpRCxFQUFBaEQsTUFBQSxPQUN4RCxHQUZYbEIsRUFBZWdFLEVBQWZoRSxnQkFFZ0JOLEVBQVZVLE1BQ0csQ0FBRDhELEVBQUFoRCxLQUFBLGVBQUFnRCxFQUFBekMsT0FBQSxTQUFTLE1BQUksY0FBQXlDLEVBQUFoRCxLQUFBLEVBRUFpRCxZQUFzQjVDLFlBQUMsQ0FBQyxFQUFJN0IsSUFBUSxLQUFELEVBQTVDLEdBQVJTLEVBQVErRCxFQUFBMUMsS0FFQSxDQUFEMEMsRUFBQWhELEtBQUEsZUFBQWdELEVBQUF6QyxPQUFBLFNBQVMsTUFBSSxXQUN0QkMsWUFBdUJ2QixHQUFVLENBQUQrRCxFQUFBaEQsS0FBQSxnQkFBQWdELEVBQUF6QyxPQUFBLFNBQ3pCekIsRUFBZXVCLHdCQUFDLENBQUMsRUFBSXBCLEdBQWF3QixJQUF3QnhCLEVBQVN5QixTQUFRLGVBQUFzQyxFQUFBekMsT0FBQSxTQUcvRXRCLEdBQVEseUJBQUErRCxFQUFBcEIsT0FBQSxHQUFBbUIsRUFBQSxJQVhzRHJFLEVBWXpFLEVBRU13RSx5QkFBd0IsU0FDMUIxRSxFQUEwRDJFLEdBRWtCLE9BQUR6RSxZQUFBQyxjQUFBQyxNQUFBLFNBQUF3RSxJQUFBLElBQUF0RSxFQUFBRyxFQUFBLE9BQUFOLGNBQUFrQixNQUFBLFNBQUF3RCxHQUFBLGNBQUFBLEVBQUF0RCxLQUFBc0QsRUFBQXJELE1BQUEsT0FDOUQsR0FGWGxCLEVBQWVxRSxFQUFmckUsZ0JBRWdCTixFQUFWVSxNQUNHLENBQURtRSxFQUFBckQsS0FBQSxlQUFBcUQsRUFBQTlDLE9BQUEsU0FBUyxNQUFJLGNBQUE4QyxFQUFBckQsS0FBQSxFQUVBc0QsWUFBeUI5RSxHQUFNLEtBQUQsRUFBdkMsR0FBUlMsRUFBUW9FLEVBQUEvQyxLQUVBLENBQUQrQyxFQUFBckQsS0FBQSxlQUFBcUQsRUFBQTlDLE9BQUEsU0FBUyxNQUFJLFdBQ3RCQyxZQUF1QnZCLEdBQVUsQ0FBRG9FLEVBQUFyRCxLQUFBLGdCQUFBcUQsRUFBQTlDLE9BQUEsU0FDekJ6QixFQUFldUIsd0JBQUMsQ0FBQyxFQUFJcEIsR0FBYXdCLElBQXdCeEIsRUFBU3lCLFNBQVEsZUFBQTJDLEVBQUE5QyxPQUFBLFNBRy9FdEIsR0FBUSx5QkFBQW9FLEVBQUF6QixPQUFBLEdBQUF3QixFQUFBLElBWDREMUUsRUFZL0UsRUFHTTZFLG9CQUFtQixTQUNyQi9FLEVBQXFEZ0YsR0FFa0IsT0FBRDlFLFlBQUFDLGNBQUFDLE1BQUEsU0FBQTZFLElBQUEsSUFBQTNFLEVBQUFFLEVBQUFDLEVBQUEsT0FBQU4sY0FBQWtCLE1BQUEsU0FBQTZELEdBQUEsY0FBQUEsRUFBQTNELEtBQUEyRCxFQUFBMUQsTUFBQSxPQUM5QyxPQUZ0QmxCLEVBQWUwRSxFQUFmMUUsZ0JBRVNFLEVBQUkyRSxPQUFBQyxPQUFBLElBQUFDLFlBQUtyRixPQUFJa0YsRUFBQTFELEtBQUEsRUFDRDJCLFlBQW1CdEIsWUFBQyxDQUFDLEVBQUlyQixJQUFRLEtBQUQsRUFBekMsR0FBUkMsRUFBUXlFLEVBQUFwRCxLQUVBLENBQURvRCxFQUFBMUQsS0FBQSxlQUFBMEQsRUFBQW5ELE9BQUEsU0FBUyxNQUFJLFdBRXRCQyxZQUF1QnZCLEdBQVUsQ0FBRHlFLEVBQUExRCxLQUFBLGVBQUEwRCxFQUFBbkQsT0FBQSxTQUN6QnpCLEVBQWV1Qix3QkFBQyxDQUFDLEVBQUlwQixHQUFhd0IsSUFBd0J4QixFQUFTeUIsU0FBUSxjQUFBZ0QsRUFBQW5ELE9BQUEsU0FHL0V0QixHQUFRLHlCQUFBeUUsRUFBQTlCLE9BQUEsR0FBQTZCLEVBQUEsSUFWdUQvRSxFQVcxRSxJLE9DckxTb0YsRUFBOEJDLFlBQ3ZDN0gsR0FDQSxTQUFBdUMsR0FBOEIsSUFBM0J1RixFQUFPdkYsRUFBUHVGLFFBQVNDLEVBQVV4RixFQUFWd0YsV0FDUkQsRUFBUTdGLEVBQTJCK0YsT0FBTyxrQkFBQTdELFlBQUMsQ0FBRCxFQUFZbkUsRUFBMkIsSUFHakY4SCxFQUFRM0YsRUFBNEJFLG1CQUFtQjRGLFdBQVcsU0FBQ0MsRUFBS3RDLEdBQW1CLElBQWZ1QyxFQUFPdkMsRUFBUHVDLFFBR3hFLEdBRkFELEVBQU05SCxVQUFXLEVBQ2pCOEgsRUFBTTdILE1BQVFMLEVBQTRCSyxNQUNyQzhILEVBQUwsQ0FDQSxJQUFRakYsRUFBd0JpRixFQUF4QmpGLEtBQU1qRCxFQUFrQmtJLEVBQWxCbEksY0FDZGlJLEVBQU0xSCxlQUFpQjBDLEVBQ3ZCZ0YsRUFBTWpJLGNBQWdCQSxDQUhGLENBSXhCLElBRUE2SCxFQUFRN0YsRUFBMkJtRywwQkFBMEIsU0FBQ0YsR0FDMURBLEVBQU16SCxvQkFBc0JULEVBQTRCUyxtQkFDNUQsSUFFQXFILEVBQVE3RixFQUEyQm9HLHFCQUFxQixTQUFDSCxHQUNyREEsRUFBTTFILGVBQWlCUixFQUE0QlEsY0FDdkQsSUFFQXNILEVBQVE3RixFQUEyQnFHLG9CQUFvQixTQUFDSixHQUNwREEsRUFBTXBILFNBQVFxRCx3QkFBQSxHQUFRK0QsRUFBTXBILFVBQVEsSUFBRXlILGNBQWVDLE1BQ3JETixFQUFNdEgsU0FBUXVELHdCQUFBLEdBQVErRCxFQUFNdEgsVUFBUSxJQUFFNkgsaUJBQWtCRCxLQUM1RCxJQUVBVixFQUFRN0YsRUFBMkJELHFCQUFxQixTQUFDa0csRUFBS2hDLEdBQW1CLElBQWZpQyxFQUFPakMsRUFBUGlDLFFBQzlERCxFQUFNbEcsb0JBQXNCbUcsQ0FDaEMsSUFFQUwsRUFBUTdGLEVBQTJCeUcsZUFBZSxTQUFDUixHQUMvQ0EsRUFBTTVILFFBQVVOLEVBQTRCTSxPQUNoRCxJQUVBd0gsRUFBUTdGLEVBQTJCMEcsc0JBQXNCLFNBQUNULEdBQ3REQSxFQUFNM0gsZ0JBQWtCUCxFQUE0Qk8sZUFDeEQsSUFFQXVILEVBQVE3RixFQUEyQjJHLGNBQWMsU0FBQ1YsR0FDOUNBLEVBQU1ySCxRQUFVYixFQUE0QmEsT0FDaEQsSUFFQWlILEVBQVE3RixFQUEyQjRHLFVBQVUsU0FBQ1gsRUFBS3RCLEdBQW1CLElBQWZ1QixFQUFPdkIsRUFBUHVCLFFBQ25ERCxFQUFNM0csVUFBWTRHLENBQ3RCLElBRUFMLEVBQ0kzRixFQUE0QndELHFCQUFxQnNDLFdBQ2pELFNBQUNDLEVBQUtqQixHQUFtQixJQUFma0IsRUFBT2xCLEVBQVBrQixRQUNORCxFQUFNOUgsVUFBVyxFQUNqQjhILEVBQU03SCxNQUFRTCxFQUE0QkssTUFDckM4SCxJQUNMRCxFQUFNWSxpQkFBbUJYLEVBQVFqRixLQUFLNEYsaUJBQzFDLElBR0poQixFQUNJM0YsRUFBNEI4RCw2QkFBNkJnQyxXQUN6RCxTQUFDQyxFQUFLWixHQUFtQixJQUFmYSxFQUFPYixFQUFQYSxRQUNORCxFQUFNOUgsVUFBVyxFQUNqQjhILEVBQU03SCxNQUFRTCxFQUE0QkssTUFDckM4SCxJQUNMRCxFQUFNeEgsYUFBYyxFQUNwQndILEVBQU12SCxxQkFBdUJ3SCxFQUFRakYsS0FDekMsSUFHSjRFLEVBQ0kzRixFQUE0QndFLHFCQUFxQnNCLFdBQ2pELFNBQUNDLEVBQUthLEdBQW1CLElBQWZaLEVBQU9ZLEVBQVBaLFFBR04sR0FGQUQsRUFBTTlILFVBQVcsRUFDakI4SCxFQUFNN0gsTUFBUUwsRUFBNEJLLE1BQ3JDOEgsRUFBTCxDQUNBLElBQVFqRixFQUF3QmlGLEVBQXhCakYsS0FBTWpELEVBQWtCa0ksRUFBbEJsSSxjQUNWaUQsRUFBSzhGLG9CQUNMOUYsRUFBSzhGLG1CQUFtQkMsT0FBT0MsS0FBTUMsTUFFckNqRyxFQUFLNUMsU0FBV0wsSUFDaEJpSSxFQUFNM0gsZ0JBQWtCMkMsRUFBS2tHLGdCQUVqQ2xCLEVBQU0xSCxlQUFpQjBDLEVBQ3ZCZ0YsRUFBTWpJLGNBQWdCQSxDQVRGLENBVXhCLElBR0o2SCxFQUNJM0YsRUFBNEI2RSx5QkFBeUJpQixXQUNyRCxTQUFDQyxFQUFLbUIsR0FBbUIsSUFBZmxCLEVBQU9rQixFQUFQbEIsUUFHTixHQUZBRCxFQUFNOUgsVUFBVyxFQUNqQjhILEVBQU03SCxNQUFRTCxFQUE0QkssTUFDckM4SCxFQUFMLENBQ0EsSUFBUWpGLEVBQVNpRixFQUFUakYsS0FDUmdGLEVBQU12RyxpQkFBbUJ1QixDQUZMLENBR3hCLElBR0o0RSxFQUFRM0YsRUFBNEJrRixvQkFBb0JZLFdBQVcsU0FBQ0MsRUFBS29CLEdBQW1CLElBQWZuQixFQUFPbUIsRUFBUG5CLFFBR3pFLEdBRkFELEVBQU05SCxVQUFXLEVBQ2pCOEgsRUFBTTdILE1BQVFMLEVBQTRCSyxNQUNyQzhILEVBQUwsQ0FDQSxJQUFRakYsRUFBd0JpRixFQUF4QmpGLEtBQU1qRCxFQUFrQmtJLEVBQWxCbEksY0FDVmlELEVBQUtuQixTQUFRbUcsRUFBTW5HLE9BQVNtQixFQUFLbkIsUUFDckNtRyxFQUFNL0gsZUFBZ0IsRUFDdEIrSCxFQUFNakksY0FBZ0JBLENBSkYsQ0FLeEIsSUFFQTZILEVBQVE3RixFQUEyQkgsZUFBZSxTQUFDb0csRUFBS3FCLEdBQW1CLElBQWZwQixFQUFPb0IsRUFBUHBCLFFBQ3hERCxFQUFNcEcsY0FBYSxHQUFBMEgsT0FBTXJCLEVBQzdCLElBRUFMLEVBQVE3RixFQUEyQjlCLGVBQWUsU0FBQytILEVBQUt1QixHQUFtQixJQUFmdEIsRUFBT3NCLEVBQVB0QixRQUN4REQsRUFBTS9ILGNBQWdCZ0ksQ0FDMUIsSUFFQUwsRUFBUTdGLEVBQTJCeUgsd0JBQXdCLFNBQUN4QixFQUFLeUIsR0FBbUIsSUFBZnhCLEVBQU93QixFQUFQeEIsUUFDakVELEVBQU16SCxvQkFBc0IwSCxFQUFRMUgsbUJBQ3hDLElBRUFxSCxFQUFRN0YsRUFBMkJyQixVQUFVLFNBQUNzSCxFQUFLMEIsR0FBbUIsSUFBZnpCLEVBQU95QixFQUFQekIsUUFDbkRELEVBQU10SCxTQUFXdUgsQ0FDckIsSUFFQUwsRUFBUTdGLEVBQTJCcEIsU0FBUyxTQUFDcUgsRUFBSzJCLEdBQW1CLElBQWYxQixFQUFPMEIsRUFBUDFCLFFBQ2xERCxFQUFNckgsUUFBVXNILENBQ3BCLElBRUFMLEVBQVE3RixFQUEyQm5CLFVBQVUsU0FBQ29ILEVBQUs0QixHQUFtQixJQUFmM0IsRUFBTzJCLEVBQVAzQixRQUNuREQsRUFBTXBILFNBQVdxSCxDQUNyQixJQUVBTCxFQUFRN0YsRUFBMkJYLGVBQWUsU0FBQzRHLEVBQUs2QixHQUFtQixJQUFmNUIsRUFBTzRCLEVBQVA1QixRQUN4REQsRUFBTTVHLGNBQWdCNkcsQ0FDMUIsSUFFQUwsRUFBUTdGLEVBQTJCK0gscUJBQXFCLFNBQUM5QixFQUFLK0IsR0FBbUIsSUFBZjlCLEVBQU84QixFQUFQOUIsUUFDOURELEVBQU0xRyxpQkFBbUIyRyxDQUM3QixJQUVBTCxFQUFRN0YsRUFBMkJpSSxrQkFBa0IsU0FBQ2hDLEVBQUtpQyxHQUFtQixJQUFmaEMsRUFBT2dDLEVBQVBoQyxRQUMzREQsRUFBTXpHLGNBQWdCMEcsQ0FDMUIsSUFFQUwsRUFBUTdGLEVBQTJCUCx5QkFBeUIsU0FBQ3dHLEVBQUtrQyxHQUFtQixJQUFmakMsRUFBT2lDLEVBQVBqQyxRQUNsRUQsRUFBTXhHLHdCQUEwQnlHLENBQ3BDLElBRUFMLEVBQVE3RixFQUEyQkwsYUFBYSxTQUFDc0csRUFBS21DLEdBQW1CLElBQWZsQyxFQUFPa0MsRUFBUGxDLFFBQ3RERCxFQUFNdEcsWUFBY3VHLENBQ3hCLElBRUFKLEdBQ0ksU0FBQ3VDLEdBQU0sT0FBS0MsWUFBVUQsRUFBUXZLLEVBQTRCLElBQzFELFNBQUNtSSxHQUNHQSxFQUFNOUgsVUFBVyxFQUNqQjhILEVBQU03SCxNQUFRTCxFQUE0QkssTUFDMUM2SCxFQUFNNUgsUUFBVU4sRUFBNEJNLE9BQ2hELElBR0p5SCxHQUNJLFNBQUN1QyxHQUFNLE9BQUtFLFlBQVdGLEVBQVF2SyxFQUE0QixJQUMzRCxTQUFDbUksRUFBS3VDLEdBQW1CLElBQWZ0QyxFQUFPc0MsRUFBUHRDLFFBQ05ELEVBQU05SCxVQUFXLEVBQ2JzSyxZQUFvQm5HLElBQXlCNEQsRUFBUTNELE1BQ3JEMEQsRUFBTTVILFFBQVU2SCxFQUVoQkQsRUFBTTdILE1BQVE4SCxDQUV0QixHQUVSLElDakxHLFNBQVN3QyxFQUE2QkMsR0FDekMsT0FBT0EsRUFBTTdLLEVBQ2pCLENBRUE0SyxFQUE2QnZLLFNBQVd5SyxZQUNwQ0YsR0FDQSxTQUFDekMsR0FBSyxPQUFLQSxFQUFNOUgsUUFBUSxJQUU3QnVLLEVBQTZCdEssTUFBUXdLLFlBQ2pDRixHQUNBLFNBQUN6QyxHQUFLLE9BQUtBLEVBQU03SCxLQUFLLElBRTFCc0ssRUFBNkJySyxRQUFVdUssWUFDbkNGLEdBQ0EsU0FBQ3pDLEdBQUssT0FBS0EsRUFBTTVILE9BQU8sSUFFNUJxSyxFQUE2QnRJLG1CQUFxQndJLFlBQzlDRixHQUNBLFNBQUN6QyxHQUFLLE9BQUtBLEVBQU0xSCxjQUFjLElBRW5DbUssRUFBNkJoRixxQkFBdUJrRixZQUNoREYsR0FDQSxTQUFDekMsR0FBSyxPQUFLQSxFQUFNWSxnQkFBZ0IsSUFFckM2QixFQUE2QkcsMEJBQTRCRCxZQUNyREYsR0FDQSxTQUFDekMsR0FBSyxPQUFLQSxFQUFNekgsbUJBQW1CLElBRXhDa0ssRUFBNkJ4SCxTQUFXMEgsWUFDcENGLEdBQ0EsU0FBQ3pDLEdBQUssSUFBQTZDLEVBQUEsT0FBeUIsUUFBekJBLEVBQUs3QyxFQUFNMUgsc0JBQWMsSUFBQXVLLE9BQUEsRUFBcEJBLEVBQXNCNUgsUUFBUSxJQUU3Q3dILEVBQTZCakssWUFBY21LLFlBQ3ZDRixHQUNBLFNBQUN6QyxHQUFLLE9BQUtBLEVBQU14SCxXQUFXLElBRWhDaUssRUFBNkJLLHlCQUEyQkgsWUFDcERGLEdBQ0EsU0FBQ3pDLEdBQUssSUFBQStDLEVBQUEsT0FBK0IsUUFBL0JBLEVBQUsvQyxFQUFNdkgsNEJBQW9CLElBQUFzSyxPQUFBLEVBQTFCQSxFQUE0QkMsUUFBUSxJQUVuRFAsRUFBNkJRLDRCQUE4Qk4sWUFDdkRGLEdBQ0EsU0FBQ3pDLEdBQUssSUFBQWtELEVBQUEsT0FBK0IsUUFBL0JBLEVBQUtsRCxFQUFNdkgsNEJBQW9CLElBQUF5SyxPQUFBLEVBQTFCQSxFQUE0QkMsT0FBTyxJQUVsRFYsRUFBNkJ2SCxPQUFTeUgsWUFDbENGLEdBQ0EsU0FBQ3pDLEdBQUssSUFBQW9ELEVBQUEsT0FBeUIsUUFBekJBLEVBQUtwRCxFQUFNMUgsc0JBQWMsSUFBQThLLE9BQUEsRUFBcEJBLEVBQXNCbEksTUFBTSxJQUUzQ3VILEVBQTZCL0osU0FBV2lLLFlBQ3BDRixHQUNBLFNBQUN6QyxHQUFLLE9BQUtBLEVBQU10SCxRQUFRLElBRTdCK0osRUFBNkI5SixRQUFVZ0ssWUFDbkNGLEdBQ0EsU0FBQ3pDLEdBQUssT0FBS0EsRUFBTXJILE9BQU8sSUFFNUI4SixFQUE2QjdKLFNBQVcrSixZQUNwQ0YsR0FDQSxTQUFDekMsR0FBSyxPQUFLQSxFQUFNcEgsUUFBUSxJQUU3QjZKLEVBQTZCckosY0FBZ0J1SixZQUN6Q0YsR0FDQSxTQUFDekMsR0FBSyxPQUFLQSxFQUFNNUcsYUFBYSxJQUVsQ3FKLEVBQTZCbkosaUJBQW1CcUosWUFDNUNGLEdBQ0EsU0FBQ3pDLEdBQUssT0FBS0EsRUFBTTFHLGdCQUFnQixJQUVyQ21KLEVBQTZCbEosY0FBZ0JvSixZQUN6Q0YsR0FDQSxTQUFDekMsR0FBSyxPQUFLQSxFQUFNekcsYUFBYSxJQUVsQ2tKLEVBQTZCakosd0JBQTBCbUosWUFDbkRGLEdBQ0EsU0FBQ3pDLEdBQUssT0FBS0EsRUFBTXhHLHVCQUF1QixJQUU1Q2lKLEVBQTZCeEssY0FBZ0IwSyxZQUN6Q0YsR0FDQSxTQUFDekMsR0FBSyxPQUFLQSxFQUFNL0gsYUFBYSxJQUVsQ3dLLEVBQTZCbkssZUFBaUJxSyxZQUMxQ0YsR0FDQSxTQUFDekMsR0FBSyxPQUFLQSxFQUFNMUgsY0FBYyxJQUVuQ21LLEVBQTZCbEssb0JBQXNCb0ssWUFDL0NGLEdBQ0EsU0FBQ3pDLEdBQUssT0FBS0EsRUFBTXpILG1CQUFtQixJQUV4Q2tLLEVBQTZCMUssY0FBZ0I0SyxZQUN6Q0YsR0FDQSxTQUFDekMsR0FBSyxPQUFLQSxFQUFNakksYUFBYSxJQUVsQzBLLEVBQTZCL0ksWUFBY2lKLFlBQ3ZDRixHQUNBLFNBQUN6QyxHQUFLLE9BQUtBLEVBQU10RyxXQUFXLElBRWhDK0ksRUFBNkJZLGdCQUFrQlYsWUFDM0NGLEdBQ0EsU0FBQ3pDLEdBQUssT0FBS0EsRUFBTXRHLGNBQWdCQyxHQUFNLElBRTNDOEksRUFBNkI3SSxjQUFnQitJLFlBQ3pDRixHQUNBLFNBQUN6QyxHQUFLLE9BQUtBLEVBQU1wRyxhQUFhLElBRWxDNkksRUFBNkJhLHFCQUF1QlgsWUFDaERGLEdBQ0EsU0FBQ3pDLEdBQUssSUFBQXVELEVBQUEsT0FBMkIsUUFBM0JBLEVBQUt2RCxFQUFNdkcsd0JBQWdCLElBQUE4SixPQUFBLEVBQXRCQSxFQUF3QlAsUUFBUSxJQUUvQ1AsRUFBNkJlLHdCQUEwQmIsWUFDbkRGLEdBQ0EsU0FBQ3pDLEdBQUssSUFBQXlELEVBQUEsT0FBMkIsUUFBM0JBLEVBQUt6RCxFQUFNdkcsd0JBQWdCLElBQUFnSyxPQUFBLEVBQXRCQSxFQUF3Qk4sT0FBTyxJQUU5Q1YsRUFBNkI1SSxPQUFTOEksWUFDbENGLEdBQ0EsU0FBQ3pDLEdBQUssT0FBS0EsRUFBTW5HLE1BQU0sSUFFM0I0SSxFQUE2QnBKLFVBQVlzSixZQUNyQ0YsR0FDQSxTQUFDekMsR0FBSyxPQUFLQSxFQUFNM0csU0FBUyxJQUU5Qm9KLEVBQTZCM0ksb0JBQXNCNkksWUFDL0NGLEdBQ0EsU0FBQ3pDLEdBQUssT0FBS0EsRUFBTWxHLG1CQUFtQixJQUd4QzJJLEVBQTZCcEssZ0JBQWtCc0ssWUFDM0NGLEdBQ0EsU0FBQ3pDLEdBQUssT0FBS0EsRUFBTTNILGVBQWUsSUM1SDdCLElBQU1xTCxFQUFvQkMsWUFBQSxHQUFNOUwsRUFBOEI2SCxFLDZMQ0x4RGtFLEVBQTJCLGVBNkMzQkMsRUFBc0QsQ0FDL0RDLGVBQWdCLEdBQ2hCNUwsVUFBVSxFQUNWNkwsU0FBUyxFQUNUNUwsV0FBT0gsRUFDUEksYUFBU0osRUFDVG1GLFdBQVltRCxJQUNaMEQsT0FBUSxHQUNSak0sY0FBZXVJLElBQ2YyRCxzQkFBc0IsRywrQkN0RGJDLEVBQTBCbEssWUFTcEM0SixFQUEwQixDQUN6QixRQUNBLHVCQUNBLHNCQUNBLCtCLGNDTlNPLEVBQTJCakssWUFBZTBKLEVBQTBCLENBRXZFUSxhQUFZLFNBQ2RoSyxFQUEyQ0MsR0FFa0IsT0FBREMsWUFBQUMsY0FBQUMsTUFBQSxTQUFBQyxJQUFBLElBQUFDLEVBQUFHLEVBQUEsT0FBQU4sY0FBQWtCLE1BQUEsU0FBQUMsR0FBQSxjQUFBQSxFQUFBQyxLQUFBRCxFQUFBRSxNQUFBLE9BRDNDLE9BQWZsQixFQUFlTCxFQUFmSyxnQkFBZWdCLEVBQUFFLEtBQUEsRUFFTXlJLFlBQVlwSSxZQUFDLENBQUMsRUFBSTdCLElBQVEsS0FBRCxFQUFsQyxHQUFSUyxFQUFRYSxFQUFBUSxLQUNBLENBQURSLEVBQUFFLEtBQUEsZUFBQUYsRUFBQVMsT0FBQSxTQUFTLE1BQUksV0FDdEJtSSxZQUFvQnpKLEdBQVUsQ0FBRGEsRUFBQUUsS0FBQSxlQUFBRixFQUFBUyxPQUFBLFNBQ3RCekIsRUFBZXVCLHdCQUFDLENBQUMsRUFBSXBCLEdBQWEwSixJQUFxQjFKLEVBQVN5QixTQUFRLGNBQUFaLEVBQUFTLE9BQUEsU0FHNUV0QixHQUFRLHdCQUFBYSxFQUFBOEIsT0FBQSxHQUFBL0MsRUFBQSxJQVA2Q0gsRUFRaEUsSSxlQ1hTa0ssRUFBMkI3RSxZQUNwQ2tFLEdBQ0EsU0FBQXhKLEdBQThCLElBQTNCdUYsRUFBT3ZGLEVBQVB1RixRQUFTQyxFQUFVeEYsRUFBVndGLFdBQ1JELEVBQVFzRSxFQUF3QnBFLE9BQU8sa0JBQUE3RCxZQUFDLENBQUQsRUFBWTRILEVBQXdCLElBRTNFakUsRUFBUXNFLEVBQXdCTyw0QkFBNEIsU0FBQ3pFLEdBQ3pEQSxFQUFNaUUscUJBQXVCSixFQUF5Qkksb0JBQzFELElBRUFyRSxFQUFRc0UsRUFBd0JRLHNCQUFzQixTQUFDMUUsRUFBS3RDLEdBQW1CLElBQWZ1QyxFQUFPdkMsRUFBUHVDLFFBQ3BEMEUsRUFBc0MxRSxFQUF0QzBFLFdBTUZiLEVBTndDN0QsRUFBMUIyRSxTQUVnQkMsUUFBTyxTQUFDQyxHQUFPLE9BQy9DSCxFQUFXSSxTQUFTRCxFQUFRRSxrQkFBa0IsSUFHZ0NDLEtBQzlFLFNBQUNDLEdBQUUsTUFBTSxDQUNMQyxlQUFnQkQsRUFBR0MsZUFDbkJILGtCQUFtQkUsRUFBR0Ysa0JBQ3RCSSxtQ0FBb0NGLEVBQUdFLG1DQUN2Q0Msd0JBQXlCSCxFQUFHRyx3QkFDNUJDLGlCQUFrQkosRUFBR0ksaUJBQ3JCQyxpQkFBa0JMLEVBQUdLLGlCQUNyQkMsc0JBQXVCTixFQUFHTSxzQkFDN0IsSUFHTHhGLEVBQU04RCxlQUFpQkEsQ0FDM0IsSUFFQWxFLEVBQVFzRSxFQUF3QnVCLHFCQUFxQixTQUFDekYsRUFBS2hDLEdBQThCLElBQWpCMEgsRUFBUzFILEVBQWxCaUMsUUFDckQwRixFQUFvQjNGLEVBQU04RCxlQUFlZSxRQUMzQyxTQUFDZSxHQUFHLE9BQUtBLEVBQUlaLG9CQUFzQlUsQ0FBUyxJQUdoRDFGLEVBQU04RCxlQUFpQjZCLENBQzNCLElBRUEvRixFQUFRdUUsRUFBeUJDLGFBQWFyRSxXQUFXLFNBQUNDLEVBQUt0QixHQUFtQixJQUFmdUIsRUFBT3ZCLEVBQVB1QixRQUcvRCxHQUZBRCxFQUFNOUgsVUFBVyxFQUNqQjhILEVBQU03SCxNQUFRMEwsRUFBeUIxTCxNQUNsQzhILEVBQUwsQ0FDQUQsRUFBTStELFNBQVUsRUFDaEIsSUFBQThCLEVBQStCNUYsRUFBUWpGLEtBQS9CbUMsRUFBVTBJLEVBQVYxSSxXQUFZNkcsRUFBTTZCLEVBQU43QixPQUNkOEIsRUFBMkI5RixFQUFNOEQsZUFBZWUsUUFDbEQsU0FBQ0MsR0FBTyxPQUFLQSxFQUFRaUIsY0FBZ0JqQixFQUFRaUIsYUFBYUMsT0FBU2hGLElBQUksSUFHckVpRixFQUFxQixPQUFOakMsUUFBTSxJQUFOQSxPQUFNLEVBQU5BLEVBQVFpQixLQUFJLFNBQUNpQixHQUM5QixJQUFNQyxFQUFjRCxFQUFhRSxXQUFhQyxJQUl4Q0MsRUFIcUJSLEVBQXlCUyxXQUNoRCxTQUFDQyxHQUFHLE9BQUtBLEVBQUlyQixpQkFBbUJlLEVBQWFPLE9BQU8sSUFFVEMsS0FDM0NDLEVBQTRCLEtBVWhDLE9BUElBLEVBREFSLEVBQ2FTLElBQXNCQyxPQUM1QlAsRUFDTU0sSUFBc0JFLFFBRXRCRixJQUFzQkcsU0FHdkM5Syx3QkFBQSxHQUNPaUssR0FBWSxJQUNmUyxjQUVSLElBRUEzRyxFQUFNN0MsV0FBdUIsT0FBVkEsUUFBVSxJQUFWQSxJQUFjbUQsSUFDakNOLEVBQU1nRSxPQUFxQixPQUFaaUMsUUFBWSxJQUFaQSxJQUFnQixHQUMvQmpHLEVBQU1qSSxjQUFnQmtJLEVBQVFsSSxjQUM5QmlJLEVBQU1pRSxzQkFBdUIsQ0FoQ1QsQ0FpQ3hCLElBRUFwRSxHQUNJLFNBQUN1QyxHQUFNLE9BQUtDLFlBQVVELEVBQVF3QixFQUF5QixJQUN2RCxTQUFDNUQsR0FDR0EsRUFBTTlILFVBQVcsRUFDakI4SCxFQUFNN0gsTUFBUTBMLEVBQXlCMUwsTUFDdkM2SCxFQUFNNUgsUUFBVXlMLEVBQXlCekwsT0FDN0MsSUFHSnlILEdBQ0ksU0FBQ3VDLEdBQU0sT0FBS0UsWUFBV0YsRUFBUXdCLEVBQXlCLElBQ3hELFNBQUM1RCxFQUFLakIsR0FBbUIsSUFBZmtCLEVBQU9sQixFQUFQa0IsUUFDTkQsRUFBTTlILFVBQVcsRUFDYnNLLFlBQW9CK0IsSUFBc0J0RSxFQUFRM0QsTUFDbEQwRCxFQUFNNUgsUUFBVTZILEVBRWhCRCxFQUFNN0gsTUFBUThILENBRXRCLEdBRVIsSUN6R0csU0FBUytHLEVBQTBCdEUsR0FDdEMsT0FBT0EsRUFBTWtCLEVBQ2pCLENBRUFvRCxFQUEwQjlPLFNBQVd5SyxZQUNqQ3FFLEdBQ0EsU0FBQ2hILEdBQUssT0FBS0EsRUFBTTlILFFBQVEsSUFHN0I4TyxFQUEwQmpELFFBQVVwQixZQUNoQ3FFLEdBQ0EsU0FBQ2hILEdBQUssT0FBS0EsRUFBTStELE9BQU8sSUFHNUJpRCxFQUEwQjdPLE1BQVF3SyxZQUFlcUUsR0FBMkIsU0FBQ2hILEdBQUssT0FBS0EsRUFBTTdILEtBQUssSUFDbEc2TyxFQUEwQjVPLFFBQVV1SyxZQUNoQ3FFLEdBQ0EsU0FBQ2hILEdBQUssT0FBS0EsRUFBTTVILE9BQU8sSUFHNUI0TyxFQUEwQmxELGVBQWlCbkIsWUFDdkNxRSxHQUNBLFNBQUNoSCxHQUFLLE9BQUtBLEVBQU04RCxjQUFjLElBR25Da0QsRUFBMEJDLGNBQWdCdEUsWUFBZXFFLEdBQTJCLFNBQUNoSCxHQUNqRixJQUFNa0gsRUFBaUJsSCxFQUFNZ0UsT0FNN0IsT0FMbUJoRSxFQUFNOEQsZUFBZW1CLEtBQUksU0FBQ1csRUFBS3VCLEdBQUcsSUFBQUMsRUFBQSxPQUFBbkwsd0JBQUEsR0FDOUMySixHQUFHLElBQ055QixjQUFrQyxRQUFyQkQsRUFBRUYsRUFBZUMsVUFBSSxJQUFBQyxPQUFBLEVBQW5CQSxFQUFxQlQsWUFBVSxHQUl0RCxJQUVBSyxFQUEwQmpQLGNBQWdCNEssWUFDdENxRSxHQUNBLFNBQUNoSCxHQUFLLE9BQUtBLEVBQU1qSSxhQUFhLElBR2xDaVAsRUFBMEIvQyxxQkFBdUJ0QixZQUM3Q3FFLEdBQ0EsU0FBQ2hILEdBQUssT0FBS0EsRUFBTWlFLG9CQUFvQixJQ3RDbEMsSUFBTXFELEVBQWlCM0QsWUFBQSxHQUFNQyxFQUEyQlksRSIsImZpbGUiOiJzdGF0aWMvanMvbWFpbn5jOWQwMjM2OS5mZjY2YzZjMS5jaHVuay5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTlNBUElHZW5lcmF0ZVBheW1lbnQgfSBmcm9tIFwiLi4vLi4vLi4vYXBpL3N1cHBsaWVycy9nZW5lcmF0ZVBheW1lbnRcIjtcbmltcG9ydCB0eXBlIHsgTlNBUElFcnJvciB9IGZyb20gXCIuLi8uLi8uLi9hcGkvZXJyb3JcIjtcbmltcG9ydCB7IE1BTlVBTCB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcbmltcG9ydCB7IERhdGVGb3JtYXRzLCBkYXRlRm9ybWF0dGVyIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL2RhdGVcIjtcblxuZXhwb3J0IGNvbnN0IE5BTUVfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVCA9IFwiZ2VuZXJhdGVwYXltZW50XCI7XG5cbmV4cG9ydCBkZWNsYXJlIG5hbWVzcGFjZSBOU1NsaWNlR2VuZXJhdGVQYXltZW50IHtcbiAgICBleHBvcnQgdHlwZSBQcm9wc0dlbmVyYXRlUGF5bWVudFByZSA9IE5TQVBJR2VuZXJhdGVQYXltZW50LlBhcmFtc0dlbmVyYXRlUGF5bWVudFByZSAmIHtcbiAgICAgICAgb3RwOiBzdHJpbmc7XG4gICAgfTtcbiAgICBleHBvcnQgdHlwZSBQcm9wc0dlbmVyYXRlUGF5bWVudFNlbmQgPSBOU0FQSUdlbmVyYXRlUGF5bWVudC5QYXJhbXNHZW5lcmF0ZVBheW1lbnRTZW5kO1xuXG4gICAgZXhwb3J0IHR5cGUgVHJhbnNmZXJBY2NvdW50ID0ge1xuICAgICAgICBhY2NvdW50TGFiZWw6IHN0cmluZztcbiAgICAgICAgYWNjb3VudE51bWJlcjogc3RyaW5nO1xuICAgICAgICBhY2NvdW50Q3VycmVuY3k6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgICAgICAgYWNjb3VudEJhbGFuY2U6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgICB9O1xuXG4gICAgZXhwb3J0IHR5cGUgVHJhbnNmZXJEYXRhID0ge1xuICAgICAgICBrZXk/OiBzdHJpbmc7XG4gICAgICAgIHN1cHBsaWVyPzogc3RyaW5nO1xuICAgICAgICBwYXltZW50UmVmZXJlbmNlPzogc3RyaW5nO1xuICAgICAgICBzZW5kRW1haWw/OiBib29sZWFuO1xuICAgICAgICBzdXBwbGllckVtYWlsPzogc3RyaW5nO1xuICAgICAgICBwYXltZW50RGF0ZT86IHN0cmluZztcbiAgICAgICAgcGF5bWVudEFtb3VudD86IHN0cmluZztcbiAgICAgICAgc2V0VHJhbnNmZXJUYWJsZT86IGJvb2xlYW47XG4gICAgfTtcblxuICAgIGV4cG9ydCB0eXBlIFRyYW5zZmVyU3VwcGxpZXIgPSB7XG4gICAgICAgIHN1cHBsaWVyPzogc3RyaW5nO1xuICAgICAgICBwYXltZW50UmVmZXJlbmNlPzogc3RyaW5nO1xuICAgICAgICBzdXBwbGllckNCVT86IHN0cmluZztcbiAgICAgICAgc3VwcGxlckFjY291bnQ/OiBzdHJpbmc7XG4gICAgICAgIHN1cHBsaWVyQ1VJVD86IHN0cmluZztcbiAgICAgICAgc3VwcGxpZXJCYW5rPzogc3RyaW5nO1xuICAgICAgICBzYW1lT3JpZ2luPzogYm9vbGVhbjtcbiAgICAgICAgc2VuZEVtYWlsPzogYm9vbGVhbjtcbiAgICAgICAgc3VwcGxpZXJFbWFpbD86IHN0cmluZztcbiAgICB9O1xuXG4gICAgZXhwb3J0IHR5cGUgVGFibGVEYXRhID0ge1xuICAgICAgICBrZXk6IHN0cmluZztcbiAgICAgICAgc3VwcGxpZXJOYW1lOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgICAgIHJlZmVyZW5jZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgICAgICBzdXBwbGllckNCVTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgICAgICB0cmFuc2ZlckRhdGE6IFRyYW5zZmVyRGF0YVtdO1xuICAgICAgICBkZWJpdEFjY291bnQ/OiBzdHJpbmc7XG4gICAgfTtcblxuICAgIGV4cG9ydCB0eXBlIHRyYW5zZmVyc1N1cHBsaWVyc0Vycm9yID0ge1xuICAgICAgICBhbW91bnQ6IHN0cmluZztcbiAgICAgICAgZGF0ZTogc3RyaW5nO1xuICAgICAgICBlcnJvcjogc3RyaW5nO1xuICAgICAgICByb3c6IHN0cmluZztcbiAgICB9O1xuXG4gICAgZXhwb3J0IHR5cGUgUHJvcHNCdWlsZEFjY291bnRzID0ge1xuICAgICAgICB0b2tlbjogc3RyaW5nO1xuICAgIH07XG5cbiAgICBleHBvcnQgdHlwZSBQcm9wc1BheW1lbnRGaWxlVGVtcGxhdGUgPSB7XG4gICAgICAgIHRlbXBsYXRlVHlwZTogc3RyaW5nO1xuICAgICAgICB0b2tlbjogc3RyaW5nO1xuICAgIH07XG5cbiAgICBleHBvcnQgdHlwZSBQcm9wc1ZhbGlkYXRlUGF5bWVudEZpbGUgPSBOU0FQSUdlbmVyYXRlUGF5bWVudC5QYXJhbXNWYWxpZGF0ZUZpbGVQYXltZW50UHJlO1xuXG4gICAgZXhwb3J0IHR5cGUgUHJvcHNEb3dubG9hZFBheW1lbnRFcnJvckZpbGUgPSBOU0FQSUdlbmVyYXRlUGF5bWVudC5QYXJhbXNEb3dubG9hZFBheWVudEVycm9yRmlsZTtcblxuICAgIGV4cG9ydCB0eXBlIFByb3BzQ29udHJhY3RJZCA9IHtcbiAgICAgICAgdG9rZW46IHN0cmluZztcbiAgICB9O1xuXG4gICAgZXhwb3J0IHR5cGUgQWNjb3VudFN1cHBsaWVyRGF0YSA9IHtcbiAgICAgICAgYWNjb3VudE51bWJlcj86IHN0cmluZztcbiAgICAgICAgYmFua05hbWU/OiBzdHJpbmc7XG4gICAgICAgIGN1aXQ/OiBzdHJpbmc7XG4gICAgICAgIGNidUFsaWFzPzogc3RyaW5nO1xuICAgICAgICByZWNpcGllbnROYW1lPzogc3RyaW5nO1xuICAgICAgICBpZFRyYW5zZmVyQWNjb3VudD86IHN0cmluZztcbiAgICAgICAgZW1haWw/OiBzdHJpbmc7XG4gICAgfTtcblxuICAgIGV4cG9ydCB0eXBlIERhdGFTdXBwbGllcnNBY2NvdW50cyA9IHtcbiAgICAgICAgdHJhbnNmZXJBY2NvdW50cz86IEFjY291bnRTdXBwbGllckRhdGFbXTtcbiAgICB9O1xuXG4gICAgZXhwb3J0IHR5cGUgRGF0YVBheW1lbnRzRmlsZVRlbXBsYXRlID0ge1xuICAgICAgICBmaWxlTmFtZTogc3RyaW5nO1xuICAgICAgICBjb250ZW50VHlwZTogc3RyaW5nO1xuICAgICAgICBjb250ZW50OiBzdHJpbmc7XG4gICAgfTtcblxuICAgIGV4cG9ydCB0eXBlIFBheW1lbnRGaWxlVGVtcGxhdGUgPSB7XG4gICAgICAgIGZpbGVOYW1lOiBzdHJpbmc7XG4gICAgICAgIGNvbnRlbnQ6IHN0cmluZztcbiAgICB9O1xuXG4gICAgZXhwb3J0IHR5cGUgRGF0YVBheW1lbnRGaWxlVGVtcGxhdGUgPSBOU0FQSUdlbmVyYXRlUGF5bWVudC5EYXRhUGF5bWVudHNGaWxlVGVtcGxhdGVEb3dubG9hZDtcblxuICAgIGV4cG9ydCB0eXBlIFBheW1lbnRFcnJvckZpbGUgPSBOU0FQSUdlbmVyYXRlUGF5bWVudC5EYXRhRG93bmxvYWRQYXltZW50RXJyb3JGaWxlO1xuXG4gICAgZXhwb3J0IHR5cGUgRGF0YURpbmFtaWNUYWJsZSA9IHtcbiAgICAgICAgYWNjb3VudDogc3RyaW5nO1xuICAgICAgICBuYW1lOiBzdHJpbmc7XG4gICAgICAgIGNidTogc3RyaW5nO1xuICAgICAgICByZWZlcmVuY2U/OiBzdHJpbmc7XG4gICAgICAgIGVtYWlsPzogc3RyaW5nO1xuICAgICAgICBhbW91bnQ6IHN0cmluZztcbiAgICAgICAgaWQ6IHN0cmluZztcbiAgICB9O1xuXG4gICAgZXhwb3J0IHR5cGUgR2VuZXJhdGVQYXltZW50UHJlRGF0YSA9IHtcbiAgICAgICAgZmllbGRfZGViaXRBY2NvdW50U2VsZWN0OiBzdHJpbmc7XG4gICAgICAgIGNyZWRpdEFjY291bnRTZWxlY3Q/OiBzdHJpbmc7XG4gICAgICAgIGFtb3VudD86IHN0cmluZztcbiAgICAgICAgZGViaXRBY2NvdW50OiBzdHJpbmc7XG4gICAgICAgIHJlZmVyZW5jZT86IHN0cmluZztcbiAgICAgICAgZW1haWw/OiBzdHJpbmc7XG4gICAgICAgIGZpZWxkX2RhdGU6IHN0cmluZztcbiAgICAgICAgZmllbGRfdG90YWxfYW1vdW50OiBzdHJpbmc7XG4gICAgICAgIGNvbnNvbGlkYXRlRGViaXRGaWxlOiBib29sZWFuO1xuICAgICAgICBjb25zb2xpZGF0ZURlYml0OiBib29sZWFuO1xuICAgICAgICBjb250cmFjdElkOiBzdHJpbmc7XG4gICAgICAgIGRpbmFtaWNEYXRhVGFibGU6IERhdGFEaW5hbWljVGFibGVbXTtcbiAgICAgICAgYWN0aW9uOiBzdHJpbmc7XG4gICAgfTtcblxuICAgIGV4cG9ydCB0eXBlIFRyYW5zZmVyc0RhdGEgPSB7XG4gICAgICAgIGtleTogc3RyaW5nO1xuICAgICAgICBhY2NvdW50Pzogc3RyaW5nO1xuICAgICAgICBuYW1lPzogc3RyaW5nO1xuICAgICAgICBjYnU/OiBzdHJpbmc7XG4gICAgICAgIHJlZmVyZW5jZT86IHN0cmluZztcbiAgICAgICAgZW1haWw/OiBzdHJpbmc7XG4gICAgICAgIGFtb3VudD86IHN0cmluZztcbiAgICAgICAgZGF0ZT86IHN0cmluZztcbiAgICB9O1xuXG4gICAgZXhwb3J0IHR5cGUgUHJlRGF0YSA9IHtcbiAgICAgICAgZGF0YUdlbmVyYXRlUGF5bWVudDogVHJhbnNmZXJzRGF0YVtdO1xuICAgIH07XG5cbiAgICBleHBvcnQgdHlwZSBXYXJuaW5nTWVzc2FnZSA9IHtcbiAgICAgICAgY29kZTogc3RyaW5nO1xuICAgICAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgfTtcblxuICAgIGV4cG9ydCB0eXBlIERhdGFHZW5lcmF0ZVBheW1lbnRTZW5kID0gTlNBUElHZW5lcmF0ZVBheW1lbnQuRGF0YUdlbmVyYXRlUGF5bWVudFNlbmQ7XG5cbiAgICBleHBvcnQgdHlwZSBTdGF0ZSA9IHtcbiAgICAgICAgZmV0Y2hpbmc6IGJvb2xlYW47XG4gICAgICAgIGVycm9yPzogTlNBUElFcnJvci5TY2hlbWE7XG4gICAgICAgIHdhcm5pbmc/OiBOU0FQSUVycm9yLlNjaGVtYTtcbiAgICAgICAgdHJhbnNmZXJXYXJuaW5nPzogV2FybmluZ01lc3NhZ2U7XG4gICAgICAgIGRhdGFQYXltZW50UHJlPzogTlNBUElHZW5lcmF0ZVBheW1lbnQuRGF0YUdlbmVyYXRlUGF5bWVudFByZTtcbiAgICAgICAgdHJhbnNmZXJBY2NvdW50cz86IEFjY291bnRTdXBwbGllckRhdGFbXTtcbiAgICAgICAgZmV0Y2hlZEZpbGU/OiBib29sZWFuO1xuICAgICAgICBwYXltZW50c0ZpbGVUZW1wbGF0ZT86IFBheW1lbnRGaWxlVGVtcGxhdGU7XG4gICAgICAgIGRhdGFHZW5lcmF0ZVBheW1lbnQ/OiBUcmFuc2ZlcnNEYXRhW107XG4gICAgICAgIHN1cHBsaWVyPzogVHJhbnNmZXJTdXBwbGllcjtcbiAgICAgICAgYWNjb3VudD86IFRyYW5zZmVyQWNjb3VudDtcbiAgICAgICAgdHJhbnNmZXI/OiBUcmFuc2ZlckRhdGE7XG4gICAgICAgIHRyYW5zZmVyVGFibGU/OiBUYWJsZURhdGFbXTtcbiAgICAgICAgaGFzT3JkZXJzOiBib29sZWFuO1xuICAgICAgICBkZWxldGVkVHJhbnNmZXJzOiBib29sZWFuO1xuICAgICAgICBkZWxldGVkT3JkZXJzOiBib29sZWFuO1xuICAgICAgICB0cmFuc2ZlcnNTdXBwbGllcnNFcnJvcj86IHRyYW5zZmVyc1N1cHBsaWVyc0Vycm9yW107XG4gICAgICAgIHBheW1lbnRFcnJvckZpbGU/OiBQYXltZW50RXJyb3JGaWxlO1xuICAgICAgICBzZW5kRnVsZmlsbGVkOiBib29sZWFuO1xuICAgICAgICBpZFRyYW5zYWN0aW9uPzogc3RyaW5nO1xuICAgICAgICBwYXltZW50VHlwZTogc3RyaW5nO1xuICAgICAgICBtYXNzaXZlRmlsZUlkOiBzdHJpbmcgfCB1bmRlZmluZWQ7IC8vIE9ubHkgdXNlZCBpbiBmaWxlIHBheW1lbnRcbiAgICAgICAgaWRMb3RlPzogc3RyaW5nO1xuICAgICAgICBjbGVhblRyYW5zZmVyRmllbGRzPzogYm9vbGVhbjtcbiAgICB9O1xufVxuXG5leHBvcnQgY29uc3QgSU5JVF9TTElDRV9HRU5FUkFURV9QQVlNRU5UOiBOU1NsaWNlR2VuZXJhdGVQYXltZW50LlN0YXRlID0ge1xuICAgIGlkVHJhbnNhY3Rpb246IHVuZGVmaW5lZCxcbiAgICBzZW5kRnVsZmlsbGVkOiBmYWxzZSxcbiAgICBmZXRjaGluZzogZmFsc2UsXG4gICAgZXJyb3I6IHVuZGVmaW5lZCxcbiAgICB3YXJuaW5nOiB1bmRlZmluZWQsXG4gICAgdHJhbnNmZXJXYXJuaW5nOiB1bmRlZmluZWQsXG4gICAgZGF0YVBheW1lbnRQcmU6IHVuZGVmaW5lZCxcbiAgICBkYXRhR2VuZXJhdGVQYXltZW50OiB1bmRlZmluZWQsXG4gICAgZmV0Y2hlZEZpbGU6IGZhbHNlLFxuICAgIHBheW1lbnRzRmlsZVRlbXBsYXRlOiB1bmRlZmluZWQsXG4gICAgc3VwcGxpZXI6IHVuZGVmaW5lZCxcbiAgICBhY2NvdW50OiB1bmRlZmluZWQsXG4gICAgdHJhbnNmZXI6IHtcbiAgICAgICAgcGF5bWVudERhdGU6IGRhdGVGb3JtYXR0ZXIobmV3IERhdGUoKSwge1xuICAgICAgICAgICAgZGVmYXVsdFJlc3VsdDogXCIvXCIsXG4gICAgICAgICAgICBmb3JtYXQ6IERhdGVGb3JtYXRzLlNIT1JULFxuICAgICAgICB9KSxcbiAgICB9LFxuICAgIHRyYW5zZmVyVGFibGU6IHVuZGVmaW5lZCxcbiAgICBoYXNPcmRlcnM6IGZhbHNlLFxuICAgIGRlbGV0ZWRUcmFuc2ZlcnM6IGZhbHNlLFxuICAgIGRlbGV0ZWRPcmRlcnM6IGZhbHNlLFxuICAgIHRyYW5zZmVyc1N1cHBsaWVyc0Vycm9yOiB1bmRlZmluZWQsXG4gICAgcGF5bWVudEVycm9yRmlsZTogdW5kZWZpbmVkLFxuICAgIHBheW1lbnRUeXBlOiBNQU5VQUwsXG4gICAgbWFzc2l2ZUZpbGVJZDogdW5kZWZpbmVkLFxuICAgIGlkTG90ZTogdW5kZWZpbmVkLFxuICAgIGNsZWFuVHJhbnNmZXJGaWVsZHM6IGZhbHNlLFxufTtcbiIsImltcG9ydCB7IENyZWF0ZUFjdGlvbnMgfSBmcm9tIFwiQHBrZy9yZWFjdC9zcmMvc3RvcmVcIjtcbmltcG9ydCB0eXBlIHsgTlNTbGljZUdlbmVyYXRlUGF5bWVudCB9IGZyb20gXCIuL19uYW1lc3BhY2VcIjtcbmltcG9ydCB7IE5BTUVfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVCB9IGZyb20gXCIuL19uYW1lc3BhY2VcIjtcblxuZXhwb3J0IGNvbnN0IEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50ID0gQ3JlYXRlQWN0aW9uczx7XG4gICAgLyoqIERvY3VtZW50YXRpb246IGNsZWFuIHN0b3JlIHRvIGluaXRpYWwgdmFsdWUgKi9cbiAgICBjbGVhbjogdm9pZDtcbiAgICBnZW5lcmF0ZVBheW1lbnRQcmU6IE5TU2xpY2VHZW5lcmF0ZVBheW1lbnQuUHJvcHNHZW5lcmF0ZVBheW1lbnRQcmU7XG4gICAgZ2VuZXJhdGVQYXltZW50UHJlRGF0YTogTlNTbGljZUdlbmVyYXRlUGF5bWVudC5QcmVEYXRhO1xuICAgIC8qKiBEb2N1bWVudGF0aW9uOiBzZXQgc3VwbGllciB2YWx1ZSAodW5kZWZpbmVkIHRvIGNsZWFuIHN1cHBsaWVyIGRhdGEpICovXG4gICAgc3VwcGxpZXI6IE5TU2xpY2VHZW5lcmF0ZVBheW1lbnQuVHJhbnNmZXJTdXBwbGllciB8IHVuZGVmaW5lZDtcbiAgICBhY2NvdW50OiBOU1NsaWNlR2VuZXJhdGVQYXltZW50LlRyYW5zZmVyQWNjb3VudDtcbiAgICB0cmFuc2ZlcjogTlNTbGljZUdlbmVyYXRlUGF5bWVudC5UcmFuc2ZlckRhdGE7XG4gICAgdHJhbnNmZXJUYWJsZTogTlNTbGljZUdlbmVyYXRlUGF5bWVudC5UYWJsZURhdGFbXTtcbiAgICB0cmFuc2ZlcnNTdXBwbGllcnNFcnJvcjogTlNTbGljZUdlbmVyYXRlUGF5bWVudC50cmFuc2ZlcnNTdXBwbGllcnNFcnJvcltdO1xuICAgIHNldERlbGV0ZWRUcmFuc2ZlcnM6IGJvb2xlYW47XG4gICAgc2V0RGVsZXRlZE9yZGVyczogYm9vbGVhbjtcbiAgICBzZW5kRnVsZmlsbGVkOiBib29sZWFuO1xuICAgIHBheW1lbnRUeXBlOiBzdHJpbmc7XG4gICAgbWFzc2l2ZUZpbGVJZDogbnVtYmVyO1xuICAgIHNldE9yZGVyOiBib29sZWFuO1xuICAgIGNsZWFuRGF0YVBheW1lbnRQcmU6IHZvaWQ7XG4gICAgY2xlYW5EYXRhR2VuZXJhdGVQYXltZW50OiB2b2lkO1xuICAgIGNsZWFuT25BZGRUcmFuc2Zlcjogdm9pZDtcbiAgICBjbGVhblRyYW5zZmVyRmllbGRzOiBib29sZWFuO1xuICAgIGNsZWFuVHJhbnNmZXJXYXJuaW5nOiB2b2lkO1xuICAgIGNsZWFuV2FybmluZ3M6IHZvaWQ7XG4gICAgY2xlYW5BY2NvdW50OiB2b2lkO1xufT4oTkFNRV9TTElDRV9HRU5FUkFURV9QQVlNRU5ULCBbXG4gICAgXCJjbGVhblwiLFxuICAgIFwiZ2VuZXJhdGVQYXltZW50UHJlXCIsXG4gICAgXCJnZW5lcmF0ZVBheW1lbnRQcmVEYXRhXCIsXG4gICAgXCJzdXBwbGllclwiLFxuICAgIFwiYWNjb3VudFwiLFxuICAgIFwidHJhbnNmZXJcIixcbiAgICBcInRyYW5zZmVyVGFibGVcIixcbiAgICBcInNldERlbGV0ZWRUcmFuc2ZlcnNcIixcbiAgICBcInNldERlbGV0ZWRPcmRlcnNcIixcbiAgICBcInNldE9yZGVyXCIsXG4gICAgXCJ0cmFuc2ZlcnNTdXBwbGllcnNFcnJvclwiLFxuICAgIFwic2VuZEZ1bGZpbGxlZFwiLFxuICAgIFwicGF5bWVudFR5cGVcIixcbiAgICBcIm1hc3NpdmVGaWxlSWRcIixcbiAgICBcImNsZWFuRGF0YVBheW1lbnRQcmVcIixcbiAgICBcImNsZWFuRGF0YUdlbmVyYXRlUGF5bWVudFwiLFxuICAgIFwiY2xlYW5PbkFkZFRyYW5zZmVyXCIsXG4gICAgXCJjbGVhblRyYW5zZmVyRmllbGRzXCIsXG4gICAgXCJjbGVhblRyYW5zZmVyV2FybmluZ1wiLFxuICAgIFwiY2xlYW5XYXJuaW5nc1wiLFxuICAgIFwiY2xlYW5BY2NvdW50XCIsXG5dKTtcbiIsImltcG9ydCB7IENyZWF0ZUZldGNoZXJzIH0gZnJvbSBcIkBwa2cvcmVhY3Qvc3RvcmVcIjtcblxuaW1wb3J0IHR5cGUgeyBOU1NsaWNlR2VuZXJhdGVQYXltZW50IH0gZnJvbSBcIi4vX25hbWVzcGFjZVwiO1xuaW1wb3J0IHsgTkFNRV9TTElDRV9HRU5FUkFURV9QQVlNRU5UIH0gZnJvbSBcIi4vX25hbWVzcGFjZVwiO1xuXG5pbXBvcnQgdHlwZSB7IE5TQVBJR2VuZXJhdGVQYXltZW50IH0gZnJvbSBcIi4uLy4uLy4uL2FwaS9zdXBwbGllcnMvZ2VuZXJhdGVQYXltZW50XCI7XG5pbXBvcnQge1xuICAgIEdldFN1cHBsaWVyc0FjY291bnRzLFxuICAgIEdlbmVyYXRlUGF5bWVudFByZSxcbiAgICBHZW5lcmF0ZVBheW1lbnRTZW5kLFxuICAgIFZhbGlkYXRlUGF5bWVudEZpbGVQcmUsXG4gICAgRG93bmxvYWRQYXltZW50RXJyb3JGaWxlLFxuICAgIGlzR2VuZXJhdGVQYXltZW50RXJyb3IsXG4gICAgaXNQYXltZW50c0ZpbGVUZW1wbGF0ZUVycm9yLFxuICAgIEdFTkVSQVRFX1BBWU1FTlRfRVJST1JTLFxuICAgIFBheW1lbnRzR2V0VGVtcGxhdGVJZCxcbiAgICBEb3dubG9hZFBheW1lbnRzRmlsZVRlbXBsYXRlLFxufSBmcm9tIFwiLi4vLi4vLi4vYXBpL3N1cHBsaWVycy9nZW5lcmF0ZVBheW1lbnRcIjtcbmltcG9ydCB0eXBlIHsgRmV0Y2hlclJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uLy4uL2FwaVwiO1xuaW1wb3J0IHsgaXNBY2NvdW50RXJyb3IgfSBmcm9tIFwiLi4vLi4vLi4vYXBpL2FjY291bnRcIjtcbmltcG9ydCB7IEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50IH0gZnJvbSBcIi4vX2FjdGlvbnNcIjtcbmltcG9ydCB7IENVUlJFTkNZLCBET1RfU1RSIH0gZnJvbSBcIi4uLy4uLy4uL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgU3RvcmUgfSBmcm9tIFwiLi4vLi4vLi5cIjtcblxuZXhwb3J0IGNvbnN0IEZldGNoZXJTbGljZUdlbmVyYXRlUGF5bWVudCA9IENyZWF0ZUZldGNoZXJzKE5BTUVfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVCwge1xuICAgIC8qKiBEb2N1bWVudGF0aW9uOiBnZW5lcmF0ZSBwYXltZW50IHByZSAqL1xuICAgIGFzeW5jIGdlbmVyYXRlUGF5bWVudFByZShcbiAgICAgICAgb3B0czogTlNTbGljZUdlbmVyYXRlUGF5bWVudC5Qcm9wc0dlbmVyYXRlUGF5bWVudFByZSxcbiAgICAgICAgeyByZWplY3RXaXRoVmFsdWUgfSxcbiAgICApOiBQcm9taXNlPEZldGNoZXJSZXNwb25zZTxOU0FQSUdlbmVyYXRlUGF5bWVudC5EYXRhR2VuZXJhdGVQYXltZW50UHJlPj4ge1xuICAgICAgICBjb25zdCB7IG90cDogX290cCwgLi4ucmVzdCB9ID0gb3B0cztcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBHZW5lcmF0ZVBheW1lbnRQcmUoeyAuLi5yZXN0IH0pO1xuXG4gICAgICAgIGlmICghcmVzcG9uc2UpIHJldHVybiBudWxsO1xuXG4gICAgICAgIGlmIChpc0dlbmVyYXRlUGF5bWVudEVycm9yKHJlc3BvbnNlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlamVjdFdpdGhWYWx1ZSh7IC4uLnJlc3BvbnNlLCAuLi5HRU5FUkFURV9QQVlNRU5UX0VSUk9SU1tyZXNwb25zZS5jb2RlXSB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHsgdG9rZW4sIGZpZWxkX3RvdGFsX2Ftb3VudCB9ID0gb3B0cztcbiAgICAgICAgY29uc3QgeyBkYXRhIH0gPSByZXNwb25zZTtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgbmFtZUZpbGUsXG4gICAgICAgICAgICBpZEZpbGUsXG4gICAgICAgICAgICBhY2NvdW50SWRQcm9kdWN0LFxuICAgICAgICAgICAgZGViaXRBY2NvdW50TGFiZWwsXG4gICAgICAgICAgICBjdXJyZW5jeSxcbiAgICAgICAgICAgIG51bVRyYW5zZmVyc1Byb2Nlc3NlZCxcbiAgICAgICAgICAgIHRyYW5zZmVyc1N1cHBsaWVyc0Vycm9yLFxuICAgICAgICAgICAgZXJyb3IsXG4gICAgICAgIH0gPSBkYXRhO1xuXG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgU3RvcmUuZGlzcGF0Y2goXG4gICAgICAgICAgICAgICAgQWN0aW9uU2xpY2VHZW5lcmF0ZVBheW1lbnQudHJhbnNmZXJzU3VwcGxpZXJzRXJyb3IodHJhbnNmZXJzU3VwcGxpZXJzRXJyb3IpLFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIC8vVE9ETzogYWRkIGVycm9yIGluIGFjdGl2aXR5XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0V2l0aFZhbHVlKHtcbiAgICAgICAgICAgICAgICAuLi5yZXNwb25zZSxcbiAgICAgICAgICAgICAgICBjb2RlOiBcIkNPUjAyMFdcIixcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlJldmlzw6EgbG9zIHBhZ29zIGNvbiBlcnJvcmVzIGFncmVnYWRvc1wiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYm9keSA9IHtcbiAgICAgICAgICAgIHRva2VuOiBTdHJpbmcodG9rZW4pLFxuICAgICAgICAgICAgaWRGaWxlLFxuICAgICAgICAgICAgbmFtZUZpbGUsXG4gICAgICAgICAgICBhbW91bnQ6IE51bWJlcihmaWVsZF90b3RhbF9hbW91bnQucmVwbGFjZSgvLC9nLCBET1RfU1RSKSksXG4gICAgICAgICAgICB0b3RhbF9hbW91bnQ6IHtcbiAgICAgICAgICAgICAgICBjdXJyZW5jeTogQ1VSUkVOQ1kuQVJHX0lTTyxcbiAgICAgICAgICAgICAgICBxdWFudGl0eTogZmllbGRfdG90YWxfYW1vdW50LnJlcGxhY2UoLywvZywgRE9UX1NUUiksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY3VycmVuY3ksXG4gICAgICAgICAgICBjb250cmFjdElkOiBTdHJpbmcob3B0cy5jb250cmFjdElkKSwgLy9zZWUgaWYgd2UgbmVlZCB0byBzZW5kIHRoZSBjb250cmFjdCBpZCBhcyBlbmNyeXB0ZWQgb3Igbm90XG4gICAgICAgICAgICByb3dzOiBudW1UcmFuc2ZlcnNQcm9jZXNzZWQsXG4gICAgICAgICAgICBkZWJpdEFjY291bnQ6IGFjY291bnRJZFByb2R1Y3QsXG4gICAgICAgICAgICBkZWJpdEFjY291bnRMYWJlbCxcbiAgICAgICAgICAgIGNvbnNvbGlkYXRlRGViaXQ6IGZhbHNlLFxuICAgICAgICAgICAgX290cCxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2VTZW5kID0gYXdhaXQgR2VuZXJhdGVQYXltZW50U2VuZCh7IC4uLmJvZHkgfSk7XG5cbiAgICAgICAgaWYgKCFyZXNwb25zZVNlbmQpIHJldHVybiBudWxsO1xuXG4gICAgICAgIGlmIChpc0dlbmVyYXRlUGF5bWVudEVycm9yKHJlc3BvbnNlU2VuZCkpIHtcbiAgICAgICAgICAgIHJldHVybiByZWplY3RXaXRoVmFsdWUoe1xuICAgICAgICAgICAgICAgIC4uLnJlc3BvbnNlU2VuZCxcbiAgICAgICAgICAgICAgICAuLi5HRU5FUkFURV9QQVlNRU5UX0VSUk9SU1tyZXNwb25zZVNlbmQuY29kZV0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBTdG9yZS5kaXNwYXRjaChBY3Rpb25TbGljZUdlbmVyYXRlUGF5bWVudC5zZW5kRnVsZmlsbGVkKHRydWUpKTtcbiAgICAgICAgcmVzcG9uc2UuaWRUcmFuc2FjdGlvbiA9IHJlc3BvbnNlU2VuZC5pZFRyYW5zYWN0aW9uO1xuICAgICAgICByZXNwb25zZS5kYXRhLmlkTG90ZSA9IHJlc3BvbnNlU2VuZC5kYXRhLmlkTG90ZTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH0sXG5cbiAgICAvKiogRG9jdW1lbnRhdGlvbjogZ2V0IHN1cHBsaWVycyBhY2NvdW50cyAqL1xuICAgIGFzeW5jIGdldFN1cHBsaWVyc0FjY291bnRzKFxuICAgICAgICBvcHRzOiBOU1NsaWNlR2VuZXJhdGVQYXltZW50LlByb3BzQnVpbGRBY2NvdW50cyxcbiAgICAgICAgeyByZWplY3RXaXRoVmFsdWUgfSxcbiAgICApOiBQcm9taXNlPEZldGNoZXJSZXNwb25zZTxOU1NsaWNlR2VuZXJhdGVQYXltZW50LkRhdGFTdXBwbGllcnNBY2NvdW50cz4+IHtcbiAgICAgICAgY29uc3QgeyB0b2tlbiB9ID0gb3B0cztcbiAgICAgICAgaWYgKCF0b2tlbikgcmV0dXJuIG51bGw7XG5cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBHZXRTdXBwbGllcnNBY2NvdW50cyh7IHRva2VuIH0pO1xuXG4gICAgICAgIGlmICghcmVzcG9uc2UpIHJldHVybiBudWxsO1xuICAgICAgICBpZiAoaXNBY2NvdW50RXJyb3IocmVzcG9uc2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0V2l0aFZhbHVlKHsgLi4ucmVzcG9uc2UsIC4uLkdFTkVSQVRFX1BBWU1FTlRfRVJST1JTW3Jlc3BvbnNlLmNvZGVdIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9LFxuXG4gICAgLyoqIERvd25sb2FkIHRoZSBleGNlbCB0ZW1wbGF0ZSBmb3IgcGF5bWVudHMgKi9cbiAgICBhc3luYyBkb3dubG9hZFBheW1lbnRzRmlsZVRlbXBsYXRlKFxuICAgICAgICBvcHRzOiBOU1NsaWNlR2VuZXJhdGVQYXltZW50LlByb3BzUGF5bWVudEZpbGVUZW1wbGF0ZSxcbiAgICAgICAgeyByZWplY3RXaXRoVmFsdWUgfSxcbiAgICApOiBQcm9taXNlPEZldGNoZXJSZXNwb25zZTxOU1NsaWNlR2VuZXJhdGVQYXltZW50LkRhdGFQYXltZW50RmlsZVRlbXBsYXRlPj4ge1xuICAgICAgICBjb25zdCB7IHRva2VuLCB0ZW1wbGF0ZVR5cGUgfSA9IG9wdHM7XG4gICAgICAgIGlmICghdG9rZW4pIHJldHVybiBudWxsO1xuXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgUGF5bWVudHNHZXRUZW1wbGF0ZUlkKHsgdGVtcGxhdGVUeXBlLCB0b2tlbiB9KTtcblxuICAgICAgICBpZiAoIXJlc3BvbnNlKSByZXR1cm4gbnVsbDtcbiAgICAgICAgaWYgKGlzUGF5bWVudHNGaWxlVGVtcGxhdGVFcnJvcihyZXNwb25zZSkpIHtcbiAgICAgICAgICAgIHJldHVybiByZWplY3RXaXRoVmFsdWUoeyAuLi5yZXNwb25zZSwgLi4uR0VORVJBVEVfUEFZTUVOVF9FUlJPUlNbcmVzcG9uc2UuY29kZV0gfSk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB7IGlkVGVtcGxhdGUgfSA9IHJlc3BvbnNlLmRhdGE7XG5cbiAgICAgICAgY29uc3QgcmVzcG9uc2VEb3dubG9hZCA9IGF3YWl0IERvd25sb2FkUGF5bWVudHNGaWxlVGVtcGxhdGUoeyBpZFRlbXBsYXRlLCB0b2tlbiB9KTtcbiAgICAgICAgaWYgKCFyZXNwb25zZURvd25sb2FkKSByZXR1cm4gbnVsbDtcbiAgICAgICAgaWYgKGlzUGF5bWVudHNGaWxlVGVtcGxhdGVFcnJvcihyZXNwb25zZURvd25sb2FkKSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlamVjdFdpdGhWYWx1ZSh7XG4gICAgICAgICAgICAgICAgLi4ucmVzcG9uc2VEb3dubG9hZCxcbiAgICAgICAgICAgICAgICAuLi5HRU5FUkFURV9QQVlNRU5UX0VSUk9SU1tyZXNwb25zZURvd25sb2FkLmNvZGVdLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzcG9uc2VEb3dubG9hZDtcbiAgICB9LFxuXG4gICAgLyoqIFZhbGlkYXRlIHVwbG9hZGVkIGZpbGUgZm9yIHBheW1lbnRzICovXG4gICAgYXN5bmMgdmFsaWRhdGVQYXltZW50c0ZpbGUoXG4gICAgICAgIG9wdHM6IE5TU2xpY2VHZW5lcmF0ZVBheW1lbnQuUHJvcHNWYWxpZGF0ZVBheW1lbnRGaWxlLFxuICAgICAgICB7IHJlamVjdFdpdGhWYWx1ZSB9LFxuICAgICk6IFByb21pc2U8RmV0Y2hlclJlc3BvbnNlPE5TQVBJR2VuZXJhdGVQYXltZW50LkRhdGFHZW5lcmF0ZVBheW1lbnRQcmU+PiB7XG4gICAgICAgIGNvbnN0IHsgdG9rZW4gfSA9IG9wdHM7XG4gICAgICAgIGlmICghdG9rZW4pIHJldHVybiBudWxsO1xuXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgVmFsaWRhdGVQYXltZW50RmlsZVByZSh7IC4uLm9wdHMgfSk7XG5cbiAgICAgICAgaWYgKCFyZXNwb25zZSkgcmV0dXJuIG51bGw7XG4gICAgICAgIGlmIChpc0dlbmVyYXRlUGF5bWVudEVycm9yKHJlc3BvbnNlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlamVjdFdpdGhWYWx1ZSh7IC4uLnJlc3BvbnNlLCAuLi5HRU5FUkFURV9QQVlNRU5UX0VSUk9SU1tyZXNwb25zZS5jb2RlXSB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9LFxuXG4gICAgYXN5bmMgZG93bmxvYWRQYXltZW50RXJyb3JGaWxlKFxuICAgICAgICBvcHRzOiBOU1NsaWNlR2VuZXJhdGVQYXltZW50LlByb3BzRG93bmxvYWRQYXltZW50RXJyb3JGaWxlLFxuICAgICAgICB7IHJlamVjdFdpdGhWYWx1ZSB9LFxuICAgICk6IFByb21pc2U8RmV0Y2hlclJlc3BvbnNlPE5TQVBJR2VuZXJhdGVQYXltZW50LkRhdGFEb3dubG9hZFBheW1lbnRFcnJvckZpbGU+PiB7XG4gICAgICAgIGNvbnN0IHsgdG9rZW4gfSA9IG9wdHM7XG4gICAgICAgIGlmICghdG9rZW4pIHJldHVybiBudWxsO1xuXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgRG93bmxvYWRQYXltZW50RXJyb3JGaWxlKG9wdHMpO1xuXG4gICAgICAgIGlmICghcmVzcG9uc2UpIHJldHVybiBudWxsO1xuICAgICAgICBpZiAoaXNHZW5lcmF0ZVBheW1lbnRFcnJvcihyZXNwb25zZSkpIHtcbiAgICAgICAgICAgIHJldHVybiByZWplY3RXaXRoVmFsdWUoeyAuLi5yZXNwb25zZSwgLi4uR0VORVJBVEVfUEFZTUVOVF9FUlJPUlNbcmVzcG9uc2UuY29kZV0gfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfSxcblxuICAgIC8qKiBEbyB0aGUgcGF5bWVudCAqL1xuICAgIGFzeW5jIGdlbmVyYXRlUGF5bWVudFNlbmQoXG4gICAgICAgIG9wdHM6IE5TU2xpY2VHZW5lcmF0ZVBheW1lbnQuUHJvcHNHZW5lcmF0ZVBheW1lbnRTZW5kLFxuICAgICAgICB7IHJlamVjdFdpdGhWYWx1ZSB9LFxuICAgICk6IFByb21pc2U8RmV0Y2hlclJlc3BvbnNlPE5TQVBJR2VuZXJhdGVQYXltZW50LkRhdGFHZW5lcmF0ZVBheW1lbnRTZW5kPj4ge1xuICAgICAgICBjb25zdCB7IC4uLnJlc3QgfSA9IG9wdHM7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgR2VuZXJhdGVQYXltZW50U2VuZCh7IC4uLnJlc3QgfSk7XG5cbiAgICAgICAgaWYgKCFyZXNwb25zZSkgcmV0dXJuIG51bGw7XG5cbiAgICAgICAgaWYgKGlzR2VuZXJhdGVQYXltZW50RXJyb3IocmVzcG9uc2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0V2l0aFZhbHVlKHsgLi4ucmVzcG9uc2UsIC4uLkdFTkVSQVRFX1BBWU1FTlRfRVJST1JTW3Jlc3BvbnNlLmNvZGVdIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH0sXG59KTtcbiIsImltcG9ydCB0eXBlIHsgUGF5bG9hZEFjdGlvbiB9IGZyb20gXCJAcGtnL3JlYWN0L3N0b3JlXCI7XG5pbXBvcnQgeyBpc1BlbmRpbmcsIGlzUmVqZWN0ZWQgfSBmcm9tIFwiQHBrZy9yZWFjdC9zdG9yZS91dGlsc1wiO1xuaW1wb3J0IHsgQ3JlYXRlUmVkdWNlciB9IGZyb20gXCJAcGtnL3JlYWN0L3N0b3JlXCI7XG5pbXBvcnQgeyBHRU5FUkFURV9QQVlNRU5UX0VSUk9SUyB9IGZyb20gXCIuLi8uLi8uLi9hcGkvc3VwcGxpZXJzL2dlbmVyYXRlUGF5bWVudFwiO1xuaW1wb3J0IHsgQWN0aW9uU2xpY2VHZW5lcmF0ZVBheW1lbnQgfSBmcm9tIFwiLi9fYWN0aW9uc1wiO1xuaW1wb3J0IHsgRmV0Y2hlclNsaWNlR2VuZXJhdGVQYXltZW50IH0gZnJvbSBcIi4vX2ZldGNoZXJzXCI7XG5pbXBvcnQgeyBJTklUX1NMSUNFX0dFTkVSQVRFX1BBWU1FTlQsIE5BTUVfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVCB9IGZyb20gXCIuL19uYW1lc3BhY2VcIjtcbmltcG9ydCB0eXBlIHsgTlNBUElFcnJvciB9IGZyb20gXCIuLi8uLi8uLi9hcGkvZXJyb3JcIjtcbmltcG9ydCB7IGlzVmFsaWRhdGVFcnJvckNvZGUgfSBmcm9tIFwiLi4vLi4vLi4vYXBpL2Vycm9yXCI7XG5pbXBvcnQgeyBFTVBUWV9TVFJJTkcsIE9ORSwgWkVSTyB9IGZyb20gXCIuLi8uLi8uLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGNvbnN0IFJlZHVjZXJTbGljZUdlbmVyYXRlUGF5bWVudCA9IENyZWF0ZVJlZHVjZXIoXG4gICAgSU5JVF9TTElDRV9HRU5FUkFURV9QQVlNRU5ULFxuICAgICh7IGFkZENhc2UsIGFkZE1hdGNoZXIgfSkgPT4ge1xuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50LmNsZWFuLCAoKSA9PiAoeyAuLi5JTklUX1NMSUNFX0dFTkVSQVRFX1BBWU1FTlQgfSkpO1xuXG4gICAgICAgIC8vIEdlbmVyYXRlIHBheW1lbnQgUFJFIGNhc2VcbiAgICAgICAgYWRkQ2FzZShGZXRjaGVyU2xpY2VHZW5lcmF0ZVBheW1lbnQuZ2VuZXJhdGVQYXltZW50UHJlLmZ1bGZpbGxlZCwgKHN0YXRlLCB7IHBheWxvYWQgfSkgPT4ge1xuICAgICAgICAgICAgc3RhdGUuZmV0Y2hpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHN0YXRlLmVycm9yID0gSU5JVF9TTElDRV9HRU5FUkFURV9QQVlNRU5ULmVycm9yO1xuICAgICAgICAgICAgaWYgKCFwYXlsb2FkKSByZXR1cm47XG4gICAgICAgICAgICBjb25zdCB7IGRhdGEsIGlkVHJhbnNhY3Rpb24gfSA9IHBheWxvYWQ7XG4gICAgICAgICAgICBzdGF0ZS5kYXRhUGF5bWVudFByZSA9IGRhdGE7XG4gICAgICAgICAgICBzdGF0ZS5pZFRyYW5zYWN0aW9uID0gaWRUcmFuc2FjdGlvbjtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYWRkQ2FzZShBY3Rpb25TbGljZUdlbmVyYXRlUGF5bWVudC5jbGVhbkRhdGFHZW5lcmF0ZVBheW1lbnQsIChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgc3RhdGUuZGF0YUdlbmVyYXRlUGF5bWVudCA9IElOSVRfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVC5kYXRhR2VuZXJhdGVQYXltZW50O1xuICAgICAgICB9KTtcblxuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50LmNsZWFuRGF0YVBheW1lbnRQcmUsIChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgc3RhdGUuZGF0YVBheW1lbnRQcmUgPSBJTklUX1NMSUNFX0dFTkVSQVRFX1BBWU1FTlQuZGF0YVBheW1lbnRQcmU7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFkZENhc2UoQWN0aW9uU2xpY2VHZW5lcmF0ZVBheW1lbnQuY2xlYW5PbkFkZFRyYW5zZmVyLCAoc3RhdGUpID0+IHtcbiAgICAgICAgICAgIHN0YXRlLnRyYW5zZmVyID0geyAuLi5zdGF0ZS50cmFuc2ZlciwgcGF5bWVudEFtb3VudDogRU1QVFlfU1RSSU5HIH07XG4gICAgICAgICAgICBzdGF0ZS5zdXBwbGllciA9IHsgLi4uc3RhdGUuc3VwcGxpZXIsIHBheW1lbnRSZWZlcmVuY2U6IEVNUFRZX1NUUklORyB9O1xuICAgICAgICB9KTtcblxuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50LmNsZWFuVHJhbnNmZXJGaWVsZHMsIChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgICAgICAgIHN0YXRlLmNsZWFuVHJhbnNmZXJGaWVsZHMgPSBwYXlsb2FkO1xuICAgICAgICB9KTtcblxuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50LmNsZWFuV2FybmluZ3MsIChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgc3RhdGUud2FybmluZyA9IElOSVRfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVC53YXJuaW5nO1xuICAgICAgICB9KTtcblxuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50LmNsZWFuVHJhbnNmZXJXYXJuaW5nLCAoc3RhdGUpID0+IHtcbiAgICAgICAgICAgIHN0YXRlLnRyYW5zZmVyV2FybmluZyA9IElOSVRfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVC50cmFuc2Zlcldhcm5pbmc7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFkZENhc2UoQWN0aW9uU2xpY2VHZW5lcmF0ZVBheW1lbnQuY2xlYW5BY2NvdW50LCAoc3RhdGUpID0+IHtcbiAgICAgICAgICAgIHN0YXRlLmFjY291bnQgPSBJTklUX1NMSUNFX0dFTkVSQVRFX1BBWU1FTlQuYWNjb3VudDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYWRkQ2FzZShBY3Rpb25TbGljZUdlbmVyYXRlUGF5bWVudC5zZXRPcmRlciwgKHN0YXRlLCB7IHBheWxvYWQgfSkgPT4ge1xuICAgICAgICAgICAgc3RhdGUuaGFzT3JkZXJzID0gcGF5bG9hZDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYWRkQ2FzZShcbiAgICAgICAgICAgIEZldGNoZXJTbGljZUdlbmVyYXRlUGF5bWVudC5nZXRTdXBwbGllcnNBY2NvdW50cy5mdWxmaWxsZWQsXG4gICAgICAgICAgICAoc3RhdGUsIHsgcGF5bG9hZCB9KSA9PiB7XG4gICAgICAgICAgICAgICAgc3RhdGUuZmV0Y2hpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBzdGF0ZS5lcnJvciA9IElOSVRfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVC5lcnJvcjtcbiAgICAgICAgICAgICAgICBpZiAoIXBheWxvYWQpIHJldHVybjtcbiAgICAgICAgICAgICAgICBzdGF0ZS50cmFuc2ZlckFjY291bnRzID0gcGF5bG9hZC5kYXRhLnRyYW5zZmVyQWNjb3VudHM7XG4gICAgICAgICAgICB9LFxuICAgICAgICApO1xuXG4gICAgICAgIGFkZENhc2UoXG4gICAgICAgICAgICBGZXRjaGVyU2xpY2VHZW5lcmF0ZVBheW1lbnQuZG93bmxvYWRQYXltZW50c0ZpbGVUZW1wbGF0ZS5mdWxmaWxsZWQsXG4gICAgICAgICAgICAoc3RhdGUsIHsgcGF5bG9hZCB9KSA9PiB7XG4gICAgICAgICAgICAgICAgc3RhdGUuZmV0Y2hpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBzdGF0ZS5lcnJvciA9IElOSVRfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVC5lcnJvcjtcbiAgICAgICAgICAgICAgICBpZiAoIXBheWxvYWQpIHJldHVybjtcbiAgICAgICAgICAgICAgICBzdGF0ZS5mZXRjaGVkRmlsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgc3RhdGUucGF5bWVudHNGaWxlVGVtcGxhdGUgPSBwYXlsb2FkLmRhdGE7XG4gICAgICAgICAgICB9LFxuICAgICAgICApO1xuXG4gICAgICAgIGFkZENhc2UoXG4gICAgICAgICAgICBGZXRjaGVyU2xpY2VHZW5lcmF0ZVBheW1lbnQudmFsaWRhdGVQYXltZW50c0ZpbGUuZnVsZmlsbGVkLFxuICAgICAgICAgICAgKHN0YXRlLCB7IHBheWxvYWQgfSkgPT4ge1xuICAgICAgICAgICAgICAgIHN0YXRlLmZldGNoaW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgc3RhdGUuZXJyb3IgPSBJTklUX1NMSUNFX0dFTkVSQVRFX1BBWU1FTlQuZXJyb3I7XG4gICAgICAgICAgICAgICAgaWYgKCFwYXlsb2FkKSByZXR1cm47XG4gICAgICAgICAgICAgICAgY29uc3QgeyBkYXRhLCBpZFRyYW5zYWN0aW9uIH0gPSBwYXlsb2FkO1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnRyYW5zZmVyc1N1cHBsaWVycykge1xuICAgICAgICAgICAgICAgICAgICBkYXRhLnRyYW5zZmVyc1N1cHBsaWVycy5zcGxpY2UoWkVSTywgT05FKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEud2FybmluZyAmJiBpZFRyYW5zYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlLnRyYW5zZmVyV2FybmluZyA9IGRhdGEud2FybmluZ01lc3NhZ2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN0YXRlLmRhdGFQYXltZW50UHJlID0gZGF0YTtcbiAgICAgICAgICAgICAgICBzdGF0ZS5pZFRyYW5zYWN0aW9uID0gaWRUcmFuc2FjdGlvbjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICk7XG5cbiAgICAgICAgYWRkQ2FzZShcbiAgICAgICAgICAgIEZldGNoZXJTbGljZUdlbmVyYXRlUGF5bWVudC5kb3dubG9hZFBheW1lbnRFcnJvckZpbGUuZnVsZmlsbGVkLFxuICAgICAgICAgICAgKHN0YXRlLCB7IHBheWxvYWQgfSkgPT4ge1xuICAgICAgICAgICAgICAgIHN0YXRlLmZldGNoaW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgc3RhdGUuZXJyb3IgPSBJTklUX1NMSUNFX0dFTkVSQVRFX1BBWU1FTlQuZXJyb3I7XG4gICAgICAgICAgICAgICAgaWYgKCFwYXlsb2FkKSByZXR1cm47XG4gICAgICAgICAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBwYXlsb2FkO1xuICAgICAgICAgICAgICAgIHN0YXRlLnBheW1lbnRFcnJvckZpbGUgPSBkYXRhO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgKTtcblxuICAgICAgICBhZGRDYXNlKEZldGNoZXJTbGljZUdlbmVyYXRlUGF5bWVudC5nZW5lcmF0ZVBheW1lbnRTZW5kLmZ1bGZpbGxlZCwgKHN0YXRlLCB7IHBheWxvYWQgfSkgPT4ge1xuICAgICAgICAgICAgc3RhdGUuZmV0Y2hpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHN0YXRlLmVycm9yID0gSU5JVF9TTElDRV9HRU5FUkFURV9QQVlNRU5ULmVycm9yO1xuICAgICAgICAgICAgaWYgKCFwYXlsb2FkKSByZXR1cm47XG4gICAgICAgICAgICBjb25zdCB7IGRhdGEsIGlkVHJhbnNhY3Rpb24gfSA9IHBheWxvYWQ7XG4gICAgICAgICAgICBpZiAoZGF0YS5pZExvdGUpIHN0YXRlLmlkTG90ZSA9IGRhdGEuaWRMb3RlO1xuICAgICAgICAgICAgc3RhdGUuc2VuZEZ1bGZpbGxlZCA9IHRydWU7XG4gICAgICAgICAgICBzdGF0ZS5pZFRyYW5zYWN0aW9uID0gaWRUcmFuc2FjdGlvbjtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYWRkQ2FzZShBY3Rpb25TbGljZUdlbmVyYXRlUGF5bWVudC5tYXNzaXZlRmlsZUlkLCAoc3RhdGUsIHsgcGF5bG9hZCB9KSA9PiB7XG4gICAgICAgICAgICBzdGF0ZS5tYXNzaXZlRmlsZUlkID0gYCR7cGF5bG9hZH1gO1xuICAgICAgICB9KTtcblxuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50LnNlbmRGdWxmaWxsZWQsIChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgICAgICAgIHN0YXRlLnNlbmRGdWxmaWxsZWQgPSBwYXlsb2FkO1xuICAgICAgICB9KTtcblxuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50LmdlbmVyYXRlUGF5bWVudFByZURhdGEsIChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgICAgICAgIHN0YXRlLmRhdGFHZW5lcmF0ZVBheW1lbnQgPSBwYXlsb2FkLmRhdGFHZW5lcmF0ZVBheW1lbnQ7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFkZENhc2UoQWN0aW9uU2xpY2VHZW5lcmF0ZVBheW1lbnQuc3VwcGxpZXIsIChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgICAgICAgIHN0YXRlLnN1cHBsaWVyID0gcGF5bG9hZDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYWRkQ2FzZShBY3Rpb25TbGljZUdlbmVyYXRlUGF5bWVudC5hY2NvdW50LCAoc3RhdGUsIHsgcGF5bG9hZCB9KSA9PiB7XG4gICAgICAgICAgICBzdGF0ZS5hY2NvdW50ID0gcGF5bG9hZDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYWRkQ2FzZShBY3Rpb25TbGljZUdlbmVyYXRlUGF5bWVudC50cmFuc2ZlciwgKHN0YXRlLCB7IHBheWxvYWQgfSkgPT4ge1xuICAgICAgICAgICAgc3RhdGUudHJhbnNmZXIgPSBwYXlsb2FkO1xuICAgICAgICB9KTtcblxuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50LnRyYW5zZmVyVGFibGUsIChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgICAgICAgIHN0YXRlLnRyYW5zZmVyVGFibGUgPSBwYXlsb2FkO1xuICAgICAgICB9KTtcblxuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50LnNldERlbGV0ZWRUcmFuc2ZlcnMsIChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgICAgICAgIHN0YXRlLmRlbGV0ZWRUcmFuc2ZlcnMgPSBwYXlsb2FkO1xuICAgICAgICB9KTtcblxuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50LnNldERlbGV0ZWRPcmRlcnMsIChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgICAgICAgIHN0YXRlLmRlbGV0ZWRPcmRlcnMgPSBwYXlsb2FkO1xuICAgICAgICB9KTtcblxuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlR2VuZXJhdGVQYXltZW50LnRyYW5zZmVyc1N1cHBsaWVyc0Vycm9yLCAoc3RhdGUsIHsgcGF5bG9hZCB9KSA9PiB7XG4gICAgICAgICAgICBzdGF0ZS50cmFuc2ZlcnNTdXBwbGllcnNFcnJvciA9IHBheWxvYWQ7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFkZENhc2UoQWN0aW9uU2xpY2VHZW5lcmF0ZVBheW1lbnQucGF5bWVudFR5cGUsIChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgICAgICAgIHN0YXRlLnBheW1lbnRUeXBlID0gcGF5bG9hZDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYWRkTWF0Y2hlcihcbiAgICAgICAgICAgIChhY3Rpb24pID0+IGlzUGVuZGluZyhhY3Rpb24sIE5BTUVfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVCksXG4gICAgICAgICAgICAoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICBzdGF0ZS5mZXRjaGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgc3RhdGUuZXJyb3IgPSBJTklUX1NMSUNFX0dFTkVSQVRFX1BBWU1FTlQuZXJyb3I7XG4gICAgICAgICAgICAgICAgc3RhdGUud2FybmluZyA9IElOSVRfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVC53YXJuaW5nO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgKTtcblxuICAgICAgICBhZGRNYXRjaGVyPFBheWxvYWRBY3Rpb248TlNBUElFcnJvci5TY2hlbWE+PihcbiAgICAgICAgICAgIChhY3Rpb24pID0+IGlzUmVqZWN0ZWQoYWN0aW9uLCBOQU1FX1NMSUNFX0dFTkVSQVRFX1BBWU1FTlQpLFxuICAgICAgICAgICAgKHN0YXRlLCB7IHBheWxvYWQgfSkgPT4ge1xuICAgICAgICAgICAgICAgIHN0YXRlLmZldGNoaW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKGlzVmFsaWRhdGVFcnJvckNvZGUoR0VORVJBVEVfUEFZTUVOVF9FUlJPUlMsIHBheWxvYWQuY29kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdGUud2FybmluZyA9IHBheWxvYWQ7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdGUuZXJyb3IgPSBwYXlsb2FkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICk7XG4gICAgfSxcbik7XG4iLCJpbXBvcnQgeyBDcmVhdGVTZWxlY3RvciB9IGZyb20gXCJAcGtnL3JlYWN0L3N0b3JlXCI7XG5pbXBvcnQgdHlwZSB7IFN0b3JlU3RhdGUgfSBmcm9tIFwiLi4vLi4vLi4vX3JlZHVjZXJcIjtcbmltcG9ydCB7IE1BTlVBTCB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcbmltcG9ydCB0eXBlIHsgTlNTbGljZUdlbmVyYXRlUGF5bWVudCB9IGZyb20gXCIuL19uYW1lc3BhY2VcIjtcbmltcG9ydCB7IE5BTUVfU0xJQ0VfR0VORVJBVEVfUEFZTUVOVCB9IGZyb20gXCIuL19uYW1lc3BhY2VcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQoc3RvcmU6IFN0b3JlU3RhdGUpOiBOU1NsaWNlR2VuZXJhdGVQYXltZW50LlN0YXRlIHtcbiAgICByZXR1cm4gc3RvcmVbTkFNRV9TTElDRV9HRU5FUkFURV9QQVlNRU5UXTtcbn1cblxuU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudC5mZXRjaGluZyA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS5mZXRjaGluZyxcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LmVycm9yID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudCxcbiAgICAoc3RhdGUpID0+IHN0YXRlLmVycm9yLFxuKTtcblNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQud2FybmluZyA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS53YXJuaW5nLFxuKTtcblNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQuZ2VuZXJhdGVQYXltZW50UHJlID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudCxcbiAgICAoc3RhdGUpID0+IHN0YXRlLmRhdGFQYXltZW50UHJlLFxuKTtcblNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQuZ2V0U3VwcGxpZXJzQWNjb3VudHMgPSBDcmVhdGVTZWxlY3RvcihcbiAgICBTZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LFxuICAgIChzdGF0ZSkgPT4gc3RhdGUudHJhbnNmZXJBY2NvdW50cyxcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LmdldEdlbmVyYXRlUGF5bWVudFByZURhdGEgPSBDcmVhdGVTZWxlY3RvcihcbiAgICBTZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LFxuICAgIChzdGF0ZSkgPT4gc3RhdGUuZGF0YUdlbmVyYXRlUGF5bWVudCxcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50Lm5hbWVGaWxlID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudCxcbiAgICAoc3RhdGUpID0+IHN0YXRlLmRhdGFQYXltZW50UHJlPy5uYW1lRmlsZSxcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LmZldGNoZWRGaWxlID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudCxcbiAgICAoc3RhdGUpID0+IHN0YXRlLmZldGNoZWRGaWxlLFxuKTtcblNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQucGF5bWVudHNUZW1wbGF0ZUZpbGVOYW1lID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudCxcbiAgICAoc3RhdGUpID0+IHN0YXRlLnBheW1lbnRzRmlsZVRlbXBsYXRlPy5maWxlTmFtZSxcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LnBheW1lbnRzVGVtcGxhdGVGaWxlQ29udGVudCA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS5wYXltZW50c0ZpbGVUZW1wbGF0ZT8uY29udGVudCxcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LmlkRmlsZSA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS5kYXRhUGF5bWVudFByZT8uaWRGaWxlLFxuKTtcblNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQuc3VwcGxpZXIgPSBDcmVhdGVTZWxlY3RvcihcbiAgICBTZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LFxuICAgIChzdGF0ZSkgPT4gc3RhdGUuc3VwcGxpZXIsXG4pO1xuU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudC5hY2NvdW50ID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudCxcbiAgICAoc3RhdGUpID0+IHN0YXRlLmFjY291bnQsXG4pO1xuU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudC50cmFuc2ZlciA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS50cmFuc2Zlcixcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LnRyYW5zZmVyVGFibGUgPSBDcmVhdGVTZWxlY3RvcihcbiAgICBTZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LFxuICAgIChzdGF0ZSkgPT4gc3RhdGUudHJhbnNmZXJUYWJsZSxcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LmRlbGV0ZWRUcmFuc2ZlcnMgPSBDcmVhdGVTZWxlY3RvcihcbiAgICBTZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LFxuICAgIChzdGF0ZSkgPT4gc3RhdGUuZGVsZXRlZFRyYW5zZmVycyxcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LmRlbGV0ZWRPcmRlcnMgPSBDcmVhdGVTZWxlY3RvcihcbiAgICBTZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LFxuICAgIChzdGF0ZSkgPT4gc3RhdGUuZGVsZXRlZE9yZGVycyxcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LnRyYW5zZmVyc1N1cHBsaWVyc0Vycm9yID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudCxcbiAgICAoc3RhdGUpID0+IHN0YXRlLnRyYW5zZmVyc1N1cHBsaWVyc0Vycm9yLFxuKTtcblNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQuc2VuZEZ1bGZpbGxlZCA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS5zZW5kRnVsZmlsbGVkLFxuKTtcblNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQuZGF0YVBheW1lbnRQcmUgPSBDcmVhdGVTZWxlY3RvcihcbiAgICBTZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LFxuICAgIChzdGF0ZSkgPT4gc3RhdGUuZGF0YVBheW1lbnRQcmUsXG4pO1xuU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudC5kYXRhR2VuZXJhdGVQYXltZW50ID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudCxcbiAgICAoc3RhdGUpID0+IHN0YXRlLmRhdGFHZW5lcmF0ZVBheW1lbnQsXG4pO1xuU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudC5pZFRyYW5zYWN0aW9uID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudCxcbiAgICAoc3RhdGUpID0+IHN0YXRlLmlkVHJhbnNhY3Rpb24sXG4pO1xuU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudC5wYXltZW50VHlwZSA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS5wYXltZW50VHlwZSxcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LmlzUGF5bWVudE1hbnVhbCA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS5wYXltZW50VHlwZSA9PT0gTUFOVUFMLFxuKTtcblNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQubWFzc2l2ZUZpbGVJZCA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS5tYXNzaXZlRmlsZUlkLFxuKTtcblNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQucGF5bWVudEVycm9yRmlsZW5hbWUgPSBDcmVhdGVTZWxlY3RvcihcbiAgICBTZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LFxuICAgIChzdGF0ZSkgPT4gc3RhdGUucGF5bWVudEVycm9yRmlsZT8uZmlsZU5hbWUsXG4pO1xuU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudC5wYXltZW50RXJyb3JGaWxlQ29udGVudCA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS5wYXltZW50RXJyb3JGaWxlPy5jb250ZW50LFxuKTtcblNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQuaWRMb3RlID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudCxcbiAgICAoc3RhdGUpID0+IHN0YXRlLmlkTG90ZSxcbik7XG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50Lmhhc09yZGVycyA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS5oYXNPcmRlcnMsXG4pO1xuU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudC5jbGVhblRyYW5zZmVyRmllbGRzID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZUdlbmVyYXRlUGF5bWVudCxcbiAgICAoc3RhdGUpID0+IHN0YXRlLmNsZWFuVHJhbnNmZXJGaWVsZHMsXG4pO1xuXG5TZWxlY3RvclNsaWNlR2VuZXJhdGVQYXltZW50LnRyYW5zZmVyV2FybmluZyA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VHZW5lcmF0ZVBheW1lbnQsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS50cmFuc2Zlcldhcm5pbmcsXG4pO1xuIiwiaW1wb3J0IHsgTkFNRV9TTElDRV9HRU5FUkFURV9QQVlNRU5UIH0gZnJvbSBcIi4vX25hbWVzcGFjZVwiO1xuaW1wb3J0IHsgUmVkdWNlclNsaWNlR2VuZXJhdGVQYXltZW50IH0gZnJvbSBcIi4vX3JlZHVjZXJzXCI7XG5cbmV4cG9ydCAqIGZyb20gXCIuL19uYW1lc3BhY2VcIjtcbmV4cG9ydCAqIGZyb20gXCIuL19zZWxlY3RvcnNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL19yZWR1Y2Vyc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vX2ZldGNoZXJzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9fYWN0aW9uc1wiO1xuXG5leHBvcnQgY29uc3QgU2xpY2VHZW5lcmF0ZVBheW1lbnQgPSB7IFtOQU1FX1NMSUNFX0dFTkVSQVRFX1BBWU1FTlRdOiBSZWR1Y2VyU2xpY2VHZW5lcmF0ZVBheW1lbnQgfTtcbiIsImltcG9ydCB0eXBlIHsgTlNBUElWb2lkUGF5bWVudHMgfSBmcm9tIFwiLi4vLi4vLi4vYXBpL3N1cHBsaWVycy92b2lkUGF5bWVudHNcIjtcbmltcG9ydCB0eXBlIHsgTlNBUElFcnJvciB9IGZyb20gXCIuLi8uLi8uLi9hcGkvZXJyb3JcIjtcbmltcG9ydCB7IEVNUFRZX1NUUklORyB9IGZyb20gXCIuLi8uLi8uLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGNvbnN0IE5BTUVfU0xJQ0VfVk9JRF9QQVlNRU5UUyA9IFwidm9pZHBheW1lbnRzXCI7XG5cbmV4cG9ydCBkZWNsYXJlIG5hbWVzcGFjZSBOU1NsaWNlVm9pZFBheW1lbnRzIHtcbiAgICBleHBvcnQgdHlwZSBCYXRjaFNpZ25lciA9IHtcbiAgICAgICAgZG9jVHlwZUlkOiBzdHJpbmc7XG4gICAgICAgIGRvY051bWJlcjogc3RyaW5nO1xuICAgIH07XG5cbiAgICAvKiogQ29tZXMgZnJvbSBjb25zdWx0IHBheW1lbnRzICovXG4gICAgZXhwb3J0IHR5cGUgUGF5bWVudERhdGFUcmFuc2ZlciA9IHtcbiAgICAgICAgcGF5bWVudEJhdGNoSWQ6IHN0cmluZzsgLy8gb3BlcmFjaW9uUGFnb0xvdGVJZCBkZSBhbnVsYWNpb24gKGJhdGNoSWQgZW4gX25hbWVzcGFjZSBkZSBhcGkpXG4gICAgICAgIHBheW1lbnRCYXRjaFBheUlkOiBzdHJpbmc7IC8vIG9wZXJhY2lvblBhZ29TZWN1ZW5jaWFJZCBkZSBhbnVsYWNpb24gKHNlcXVlbmNlSUQgZW4gX25hbWVzcGFjZSBkZSBhcGkpXG4gICAgICAgIHBheW1lbnRCYXRjaERhdGU6IHN0cmluZztcbiAgICAgICAgcGF5bWVudEJhdGNoRmlsZTogc3RyaW5nO1xuICAgICAgICBwYXltZW50QmF0Y2hCYW5rQWNjb3VudENCVVJlY2VpdmVyOiBzdHJpbmc7XG4gICAgICAgIHBheW1lbnRCYXRjaFJlZmVyZW5jZTogc3RyaW5nO1xuICAgICAgICBwYXltZW50QmF0Y2hUb3RhbEFtb3VudDogbnVtYmVyO1xuICAgICAgICBwYXltZW50U3RhdHVzPzogc3RyaW5nO1xuICAgICAgICBiYXRjaFNpZ25lcnM/OiBCYXRjaFNpZ25lcltdO1xuICAgIH07XG5cbiAgICBleHBvcnQgdHlwZSBQcm9wc1ZvaWRQYXltZW50cyA9IHtcbiAgICAgICAgdG9rZW46IE5TQVBJVm9pZFBheW1lbnRzLnRva2VuO1xuICAgICAgICBjb250cmFjdElkOiBOU0FQSVZvaWRQYXltZW50cy5jb250cmFjdElkO1xuICAgICAgICBzZXF1ZW5jZXM6IE5TQVBJVm9pZFBheW1lbnRzLlBheW1lbnRbXTtcbiAgICB9O1xuXG4gICAgZXhwb3J0IHR5cGUgU3RhdGUgPSB7XG4gICAgICAgIHBheW1lbnRzVG9Wb2lkOiBQYXltZW50RGF0YVRyYW5zZmVyW107XG5cbiAgICAgICAgZmV0Y2hpbmc6IGJvb2xlYW47XG4gICAgICAgIGZldGNoZWQ6IGJvb2xlYW47XG4gICAgICAgIGVycm9yPzogTlNBUElFcnJvci5TY2hlbWE7XG4gICAgICAgIHdhcm5pbmc/OiBOU0FQSUVycm9yLlNjaGVtYTtcblxuICAgICAgICAvLyBSZXNwb25zZSB2b2lkUGF5bWVudHNcbiAgICAgICAgY29udHJhY3RJZDogc3RyaW5nO1xuICAgICAgICBzdGF0ZXM6IE5TQVBJVm9pZFBheW1lbnRzLlBheW1lbnRTdGF0ZUluZm9bXTtcbiAgICAgICAgLy8gV2Uga25vdyBpZiBmaW5pc2hlZCBvayB0aGUgdHJhbnNhY3Rpb25cbiAgICAgICAgY29tcGxldGVkVm9pZFBheW1lbnQ6IGJvb2xlYW47XG5cbiAgICAgICAgaWRUcmFuc2FjdGlvbj86IHN0cmluZztcbiAgICB9ICYgTlNBUElWb2lkUGF5bWVudHMuRGF0YVZvaWRQYXltZW50cztcbn1cblxuZXhwb3J0IGNvbnN0IElOSVRfU0xJQ0VfVk9JRF9QQVlNRU5UUzogTlNTbGljZVZvaWRQYXltZW50cy5TdGF0ZSA9IHtcbiAgICBwYXltZW50c1RvVm9pZDogW10sXG4gICAgZmV0Y2hpbmc6IGZhbHNlLFxuICAgIGZldGNoZWQ6IGZhbHNlLFxuICAgIGVycm9yOiB1bmRlZmluZWQsXG4gICAgd2FybmluZzogdW5kZWZpbmVkLFxuICAgIGNvbnRyYWN0SWQ6IEVNUFRZX1NUUklORyxcbiAgICBzdGF0ZXM6IFtdLFxuICAgIGlkVHJhbnNhY3Rpb246IEVNUFRZX1NUUklORyxcbiAgICBjb21wbGV0ZWRWb2lkUGF5bWVudDogZmFsc2UsXG59O1xuIiwiaW1wb3J0IHsgQ3JlYXRlQWN0aW9ucyB9IGZyb20gXCJAcGtnL3JlYWN0L3NyYy9zdG9yZVwiO1xuaW1wb3J0IHR5cGUgeyBOU0FQSUNvbnN1bHRQYXltZW50cyB9IGZyb20gXCIuLi8uLi8uLi9hcGkvc3VwcGxpZXJzL2NvbnN1bHRQYXltZW50c1wiO1xuaW1wb3J0IHsgTkFNRV9TTElDRV9WT0lEX1BBWU1FTlRTIH0gZnJvbSBcIi4vX25hbWVzcGFjZVwiO1xuXG5leHBvcnQgY29uc3QgQWN0aW9uU2xpY2VWb2lkUGF5bWVudHMgPSBDcmVhdGVBY3Rpb25zPHtcbiAgICAvKiogQ2xlYW4gc3RvcmUgdG8gaW5pdGlhbCB2YWx1ZSAqL1xuICAgIGNsZWFuOiB2b2lkO1xuICAgIC8qKiBVcGRhdGUgcGF5bWVudHMgd2Ugd2FudCB0byB2b2lkICovXG4gICAgdXBkYXRlUGF5bWVudHNUb1ZvaWQ6IHsgcGF5bWVudElkczogc3RyaW5nW107IHBheW1lbnRzOiBOU0FQSUNvbnN1bHRQYXltZW50cy5EYXRhVHJhbnNmZXJbXSB9OyAvLyBPYmplY3QgY29udGFpbmluZyBhbGwgcGF5bWVudHMgYW5kIHNlbGVjdGVkIHBheW1lbnRzSWRzXG4gICAgLyoqIFdlIHJlbW92ZSBhIHBheW1lbnQgdG8gdm9pZCBwYXNzaW5nIGl0cyBpZCAgKi9cbiAgICByZW1vdmVQYXltZW50VG9Wb2lkOiBzdHJpbmc7XG4gICAgLyoqIFdlIGNsZWFuIHRvIHRoZSBpbml0aWFsIHZhbHVlIHRoZSBib29sZWFuIGNvbXBsZXRlZCB2b2lkIHBheW1lbnRzICovXG4gICAgY2xlYW5Db21wbGV0ZWRWb2lkUGF5bWVudHM6IHZvaWQ7XG59PihOQU1FX1NMSUNFX1ZPSURfUEFZTUVOVFMsIFtcbiAgICBcImNsZWFuXCIsXG4gICAgXCJ1cGRhdGVQYXltZW50c1RvVm9pZFwiLFxuICAgIFwicmVtb3ZlUGF5bWVudFRvVm9pZFwiLFxuICAgIFwiY2xlYW5Db21wbGV0ZWRWb2lkUGF5bWVudHNcIixcbl0pO1xuIiwiaW1wb3J0IHsgQ3JlYXRlRmV0Y2hlcnMgfSBmcm9tIFwiQHBrZy9yZWFjdC9zdG9yZVwiO1xuaW1wb3J0IHR5cGUgeyBOU1NsaWNlVm9pZFBheW1lbnRzIH0gZnJvbSBcIi4vX25hbWVzcGFjZVwiO1xuaW1wb3J0IHsgTkFNRV9TTElDRV9WT0lEX1BBWU1FTlRTIH0gZnJvbSBcIi4vX25hbWVzcGFjZVwiO1xuaW1wb3J0IHR5cGUgeyBOU0FQSVZvaWRQYXltZW50cyB9IGZyb20gXCIuLi8uLi8uLi9hcGkvc3VwcGxpZXJzL3ZvaWRQYXltZW50c1wiO1xuaW1wb3J0IHtcbiAgICBWT0lEX1BBWU1FTlRTX0VSUk9SUyxcbiAgICBWb2lkUGF5bWVudHMsXG4gICAgaXNWb2lkUGF5bWVudHNFcnJvcixcbn0gZnJvbSBcIi4uLy4uLy4uL2FwaS9zdXBwbGllcnMvdm9pZFBheW1lbnRzXCI7XG5pbXBvcnQgdHlwZSB7IEZldGNoZXJSZXNwb25zZSB9IGZyb20gXCIuLi8uLi8uLi9hcGlcIjtcblxuZXhwb3J0IGNvbnN0IEZldGNoZXJTbGljZVZvaWRQYXltZW50cyA9IENyZWF0ZUZldGNoZXJzKE5BTUVfU0xJQ0VfVk9JRF9QQVlNRU5UUywge1xuICAgIC8qKiBEb2N1bWVudGF0aW9uOiB2b2lkIGEgYmF0Y2ggb2YgcGF5bWVudHMgICovXG4gICAgYXN5bmMgdm9pZFBheW1lbnRzKFxuICAgICAgICBvcHRzOiBOU1NsaWNlVm9pZFBheW1lbnRzLlByb3BzVm9pZFBheW1lbnRzLFxuICAgICAgICB7IHJlamVjdFdpdGhWYWx1ZSB9LFxuICAgICk6IFByb21pc2U8RmV0Y2hlclJlc3BvbnNlPE5TQVBJVm9pZFBheW1lbnRzLkRhdGFWb2lkUGF5bWVudHM+PiB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgVm9pZFBheW1lbnRzKHsgLi4ub3B0cyB9KTtcbiAgICAgICAgaWYgKCFyZXNwb25zZSkgcmV0dXJuIG51bGw7XG4gICAgICAgIGlmIChpc1ZvaWRQYXltZW50c0Vycm9yKHJlc3BvbnNlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlamVjdFdpdGhWYWx1ZSh7IC4uLnJlc3BvbnNlLCAuLi5WT0lEX1BBWU1FTlRTX0VSUk9SU1tyZXNwb25zZS5jb2RlXSB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9LFxufSk7XG4iLCJpbXBvcnQgdHlwZSB7IFBheWxvYWRBY3Rpb24gfSBmcm9tIFwiQHBrZy9yZWFjdC9zdG9yZVwiO1xuaW1wb3J0IHsgaXNQZW5kaW5nLCBpc1JlamVjdGVkIH0gZnJvbSBcIkBwa2cvcmVhY3Qvc3RvcmUvdXRpbHNcIjtcbmltcG9ydCB7IENyZWF0ZVJlZHVjZXIgfSBmcm9tIFwiQHBrZy9yZWFjdC9zdG9yZVwiO1xuaW1wb3J0IHsgRU1QVFlfU1RSSU5HLCBNSU5VU19PTkUsIFpFUk8gfSBmcm9tIFwiLi4vLi4vLi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBWT0lEX1BBWU1FTlRTX0VSUk9SUyB9IGZyb20gXCIuLi8uLi8uLi9hcGkvc3VwcGxpZXJzL3ZvaWRQYXltZW50c1wiO1xuaW1wb3J0IHsgQWN0aW9uU2xpY2VWb2lkUGF5bWVudHMgfSBmcm9tIFwiLi9fYWN0aW9uc1wiO1xuaW1wb3J0IHsgRmV0Y2hlclNsaWNlVm9pZFBheW1lbnRzIH0gZnJvbSBcIi4vX2ZldGNoZXJzXCI7XG5pbXBvcnQgeyBJTklUX1NMSUNFX1ZPSURfUEFZTUVOVFMsIE5BTUVfU0xJQ0VfVk9JRF9QQVlNRU5UUyB9IGZyb20gXCIuL19uYW1lc3BhY2VcIjtcbmltcG9ydCB0eXBlIHsgTlNTbGljZVZvaWRQYXltZW50cyB9IGZyb20gXCIuL19uYW1lc3BhY2VcIjtcbmltcG9ydCB0eXBlIHsgTlNBUElFcnJvciB9IGZyb20gXCIuLi8uLi8uLi9hcGkvZXJyb3JcIjtcbmltcG9ydCB7IGlzVmFsaWRhdGVFcnJvckNvZGUgfSBmcm9tIFwiLi4vLi4vLi4vYXBpL2Vycm9yXCI7XG5pbXBvcnQgeyBWT0lERURfUEFZTUVOVF9TVEFUVVMsIE9LX1NUUiB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGNvbnN0IFJlZHVjZXJTbGljZVZvaWRQYXltZW50cyA9IENyZWF0ZVJlZHVjZXIoXG4gICAgSU5JVF9TTElDRV9WT0lEX1BBWU1FTlRTLFxuICAgICh7IGFkZENhc2UsIGFkZE1hdGNoZXIgfSkgPT4ge1xuICAgICAgICBhZGRDYXNlKEFjdGlvblNsaWNlVm9pZFBheW1lbnRzLmNsZWFuLCAoKSA9PiAoeyAuLi5JTklUX1NMSUNFX1ZPSURfUEFZTUVOVFMgfSkpO1xuXG4gICAgICAgIGFkZENhc2UoQWN0aW9uU2xpY2VWb2lkUGF5bWVudHMuY2xlYW5Db21wbGV0ZWRWb2lkUGF5bWVudHMsIChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgc3RhdGUuY29tcGxldGVkVm9pZFBheW1lbnQgPSBJTklUX1NMSUNFX1ZPSURfUEFZTUVOVFMuY29tcGxldGVkVm9pZFBheW1lbnQ7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFkZENhc2UoQWN0aW9uU2xpY2VWb2lkUGF5bWVudHMudXBkYXRlUGF5bWVudHNUb1ZvaWQsIChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgcGF5bWVudElkcywgcGF5bWVudHM6IGFsbFBheW1lbnRzIH0gPSBwYXlsb2FkO1xuXG4gICAgICAgICAgICBjb25zdCBwZW5kaW5nUGF5bWVudHMgPSBhbGxQYXltZW50cy5maWx0ZXIoKHBheW1lbnQpID0+XG4gICAgICAgICAgICAgICAgcGF5bWVudElkcy5pbmNsdWRlcyhwYXltZW50LnBheW1lbnRCYXRjaFBheUlkKSxcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGNvbnN0IHBheW1lbnRzVG9Wb2lkOiBOU1NsaWNlVm9pZFBheW1lbnRzLlBheW1lbnREYXRhVHJhbnNmZXJbXSA9IHBlbmRpbmdQYXltZW50cy5tYXAoXG4gICAgICAgICAgICAgICAgKHBwKSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICBwYXltZW50QmF0Y2hJZDogcHAucGF5bWVudEJhdGNoSWQsXG4gICAgICAgICAgICAgICAgICAgIHBheW1lbnRCYXRjaFBheUlkOiBwcC5wYXltZW50QmF0Y2hQYXlJZCxcbiAgICAgICAgICAgICAgICAgICAgcGF5bWVudEJhdGNoQmFua0FjY291bnRDQlVSZWNlaXZlcjogcHAucGF5bWVudEJhdGNoQmFua0FjY291bnRDQlVSZWNlaXZlcixcbiAgICAgICAgICAgICAgICAgICAgcGF5bWVudEJhdGNoVG90YWxBbW91bnQ6IHBwLnBheW1lbnRCYXRjaFRvdGFsQW1vdW50LFxuICAgICAgICAgICAgICAgICAgICBwYXltZW50QmF0Y2hEYXRlOiBwcC5wYXltZW50QmF0Y2hEYXRlLFxuICAgICAgICAgICAgICAgICAgICBwYXltZW50QmF0Y2hGaWxlOiBwcC5wYXltZW50QmF0Y2hGaWxlLFxuICAgICAgICAgICAgICAgICAgICBwYXltZW50QmF0Y2hSZWZlcmVuY2U6IHBwLnBheW1lbnRCYXRjaFJlZmVyZW5jZSxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIHN0YXRlLnBheW1lbnRzVG9Wb2lkID0gcGF5bWVudHNUb1ZvaWQ7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFkZENhc2UoQWN0aW9uU2xpY2VWb2lkUGF5bWVudHMucmVtb3ZlUGF5bWVudFRvVm9pZCwgKHN0YXRlLCB7IHBheWxvYWQ6IHBheW1lbnRJZCB9KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBuZXdQYXltZW50c1RvVm9pZCA9IHN0YXRlLnBheW1lbnRzVG9Wb2lkLmZpbHRlcihcbiAgICAgICAgICAgICAgICAocG10KSA9PiBwbXQucGF5bWVudEJhdGNoUGF5SWQgIT09IHBheW1lbnRJZCxcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIHN0YXRlLnBheW1lbnRzVG9Wb2lkID0gbmV3UGF5bWVudHNUb1ZvaWQ7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFkZENhc2UoRmV0Y2hlclNsaWNlVm9pZFBheW1lbnRzLnZvaWRQYXltZW50cy5mdWxmaWxsZWQsIChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgICAgICAgIHN0YXRlLmZldGNoaW5nID0gZmFsc2U7XG4gICAgICAgICAgICBzdGF0ZS5lcnJvciA9IElOSVRfU0xJQ0VfVk9JRF9QQVlNRU5UUy5lcnJvcjtcbiAgICAgICAgICAgIGlmICghcGF5bG9hZCkgcmV0dXJuO1xuICAgICAgICAgICAgc3RhdGUuZmV0Y2hlZCA9IHRydWU7XG4gICAgICAgICAgICBjb25zdCB7IGNvbnRyYWN0SWQsIHN0YXRlcyB9ID0gcGF5bG9hZC5kYXRhO1xuICAgICAgICAgICAgY29uc3QgcGVuZGluZ1NpZ25hdHVyZVBheW1lbnRzID0gc3RhdGUucGF5bWVudHNUb1ZvaWQuZmlsdGVyKFxuICAgICAgICAgICAgICAgIChwYXltZW50KSA9PiBwYXltZW50LmJhdGNoU2lnbmVycyAmJiBwYXltZW50LmJhdGNoU2lnbmVycy5sZW5ndGggPiBaRVJPLFxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgY29uc3QgbWFwcGVkU3RhdGVzID0gc3RhdGVzPy5tYXAoKHBheW1lbnRTdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGlzUGF5bWVudE9rID0gcGF5bWVudFN0YXRlLnN0YXR1c0lkID09PSBPS19TVFI7XG4gICAgICAgICAgICAgICAgY29uc3QgZmluZFBlbmRpbmdQYXltZW50ID0gcGVuZGluZ1NpZ25hdHVyZVBheW1lbnRzLmZpbmRJbmRleChcbiAgICAgICAgICAgICAgICAgICAgKHBzcCkgPT4gcHNwLnBheW1lbnRCYXRjaElkID09PSBwYXltZW50U3RhdGUuYmF0Y2hJZCxcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGNvbnN0IGhhc1BheW1lbnRQZW5kaW5nID0gZmluZFBlbmRpbmdQYXltZW50ID4gTUlOVVNfT05FO1xuICAgICAgICAgICAgICAgIGxldCBzdGF0dXNOYW1lOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcblxuICAgICAgICAgICAgICAgIGlmIChpc1BheW1lbnRPaykge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXNOYW1lID0gVk9JREVEX1BBWU1FTlRfU1RBVFVTLlZPSURFRDtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGhhc1BheW1lbnRQZW5kaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1c05hbWUgPSBWT0lERURfUEFZTUVOVF9TVEFUVVMuUEVORElORztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXNOYW1lID0gVk9JREVEX1BBWU1FTlRfU1RBVFVTLlJFSkVDVEVEO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLnBheW1lbnRTdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzTmFtZSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHN0YXRlLmNvbnRyYWN0SWQgPSBjb250cmFjdElkID8/IEVNUFRZX1NUUklORztcbiAgICAgICAgICAgIHN0YXRlLnN0YXRlcyA9IG1hcHBlZFN0YXRlcyA/PyBbXTtcbiAgICAgICAgICAgIHN0YXRlLmlkVHJhbnNhY3Rpb24gPSBwYXlsb2FkLmlkVHJhbnNhY3Rpb247XG4gICAgICAgICAgICBzdGF0ZS5jb21wbGV0ZWRWb2lkUGF5bWVudCA9IHRydWU7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFkZE1hdGNoZXIoXG4gICAgICAgICAgICAoYWN0aW9uKSA9PiBpc1BlbmRpbmcoYWN0aW9uLCBOQU1FX1NMSUNFX1ZPSURfUEFZTUVOVFMpLFxuICAgICAgICAgICAgKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgc3RhdGUuZmV0Y2hpbmcgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHN0YXRlLmVycm9yID0gSU5JVF9TTElDRV9WT0lEX1BBWU1FTlRTLmVycm9yO1xuICAgICAgICAgICAgICAgIHN0YXRlLndhcm5pbmcgPSBJTklUX1NMSUNFX1ZPSURfUEFZTUVOVFMud2FybmluZztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICk7XG5cbiAgICAgICAgYWRkTWF0Y2hlcjxQYXlsb2FkQWN0aW9uPE5TQVBJRXJyb3IuU2NoZW1hPj4oXG4gICAgICAgICAgICAoYWN0aW9uKSA9PiBpc1JlamVjdGVkKGFjdGlvbiwgTkFNRV9TTElDRV9WT0lEX1BBWU1FTlRTKSxcbiAgICAgICAgICAgIChzdGF0ZSwgeyBwYXlsb2FkIH0pID0+IHtcbiAgICAgICAgICAgICAgICBzdGF0ZS5mZXRjaGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmIChpc1ZhbGlkYXRlRXJyb3JDb2RlKFZPSURfUEFZTUVOVFNfRVJST1JTLCBwYXlsb2FkLmNvZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlLndhcm5pbmcgPSBwYXlsb2FkO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlLmVycm9yID0gcGF5bG9hZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICApO1xuICAgIH0sXG4pO1xuIiwiaW1wb3J0IHsgQ3JlYXRlU2VsZWN0b3IgfSBmcm9tIFwiQHBrZy9yZWFjdC9zdG9yZVwiO1xuaW1wb3J0IHR5cGUgeyBTdG9yZVN0YXRlIH0gZnJvbSBcIi4uLy4uLy4uL19yZWR1Y2VyXCI7XG5pbXBvcnQgdHlwZSB7IE5TU2xpY2VWb2lkUGF5bWVudHMgfSBmcm9tIFwiLi9fbmFtZXNwYWNlXCI7XG5pbXBvcnQgeyBOQU1FX1NMSUNFX1ZPSURfUEFZTUVOVFMgfSBmcm9tIFwiLi9fbmFtZXNwYWNlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBTZWxlY3RvclNsaWNlVm9pZFBheW1lbnRzKHN0b3JlOiBTdG9yZVN0YXRlKTogTlNTbGljZVZvaWRQYXltZW50cy5TdGF0ZSB7XG4gICAgcmV0dXJuIHN0b3JlW05BTUVfU0xJQ0VfVk9JRF9QQVlNRU5UU107XG59XG5cblNlbGVjdG9yU2xpY2VWb2lkUGF5bWVudHMuZmV0Y2hpbmcgPSBDcmVhdGVTZWxlY3RvcihcbiAgICBTZWxlY3RvclNsaWNlVm9pZFBheW1lbnRzLFxuICAgIChzdGF0ZSkgPT4gc3RhdGUuZmV0Y2hpbmcsXG4pO1xuXG5TZWxlY3RvclNsaWNlVm9pZFBheW1lbnRzLmZldGNoZWQgPSBDcmVhdGVTZWxlY3RvcihcbiAgICBTZWxlY3RvclNsaWNlVm9pZFBheW1lbnRzLFxuICAgIChzdGF0ZSkgPT4gc3RhdGUuZmV0Y2hlZCxcbik7XG5cblNlbGVjdG9yU2xpY2VWb2lkUGF5bWVudHMuZXJyb3IgPSBDcmVhdGVTZWxlY3RvcihTZWxlY3RvclNsaWNlVm9pZFBheW1lbnRzLCAoc3RhdGUpID0+IHN0YXRlLmVycm9yKTtcblNlbGVjdG9yU2xpY2VWb2lkUGF5bWVudHMud2FybmluZyA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VWb2lkUGF5bWVudHMsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS53YXJuaW5nLFxuKTtcblxuU2VsZWN0b3JTbGljZVZvaWRQYXltZW50cy5wYXltZW50c1RvVm9pZCA9IENyZWF0ZVNlbGVjdG9yKFxuICAgIFNlbGVjdG9yU2xpY2VWb2lkUGF5bWVudHMsXG4gICAgKHN0YXRlKSA9PiBzdGF0ZS5wYXltZW50c1RvVm9pZCxcbik7XG5cblNlbGVjdG9yU2xpY2VWb2lkUGF5bWVudHMucGF5bWVudFN0YXRlcyA9IENyZWF0ZVNlbGVjdG9yKFNlbGVjdG9yU2xpY2VWb2lkUGF5bWVudHMsIChzdGF0ZSkgPT4ge1xuICAgIGNvbnN0IHBheW1lbnRzU3RhdGVzID0gc3RhdGUuc3RhdGVzO1xuICAgIGNvbnN0IHN0YXRlc0RhdGEgPSBzdGF0ZS5wYXltZW50c1RvVm9pZC5tYXAoKHBtdCwgaWR4KSA9PiAoe1xuICAgICAgICAuLi5wbXQsXG4gICAgICAgIHBheW1lbnRTdGF0dXM6IHBheW1lbnRzU3RhdGVzW2lkeF0/LnN0YXR1c05hbWUsXG4gICAgfSkpO1xuXG4gICAgcmV0dXJuIHN0YXRlc0RhdGE7XG59KTtcblxuU2VsZWN0b3JTbGljZVZvaWRQYXltZW50cy5pZFRyYW5zYWN0aW9uID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZVZvaWRQYXltZW50cyxcbiAgICAoc3RhdGUpID0+IHN0YXRlLmlkVHJhbnNhY3Rpb24sXG4pO1xuXG5TZWxlY3RvclNsaWNlVm9pZFBheW1lbnRzLmNvbXBsZXRlZFZvaWRQYXltZW50ID0gQ3JlYXRlU2VsZWN0b3IoXG4gICAgU2VsZWN0b3JTbGljZVZvaWRQYXltZW50cyxcbiAgICAoc3RhdGUpID0+IHN0YXRlLmNvbXBsZXRlZFZvaWRQYXltZW50LFxuKTtcbiIsImltcG9ydCB7IE5BTUVfU0xJQ0VfVk9JRF9QQVlNRU5UUyB9IGZyb20gXCIuL19uYW1lc3BhY2VcIjtcbmltcG9ydCB7IFJlZHVjZXJTbGljZVZvaWRQYXltZW50cyB9IGZyb20gXCIuL19yZWR1Y2Vyc1wiO1xuXG5leHBvcnQgKiBmcm9tIFwiLi9fbmFtZXNwYWNlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9fc2VsZWN0b3JzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9fcmVkdWNlcnNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL19mZXRjaGVyc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vX2FjdGlvbnNcIjtcblxuZXhwb3J0IGNvbnN0IFNsaWNlVm9pZFBheW1lbnRzID0geyBbTkFNRV9TTElDRV9WT0lEX1BBWU1FTlRTXTogUmVkdWNlclNsaWNlVm9pZFBheW1lbnRzIH07XG4iXSwic291cmNlUm9vdCI6IiJ9
//# sourceMappingURL=main~c9d02369.ff66c6c1.chunk.js.map