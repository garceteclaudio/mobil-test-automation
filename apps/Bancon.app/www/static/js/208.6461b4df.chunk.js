(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[208,311],{350:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return R}));var i=n(0),a=n(5),c=n(16),r=n(8),o=n(6),u=n(150),l=n(69),s=n(149),_=n(147),d=n(187),b=n(50),p=n(489),E=n(82),O=n(488),T=n(494),j=n(517),m=n(515),P=n(270),h=n(568),C=n(38),g=n(11),f=n(99),N=n(39),S=n(530),A=n(607),M=n(74),v=n(87),x=n(428),y=n.n(x),I=n(10);function R(){var e=g.b.useState(void 0),t=Object(c.a)(e,2),n=t[0],x=t[1],R=Object(C.c)().textGet,D=Object(r.b)(),F=Object(r.c)(s.c.fetching),w=Object(r.c)(s.c.warning),B=Object(r.c)(_.c.exchangeToken),L=Object(r.c)(_.c.documentNumber),U=Object(r.c)(s.c.securitySeals),k=Object(r.c)(u.d.isPep),Y=Object(r.c)(u.d.isSubject),H=Object(r.c)(u.d.hasRF),V=Object(r.c)(u.d.subjectType),W=Object(r.c)(u.d.publicPositionDeclaration),X=Object(r.c)(u.d.publicPositionDeclarationBT),K=Object(r.c)(u.d.publicPositionType),q=Object(r.c)(u.d.publicPosition),G=Object(r.c)(u.d.countryRFId),J=Object(r.c)(u.d.exteriorIdentification),z=Object(r.c)(u.d.publicChargeEntity),Q=Object(r.c)(u.d.publicChargeDateStart),Z=Object(r.c)(u.d.publicChargeEntityOther),$=Object(r.c)(v.c.device),ee=Object(r.c)(l.c.uniqueDeviceID),te=Object(f.a)().getValueConfig,ne=R({uuid:"spa.generic.field.error.required"}),ie=Object(A.a)(R,te),ae=Object(S.a)(R,te,L),ce=R({uuid:"spa.onboarding.step10.username.input.label"}),re=R({uuid:"spa.onboarding.step10.password.input.label"}),oe=R({uuid:"spa.onboarding.step10.password.input.helper"}),ue=R({uuid:"spa.form.continue"}),le=Object(M.a)(te("spa.onboarding.step10.secondFactor.addSoftToken")),se=R({uuid:"spa.onboarding.step10.secondFactor.label"}),_e=Object(M.a)(te("backend.vu.fraud.api.fingerprint.url")),de=Object(M.a)(te("backend.vu.fraud.api.fingerprint.timeout"));g.b.useEffect((function(){B&&D(s.b.securitySealList({exchangeToken:B}))}),[D,B]);var be=N.e.object(function(){var e=le?N.e.boolean():N.e.boolean.orUndefined();return{username:ie,newPassword:ae,securitySeal:Object(d.d)(N.e.number(),ne),secondFactorCheck:e}}());return F||Object.entries(U).length===o.Sb&&U.constructor===Object?Object(I.jsx)(P.a,{}):Object(I.jsx)(p.a,{"header-onBack":function(){D(s.a.cleanBranchOfficeData())},"header-title":"spa.onboarding.step10.title",children:Object(I.jsx)("section",{children:Object(I.jsxs)(O.a,{schema:be,warnings:w,onSubmit:function(e){return pe.apply(this,arguments)},children:[Object(I.jsxs)("div",{className:y.a.inputSelectContainer,children:[Object(I.jsx)("div",{className:y.a.securitySealContainer,children:Object(I.jsx)(h.a,{buttonLabel:ue,modalTitle:Object(I.jsx)(C.b,{tag:"h5",uuid:"spa.onboarding.step10.securitySeal.modal.title"}),name:"securitySeal",options:U,selectedAvatar:n,uuidError:"spa.generic.securitySeal.error.required",uuidLabel:"spa.enrollment.step10.securitySeal.label",onContinue:function(e){x(e)}})}),Object(I.jsx)(T.a,{withoutSpaces:!0,label:ce,name:"username",start:Object(I.jsx)(b.Icon,{name:"user",size:"small"}),onChange:function(){D(s.a.cleanWarnings())}}),Object(I.jsx)(j.a,{withoutSpaces:!0,helper:oe,label:re,name:"newPassword"}),le&&Object(I.jsx)(m.a,{label:se,name:"secondFactorCheck"})]}),Object(I.jsx)(E.a,{className:y.a.submitButton,label:{uuid:"spa.form.continue"},loading:F,type:"submit"})]})})});function pe(){return(pe=Object(a.a)(Object(i.a)().mark((function e(t){var n,a,c,r,u,l;return Object(i.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.username,c=t.newPassword,r=t.securitySeal,u=t.secondFactorCheck,l={PEP:null!==k&&void 0!==k&&k,SO:null!==Y&&void 0!==Y&&Y,RF:null!==H&&void 0!==H&&H},e.next=4,D(s.b.createUser({exchangeToken:B,username:a,newPassword:c,securitySeal:r.toString(),secondFactorCheck:null!==u&&void 0!==u&&u,deviceModel:null!==(n=null===$||void 0===$?void 0:$.model)&&void 0!==n?n:o.D,uniqueDeviceId:ee,affidavit:{affidavitTypes:l,subjectType:V,publicPositionDeclaration:W,publicPositionDeclarationBT:X,publicPositionType:K,publicPosition:q,countryRFId:G,exteriorIdentification:J,clientAdditionalDataFunctionaryPublicDateStart:Q,clientAdditionalDataFunctionaryPublicChargeEntity:z,clientAdditionalDataFunctionaryPublicChargeEntityOther:Z},url:_e,timeout:de}));case 4:x(void 0);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},428:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",presentation:"_rules_presentation__2rnDT",image:"_rules_image__2dV7m",containerText:"_rules_containerText__pu48C",title:"_rules_title__3WK5D",text:"_rules_text__3khoq",nextButton:"_rules_nextButton__3nv4A",skipButton:"_rules_skipButton__6WOgG",finishButton:"_rules_finishButton__VsgGK",subtitle:"_rules_subtitle__bTvVh",inputSelectContainer:"_rules_inputSelectContainer__2j7Df",submitButton:"_rules_submitButton__3FaKR",alert:"_rules_alert__laL5T",alertLottie:"_rules_alertLottie__2sgW7",termsAndConditions:"_rules_termsAndConditions__cNiMg",validateTitle:"_rules_validateTitle__2Nx1p",emailValue:"_rules_emailValue__yLDPW",noteEmail:"_rules_noteEmail__4AmC9",subtitleEmail:"_rules_subtitleEmail__2J0wM",inputContainerEmail:"_rules_inputContainerEmail__2O1ou",resendCode:"_rules_resendCode__lH6Jj",inputContainerPhone:"_rules_inputContainerPhone__1gKy1",securitySealContainer:"_rules_securitySealContainer__1LU5g",onboardingWelcome:"_rules_onboardingWelcome__ijVs1",downloadPrincipal:"_rules_downloadPrincipal__2thE8",logosContainer:"_rules_logosContainer__2uaXe"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=208.6461b4df.chunk.js.map