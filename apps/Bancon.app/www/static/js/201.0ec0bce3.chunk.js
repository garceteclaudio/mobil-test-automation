(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[201,220,315],{307:function(e,t,n){"use strict";n.r(t),n.d(t,"KEY_PREFIX",(function(){return r})),n.d(t,"REQUIRED_FIELD",(function(){return c})),n.d(t,"BY_CODE",(function(){return o})),n.d(t,"BY_PIN",(function(){return u})),n.d(t,"RESEND_CHANNEL_MAIL",(function(){return a})),n.d(t,"RESEND_CHANNEL_SMS",(function(){return i}));var r="spa.recoverPassword",c="spa.generic.field.error.required",o="byCode",u="byPin",a="mail",i="sms"},366:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return f}));var r=n(0),c=n(5),o=n(11),u=n(39),a=n(80),i=n(8),s=n(187),E=n(138),_=n(33),d=n(6),l=n(38),T=n(494),b=n(82),m=n(488),p=n(608),N=n(522),O=n(489),P=n(51),R=n(307),j=n(433),M=n.n(j),I=n(10);function f(){var e=Object(i.b)(),t=Object(l.c)().textGet,n=Object(a.g)(),j=Object(P.sb)(P.O),f=Object(i.c)(E.c.exchangeToken),x=Object(i.c)(E.c.documentTypes);o.b.useEffect((function(){x.length||e(E.b.pre({exchangeToken:d.D}))}),[e,x]);var v=Object(i.c)(E.c.recoverData),A=(null===v||void 0===v?void 0:v.usernameToRecover)||d.D,C=(null===v||void 0===v?void 0:v.documentNumber)||d.D,h=Object(i.c)(E.c.fetching),g=Object(i.c)(E.c.warning),D=function(){var e=t({uuid:"spa.documentType.error.cuit"}),n=t({uuid:"spa.documentType.error.cdi"}),r=t({uuid:"spa.documentType.error.passport"}),c=t({uuid:"spa.generic.field.error.required"}),o=u.e.object({usernameToRecover:Object(s.d)(u.e.string.required(),c)});return Object(u.a)(o,Object(p.b)({textErrorCdi:n,textErrorCuit:e,textErrorPassport:r,textErrorRequired:c}))}(),S=t({uuid:"".concat(R.KEY_PREFIX,".user.label")});return Object(I.jsx)(O.a,{"header-onBack":function(){e(_.a.cleanUser()),n(j)},"header-title":"".concat(R.KEY_PREFIX,".title"),children:Object(I.jsx)("section",{children:Object(I.jsxs)(m.a,{schema:D,warnings:g,onSubmit:function(e){return L.apply(this,arguments)},children:[Object(I.jsx)("div",{className:M.a.textSubtitle,children:Object(I.jsx)(l.b,{uuid:"".concat(R.KEY_PREFIX,".step1.text")})}),Object(I.jsxs)("div",{className:M.a.alignInputs,children:[Object(I.jsx)(p.a,{documentNumberDefValue:C,documentTypeDefValue:N.a,documentTypeList:x}),Object(I.jsx)(T.a,{withoutSpaces:!0,defaultValue:A,id:"usernameToRecover",label:S,name:"usernameToRecover"})]}),Object(I.jsx)(b.a,{label:{uuid:"spa.form.continue"},loading:h,type:"submit"})]})})});function L(){return(L=Object(c.a)(Object(r.a)().mark((function t(n){var c,o,u,a;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return c=n.usernameToRecover,o=n.documentType,u=n.documentNumber,a={usernameToRecover:c,documentType:o,documentNumber:u},t.next=4,e(E.b.step1({exchangeToken:f,recoverData:a}));case 4:e(E.a.setRecoverData(a));case 5:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},433:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",textSubtitle:"_rules_textSubtitle__1arob",byCodeInvitationCode:"_rules_byCodeInvitationCode__3ZLV8",textHeading:"_rules_textHeading__102RY",alignInputs:"_rules_alignInputs__H3-u1",alignInvitationCode:"_rules_alignInvitationCode__1O7BC",resendCode:"_rules_resendCode__2nnRn",textBody:"_rules_textBody__2yqjP",alignFooter:"_rules_alignFooter__3p45G"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=201.0ec0bce3.chunk.js.map