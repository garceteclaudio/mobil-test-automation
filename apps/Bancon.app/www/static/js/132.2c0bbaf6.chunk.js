(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[132,199,310],{345:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return v}));var a=n(0),o=n(5),r=n(11),s=n(39),l=n(187),i=n(8),c=n(33),u=n(6),_=n(82),E=n(38),d=n(488),m=n(583),b=n(270),O=n(108),T=n(489),N=n(69),p=n(45),f=n(432),M=n.n(f),j=n(10);function v(){var e=Object(i.b)(),t=Object(E.c)().textGet,n=Object(i.c)(N.c.isMobile),f=Object(O.h)().state.device,R=Object(i.c)(N.c.uniqueDeviceID),A=Object(i.c)(c.e.exchangeToken),h=Object(i.c)(c.e.environmentsForSelect),P=Object(i.c)(c.e.fetching),x=Object(i.c)(c.e.isSubmitted),g=t({uuid:"spa.login.step3.environment.input.label"}),L=t({uuid:"spa.generic.field.error.required"}),S=t({uuid:"spa.searchfield.label"}),C=h.length>u.fb,I=r.b.useCallback((function(e){return k.apply(this,arguments)}),[null===f||void 0===f?void 0:f.model,e,A,n,R]);r.b.useEffect((function(){C||x||I({environments:h[0].value})}),[h,P,x,C,I]);var y=r.b.useCallback((function(){P&&x||!C||e(c.a.clean())}),[e,P,x,C]);r.b.useEffect((function(){return document.addEventListener("backbutton",y),function(){return document.removeEventListener("backbutton",y)}}),[y]);var F=s.e.object({environments:Object(l.d)(s.e.string.required(),L)});return P&&x||!C?Object(j.jsx)(b.a,{}):Object(j.jsx)(T.a,{className:M.a.containerStep3,"header-onBack":y,children:Object(j.jsx)("section",{children:Object(j.jsxs)(d.a,{isRequiredToast:!1,schema:F,onSubmit:I,children:[Object(j.jsx)("div",{className:M.a.selectOperation,children:Object(j.jsx)(E.b,{className:M.a.textTitle,tag:"h5",uuid:"spa.login.step3.selectOperation.title"})}),Object(j.jsx)("div",{className:M.a.environments,children:h.length&&Object(j.jsx)(m.a,{environments:h,label:g,name:"environments",searchFieldLabel:S})}),Object(j.jsx)(_.a,{flowId:v.displayName,label:{uuid:"spa.form.continue"},loading:P,type:"submit"})]})})});function k(){return(k=Object(o.a)(Object(a.a)().mark((function t(o){var r,s;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e(c.a.isSubmitted()),r=void 0,!n){t.next=7;break}return t.next=5,Object(p.b)(u.U);case 5:s=t.sent,r=s.value||void 0;case 7:return t.next=9,e(c.b.thirdStep({environments:parseInt(o.environments,u.Fb),exchangeToken:A,deviceModel:null===f||void 0===f?void 0:f.model,uniqueDeviceId:R,seedUser:r}));case 9:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}v.displayName="LoginStep3"},432:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",containerStep3:"_rules_containerStep3__mxo8i",logoLogin:"_rules_logoLogin__2WuE9",utilTools:"_rules_utilTools__2Zjv6",separator:"_rules_separator__12F4a",bottomlessButton:"_rules_bottomlessButton__1JWkd",alignRecommendations:"_rules_alignRecommendations__34Flb",securitySeal:"_rules_securitySeal__2L_1d",greeting:"_rules_greeting__3hWQ2",selectOperation:"_rules_selectOperation__3c2XI",userRecovery:"_rules_userRecovery__2iD5o",passwordRecovery:"_rules_passwordRecovery__2HC26",biometrySession:"_rules_biometrySession__3vVQv",biometryAvailable:"_rules_biometryAvailable__xuCUu",captchaEnabled:"_rules_captchaEnabled__6FgGv",createToken:"_rules_createToken__x3jsC",environments:"_rules_environments__2zOXj",alignInputs:"_rules_alignInputs__1YLR9",expiredPassword:"_rules_expiredPassword__2sQxQ",stepBlockedUserByPassword:"_rules_stepBlockedUserByPassword__2bJu2",modalWelcome:"_rules_modalWelcome__2oZ6A",modalUList:"_rules_modalUList__33rmj",modalWelcomeButton:"_rules_modalWelcomeButton__3KlfQ",welcomeText:"_rules_welcomeText__17xiF",alignFooter:"_rules_alignFooter__5v5Mq",updateModal:"_rules_updateModal__ylzEn",footer:"_rules_footer__3mgfJ"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var a=n(2),o=n(16),r=n(19),s=n(11),l=n(502),i=n(505),c=n(41),u=n(6),_=n(79),E=n(8),d=n(493),m=n.n(d),b=n(10),O=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],T=m.a.NAME_FORM,N=m.a.TYPE_FORM;function p(e){var t=e,n=t.ariaLabel,d=t.ariaLabelledby,m=t.schema,p=t.onSubmit,f=t.children,M=t.warnings,j=t.isRequiredToast,v=t.isResetForm,R=Object(r.a)(t,O),A=Object(E.b)(),h=Object(l.e)({resolver:Object(i.a)(m)}),P=h.handleSubmit,x=h.setError,g=h.formState.errors,L=h.reset,S=Object.keys(g),C=s.b.useState(!1),I=Object(o.a)(C,2),y=I[0],F=I[1],k=s.b.useCallback((function(){j&&y&&A(_.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:u.w})),F(!1)}),[A,j,y]),Y=s.b.useCallback((function(){L()}),[L]);return s.b.useEffect((function(){M&&Object.keys(M.data).map((function(e){var t=e.startsWith(u.Nb)?e.slice(u.fb):e;return x(t,{message:M.data[e]},{shouldFocus:!1}),null})),S.length>u.Sb&&k(),v&&Y()}),[S.length,v,Y,x,k,M]),Object(b.jsx)(l.b,Object(a.a)(Object(a.a)(Object(a.a)({},h),R),{},{children:Object(b.jsx)(c.a,{noValidate:!0,"aria-label":n,"aria-labelledby":d,name:T,tag:"form",type:N,onSubmit:P(p,(function(){return F(!y)})),children:f})}))}p.useContext=l.f,p.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return T}));var a=n(2),o=n(19),r=(n(11),n(41)),s=n(136),l=n(82),i=n(38),c=n(101),u=n(491),_=n.n(u),E={name:_.a.NAME_EXTERNAL_CONTAINER,type:_.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},d=n(492),m=n.n(d),b=n(10),O=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function T(e){var t=e,n=t["header-onBack"],u=t["header-title"],_=t.children,E=t.name,d=t.type,T=t.headerClassName,N=t.showLogo,p=Object(o.a)(t,O),f=Boolean(n||u),M=Object(r.c)(!u&&m.a.onlyRow,T),j=Object(r.c)(N&&m.a.step1Logo),v=Object(r.c)(N&&m.a.hasLogo);return Object(b.jsxs)(c.a,{children:[N&&Object(b.jsx)("div",{className:j,children:Object(b.jsx)(s.a,{alt:"logo",uuid:"logo150Login"})}),Object(b.jsx)(r.a,Object(a.a)(Object(a.a)({name:E,tag:"article",type:d},p),{},{children:Object(b.jsxs)("article",{className:v,children:[f&&Object(b.jsxs)("header",{className:M,children:[n&&Object(b.jsx)(l.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),u&&Object(b.jsx)(i.b,{tag:"h5",uuid:u})]}),_]})}))]})}T.defaultProps=E},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},503:function(e,t,n){"use strict";n.d(t,"a",(function(){return N}));var a=n(272),o=n(2),r=n(16),s=n(19),l=n(11),i=n(50),c=n(41),u=n(488),_=n(516),E=n.n(_),d=n(10),m=["id","name","methods","options","defaultOption","onSelectOption"],b=E.a.NAME_INPUT_SELECT,O=E.a.TYPE_INPUT_SELECT,T=l.b.memo((function(e){var t,n=e.id,a=e.name,u=e.methods,_=e.options,E=e.defaultOption,T=e.onSelectOption,N=Object(s.a)(e,m),p=u.register,f=u.formState,M=u.setValue,j=u.watch,v=f.errors,R="".concat(a),A=l.b.useState(E),h=Object(r.a)(A,2),P=h[0],x=h[1];j(R);var g=l.b.useRef(null),L=v[a];return l.b.useEffect((function(){null!==E&&void 0!==E&&E.value&&M(R,null===E||void 0===E?void 0:E.value,{shouldValidate:!0})}),[null===E||void 0===E?void 0:E.value,R,M]),l.b.useEffect((function(){g.current&&g.current.blur()}),[L]),l.b.useEffect((function(){P||x(E)}),[E,P]),Object(d.jsx)(c.a,{name:b,type:O,children:Object(d.jsx)(i.SelectField,Object(o.a)(Object(o.a)(Object(o.a)({defaultOption:P,id:n||a,options:_},p(R)),L&&{error:null===(t=L.message)||void 0===t?void 0:t.toString()}),{},{ref:g,onSelectOption:function(e){M(R,e.value,{shouldValidate:!0}),T&&T(e)}},N))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function N(e){var t=u.a.useContext(),n=e,r=Object.assign({},(Object(a.a)(n),n));return Object(d.jsx)(T,Object(o.a)({methods:t},r))}},516:function(e,t,n){e.exports={NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element"}},583:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var a=n(2),o=n(19),r=n(11),s=n(41),l=n(8),i=n(33),c=n(50),u=n(503),_=n(38),E=n(584),d=n.n(E),m=n(585),b=n.n(m),O=n(10),T=["environments","name","onSelectOption","defaultOption","label","dropdownButton"],N=d.a.NAME_ENVIRONMENTSELECTOR,p=d.a.TYPE_ENVIRONMENTSELECTOR;function f(e){var t,n=e,E=n.environments,d=n.name,m=n.onSelectOption,f=n.defaultOption,M=n.label,j=n.dropdownButton,v=Object(o.a)(n,T),R=Object(l.b)(),A=Object(_.c)().textGet;return r.b.useEffect((function(){f&&R(i.a.setEnvironmentColor(h(E.indexOf(f))))}),[f,R,E]),Object(O.jsx)(s.a,{name:N,type:p,children:Object(O.jsx)(u.a,Object(a.a)(Object(a.a)({defaultOption:f&&P(f,E.indexOf(f))},j?{dropdownButton:j}:{label:M}),{},{name:d,options:(t=E,t.map((function(e,t){return P(e,t)}))),onSelectOption:function(e){E.forEach((function(t,n){var a;t.value===e.value&&(a=h(n),R(i.a.setEnvironmentColor(a)))})),m&&m(e)}},v))});function h(e){var t=["dark-green","yellow","blue","violet","green","purple","light-green"];return t[e%t.length]}function P(e,t){var n,o=null===(n=e.label)||void 0===n?void 0:n.toString(),r=null!==o&&void 0!==o&&o.includes("retail")?"user":"business",s=A({uuid:"user"===r?"spa.a11y.image.alt.user":"spa.a11y.image.alt.business"}),l=null===o||void 0===o?void 0:o.replace("retail","").replace("corporate","");return Object(a.a)(Object(a.a)({},e),{},{label:Object(O.jsxs)("div",{className:b.a.option,children:[Object(O.jsx)(c.Avatar,{alt:s,className:b.a.avatar,color:h(t),name:r,size:"xsmall"}),Object(O.jsx)(_.b,{className:b.a.labelOptionsText,color:"gray-dark",tag:"span",children:l})]})})}}f.defaultProps={}},584:function(e,t,n){e.exports={NAME_ENVIRONMENTSELECTOR:"EnvironmentSelector",TYPE_ENVIRONMENTSELECTOR:"Element"}},585:function(e,t,n){e.exports={NAME_ENVIRONMENTSELECTOR:"EnvironmentSelector",TYPE_ENVIRONMENTSELECTOR:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",option:"_rules_option__AVjVt",labelOptionsText:"_rules_labelOptionsText__3k7gc",avatar:"_rules_avatar__3vQce"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=132.2c0bbaf6.chunk.js.map