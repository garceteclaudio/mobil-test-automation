(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[140,199,310],{344:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return v}));var r=a(0),n=a(5),s=(a(11),a(39)),o=a(99),i=a(41),c=a(50),l=a(82),u=a(38),d=a(513),_=a(488),b=a(517),E=a(515),m=a(640),O=a(489),j=a(108),T=a(79),h=a(33),p=a(8),g=a(187),N=a(6),f=a(51),P=a(74),A=a(120),M=a(432),R=a.n(M),x=a(10);function v(){var e=Object(p.b)(),t=Object(u.c)().textGet,a=Object(j.h)().state.isBiometryAvailable,M=Object(o.a)().getValueConfig,S=Object(P.a)(M("core.auth.captcha.google.siteKey")),C=Object(P.a)(M("core.auth.captcha.enabled")),y=Object(P.a)(M("vu.fraud.check.fingerprint.enable")),L=Object(p.c)(h.e.securitySeal),I=Object(p.c)(h.e.username),w=Object(p.c)(h.e.fetching),F=Object(p.c)(h.e.error),k=Object(p.c)(h.e.warning),B=Object(p.c)(j.f.isBiometrySessionConfigured),U=Object(p.c)(h.e.showCaptcha),Y=Object(f.sb)(f.gb),X=Object(f.sb)(f.P),H=t({uuid:"spa.login.step2.password.input.label"}),D=t({uuid:"spa.login.step2.activateSession.label"}),W=t({uuid:"spa.generic.field.error.required"}),q=Object(j.i)(),G=s.e.object({password:Object(g.d)(s.e.string.required(),W),active:s.e.boolean.orUndefined()}),K=s.e.object({password:Object(g.d)(s.e.string.required(),W),active:s.e.boolean.orUndefined(),captcha:Object(g.d)(s.e.string.required(),W)}),V=C&&U,z=Object(i.c)(R.a.biometryAvailable,V&&R.a.captchaEnabled),J=Object(A.e)(N.G.PREFERENCES_BIOMETRY_FINGERPRINT),Q=Object(P.a)(M("backend.vu.fraud.api.fingerprint.url")),Z=Object(P.a)(M("backend.vu.fraud.api.fingerprint.timeout"));return Object(x.jsxs)(O.a,{"header-onBack":function(){e(h.a.cleanUser())},children:[Object(x.jsxs)("section",{children:[Object(x.jsxs)("div",{className:R.a.securitySeal,children:[Object(x.jsx)(c.Avatar,{alt:t({uuid:"login.step2.imageAlt"}),size:"large",src:L}),Object(x.jsxs)("div",{className:R.a.greeting,children:[Object(x.jsx)(c.Icon,{name:"wavingHandEmoji",size:"small"}),Object(x.jsx)(u.b,{tag:"span",uuid:"spa.login.step2.greeting.text"})]})]}),Object(x.jsxs)(_.a,{schema:C&&U?K:G,onSubmit:function(e){return $.apply(this,arguments)},children:[Object(x.jsx)(b.a,{autoFocus:!0,id:"password",label:H,name:"password",withSuggestions:!1}),Object(x.jsx)("div",{className:R.a.passwordRecovery,children:Object(x.jsx)(d.a,{to:X,children:Object(x.jsx)(u.b,{tag:"span",uuid:"spa.login.step2.forgotPassword.text"})})}),Object(x.jsx)(m.a,{hasError:Boolean(F||k),isEnabled:V,name:"captcha",sitekey:S}),a&&!B&&J&&Object(x.jsx)("div",{className:z,children:Object(x.jsx)(E.a,{isDisabled:q,label:D,name:"active",onChange:function(t){var a=t.currentTarget;if(e(j.a.setBiometrySessionRequested(a.checked)),!a.checked)return;e(T.a.set({kind:"INFO",text:{uuid:"spa.security.biometric.text"},duration:N.z}))}})}),Object(x.jsx)(l.a,{flowId:v.displayName,label:{uuid:"spa.login.step2.getInto.button"},loading:w,type:"submit"})]})]}),Object(x.jsx)("footer",{children:Object(x.jsx)("div",{className:R.a.alignRecommendations,children:Object(x.jsx)(d.a,{to:Y,children:Object(x.jsx)(u.b,{tag:"span",uuid:"spa.login.step2.footer.text"})})})})]});function $(){return($=Object(n.a)(Object(r.a)().mark((function t(a){var n,s,o;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return s=(n=a).password,o=n.captcha,t.next=3,e(h.b.secondStep({username:I,password:s,captcha:o,isVUEnabled:y,url:Q,timeout:Z}));case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}v.displayName="LoginStep2"},432:function(e,t,a){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",containerStep3:"_rules_containerStep3__mxo8i",logoLogin:"_rules_logoLogin__2WuE9",utilTools:"_rules_utilTools__2Zjv6",separator:"_rules_separator__12F4a",bottomlessButton:"_rules_bottomlessButton__1JWkd",alignRecommendations:"_rules_alignRecommendations__34Flb",securitySeal:"_rules_securitySeal__2L_1d",greeting:"_rules_greeting__3hWQ2",selectOperation:"_rules_selectOperation__3c2XI",userRecovery:"_rules_userRecovery__2iD5o",passwordRecovery:"_rules_passwordRecovery__2HC26",biometrySession:"_rules_biometrySession__3vVQv",biometryAvailable:"_rules_biometryAvailable__xuCUu",captchaEnabled:"_rules_captchaEnabled__6FgGv",createToken:"_rules_createToken__x3jsC",environments:"_rules_environments__2zOXj",alignInputs:"_rules_alignInputs__1YLR9",expiredPassword:"_rules_expiredPassword__2sQxQ",stepBlockedUserByPassword:"_rules_stepBlockedUserByPassword__2bJu2",modalWelcome:"_rules_modalWelcome__2oZ6A",modalUList:"_rules_modalUList__33rmj",modalWelcomeButton:"_rules_modalWelcomeButton__3KlfQ",welcomeText:"_rules_welcomeText__17xiF",alignFooter:"_rules_alignFooter__5v5Mq",updateModal:"_rules_updateModal__ylzEn",footer:"_rules_footer__3mgfJ"}},488:function(e,t,a){"use strict";a.d(t,"a",(function(){return h}));var r=a(2),n=a(16),s=a(19),o=a(11),i=a(502),c=a(505),l=a(41),u=a(6),d=a(79),_=a(8),b=a(493),E=a.n(b),m=a(10),O=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],j=E.a.NAME_FORM,T=E.a.TYPE_FORM;function h(e){var t=e,a=t.ariaLabel,b=t.ariaLabelledby,E=t.schema,h=t.onSubmit,p=t.children,g=t.warnings,N=t.isRequiredToast,f=t.isResetForm,P=Object(s.a)(t,O),A=Object(_.b)(),M=Object(i.e)({resolver:Object(c.a)(E)}),R=M.handleSubmit,x=M.setError,v=M.formState.errors,S=M.reset,C=Object.keys(v),y=o.b.useState(!1),L=Object(n.a)(y,2),I=L[0],w=L[1],F=o.b.useCallback((function(){N&&I&&A(d.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:u.w})),w(!1)}),[A,N,I]),k=o.b.useCallback((function(){S()}),[S]);return o.b.useEffect((function(){g&&Object.keys(g.data).map((function(e){var t=e.startsWith(u.Nb)?e.slice(u.fb):e;return x(t,{message:g.data[e]},{shouldFocus:!1}),null})),C.length>u.Sb&&F(),f&&k()}),[C.length,f,k,x,F,g]),Object(m.jsx)(i.b,Object(r.a)(Object(r.a)(Object(r.a)({},M),P),{},{children:Object(m.jsx)(l.a,{noValidate:!0,"aria-label":a,"aria-labelledby":b,name:j,tag:"form",type:T,onSubmit:R(h,(function(){return w(!I)})),children:p})}))}h.useContext=i.f,h.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,a){"use strict";a.d(t,"a",(function(){return j}));var r=a(2),n=a(19),s=(a(11),a(41)),o=a(136),i=a(82),c=a(38),l=a(101),u=a(491),d=a.n(u),_={name:d.a.NAME_EXTERNAL_CONTAINER,type:d.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},b=a(492),E=a.n(b),m=a(10),O=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function j(e){var t=e,a=t["header-onBack"],u=t["header-title"],d=t.children,_=t.name,b=t.type,j=t.headerClassName,T=t.showLogo,h=Object(n.a)(t,O),p=Boolean(a||u),g=Object(s.c)(!u&&E.a.onlyRow,j),N=Object(s.c)(T&&E.a.step1Logo),f=Object(s.c)(T&&E.a.hasLogo);return Object(m.jsxs)(l.a,{children:[T&&Object(m.jsx)("div",{className:N,children:Object(m.jsx)(o.a,{alt:"logo",uuid:"logo150Login"})}),Object(m.jsx)(s.a,Object(r.a)(Object(r.a)({name:_,tag:"article",type:b},h),{},{children:Object(m.jsxs)("article",{className:f,children:[p&&Object(m.jsxs)("header",{className:g,children:[a&&Object(m.jsx)(i.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:a}),u&&Object(m.jsx)(c.b,{tag:"h5",uuid:u})]}),d]})}))]})}j.defaultProps=_},491:function(e,t,a){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,a){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},515:function(e,t,a){"use strict";a.d(t,"a",(function(){return j}));var r=a(2),n=a(16),s=a(19),o=a(11),i=a(50),c=a(41),l=a(488),u=a(520),d=a.n(u),_=a(10),b=["id","name","methods","onChange","isChecked"],E=d.a.NAME_INPUT_CHECKBOX,m=d.a.TYPE_INPUT_CHECKBOX,O=o.b.memo((function(e){var t,a=e.id,l=e.name,u=e.methods,d=e.onChange,O=e.isChecked,j=Object(s.a)(e,b),T=o.b.useState(O),h=Object(n.a)(T,2),p=h[0],g=h[1],N=u.register,f=u.formState,P=u.setValue,A=u.clearErrors,M=f.errors,R="".concat(l);o.b.useEffect((function(){void 0!==O&&(g(O),P(R,O,{shouldValidate:!0}))}),[O,R,P]);var x=M[l];return Object(_.jsx)(c.a,{name:E,type:m,children:Object(_.jsx)(i.Checkbox,Object(r.a)(Object(r.a)(Object(r.a)({id:a||l},x&&{error:null===(t=x.message)||void 0===t?void 0:t.toString()}),N(R)),{},{isChecked:p,onChange:function(e){var t=!p;g(t),P(R,t),d&&d(e),A([R])}},j))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function j(e){var t=l.a.useContext();return Object(_.jsx)(O,Object(r.a)({methods:t},e))}j.displayName=E},517:function(e,t,a){"use strict";a.d(t,"a",(function(){return j}));var r=a(2),n=a(19),s=a(11),o=a(50),i=a(41),c=a(488),l=a(529),u=a.n(l),d=a(10),_=["id","name","autoFocus","methods","withSuggestions","onChange"],b=u.a.NAME_INPUT_PASSWORD,E=u.a.TYPE_INPUT_PASSWORD,m={id:b},O=s.b.memo((function(e){var t,a=e.id,s=e.name,c=e.autoFocus,l=e.methods,u=e.withSuggestions,m=void 0===u||u,O=e.onChange,j=Object(n.a)(e,_),T=l.register,h=l.formState,p=l.clearErrors,g=h.errors,N="".concat(s),f=g[s];return Object(d.jsx)(i.a,{name:b,type:E,children:Object(d.jsx)(o.PasswordField,Object(r.a)(Object(r.a)(Object(r.a)({autoComplete:m?"on":"off",autoFocus:c,id:a||s},f&&{error:null===(t=f.message)||void 0===t?void 0:t.toString()}),T(N,{required:!0,onChange:function(e){O&&O(e);p([N])}})),j))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function j(e){var t=c.a.useContext();return Object(d.jsx)(O,Object(r.a)({methods:t},e))}j.displayName=b,j.defaultProps=m},520:function(e,t,a){e.exports={NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element"}},529:function(e,t,a){e.exports={NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=140.922993e1.chunk.js.map