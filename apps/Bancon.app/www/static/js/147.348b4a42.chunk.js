(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[147,80,167,199,311],{353:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return g}));var a=n(0),r=n(5),i=n(11),o=n(39),s=n(80),l=n(8),u=n(149),c=n(270),_=n(488),E=n(489),m=n(38),d=n(82),b=n(494),T=n(147),O=n(554),N=n(74),j=n(99),f=n(50),h=n(51),p=n(428),M=n.n(p),P=n(10);function g(){var e=Object(m.c)().textGet,t=Object(j.a)().getValueConfig,n=Object(s.g)(),p=Object(l.b)(),g=Object(h.sb)(h.R),A=Object(l.c)(u.c.fetching),x=Object(l.c)(u.c.warning),R=Object(l.c)(T.c.exchangeToken),L=e({uuid:"spa.onboarding.step2.email.label"}),C=function(){var n=e({uuid:"spa.generic.field.error.required"}),a=e({uuid:"spa.generic.mail.format.invalid"}),r=Object(N.a)(t("core.email.maxLength")),i=Object(N.a)(t("spa.email.validationFormat")),s=new RegExp(i),l=e({uuid:"spa.email.error.tooBig",replace:"".concat(r)});return o.e.object({email:Object(O.a)({textErrorRequired:n,textErrorEmail:a,textErrorMaxLength:l,emailMaxLength:r,emailValidationRegex:s})})}(),I=i.b.useCallback((function(){p(T.a.clean()),n(g,{replace:!0})}),[p,n,g]);return i.b.useEffect((function(){return document.addEventListener("backbutton",I),function(){return document.removeEventListener("backbutton",I)}}),[I]),A?Object(P.jsx)(c.a,{}):Object(P.jsx)(E.a,{"header-onBack":I,"header-title":"spa.onboarding.step2.title",children:Object(P.jsx)("section",{children:Object(P.jsxs)(_.a,{schema:C,warnings:x,onSubmit:function(e){return v.apply(this,arguments)},children:[Object(P.jsx)(m.b,{className:M.a.title,uuid:"spa.onboarding.step2.text1"}),Object(P.jsx)("div",{className:M.a.inputSelectContainer,children:Object(P.jsx)(b.a,{id:"email",label:L,name:"email",start:Object(P.jsx)(f.Icon,{name:"mail",size:"small",stroke:"gray-600"})})}),Object(P.jsx)(d.a,{label:{uuid:"spa.form.continue"},loading:A,type:"submit"})]})})});function v(){return(v=Object(r.a)(Object(a.a)().mark((function e(t){var n;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.email,e.next=3,p(u.b.sendEmail({exchangeToken:R,email:n}));case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},428:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",presentation:"_rules_presentation__2rnDT",image:"_rules_image__2dV7m",containerText:"_rules_containerText__pu48C",title:"_rules_title__3WK5D",text:"_rules_text__3khoq",nextButton:"_rules_nextButton__3nv4A",skipButton:"_rules_skipButton__6WOgG",finishButton:"_rules_finishButton__VsgGK",subtitle:"_rules_subtitle__bTvVh",inputSelectContainer:"_rules_inputSelectContainer__2j7Df",submitButton:"_rules_submitButton__3FaKR",alert:"_rules_alert__laL5T",alertLottie:"_rules_alertLottie__2sgW7",termsAndConditions:"_rules_termsAndConditions__cNiMg",validateTitle:"_rules_validateTitle__2Nx1p",emailValue:"_rules_emailValue__yLDPW",noteEmail:"_rules_noteEmail__4AmC9",subtitleEmail:"_rules_subtitleEmail__2J0wM",inputContainerEmail:"_rules_inputContainerEmail__2O1ou",resendCode:"_rules_resendCode__lH6Jj",inputContainerPhone:"_rules_inputContainerPhone__1gKy1",securitySealContainer:"_rules_securitySealContainer__1LU5g",onboardingWelcome:"_rules_onboardingWelcome__ijVs1",downloadPrincipal:"_rules_downloadPrincipal__2thE8",logosContainer:"_rules_logosContainer__2uaXe"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var a=n(2),r=n(16),i=n(19),o=n(11),s=n(502),l=n(505),u=n(41),c=n(6),_=n(79),E=n(8),m=n(493),d=n.n(m),b=n(10),T=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],O=d.a.NAME_FORM,N=d.a.TYPE_FORM;function j(e){var t=e,n=t.ariaLabel,m=t.ariaLabelledby,d=t.schema,j=t.onSubmit,f=t.children,h=t.warnings,p=t.isRequiredToast,M=t.isResetForm,P=Object(i.a)(t,T),g=Object(E.b)(),A=Object(s.e)({resolver:Object(l.a)(d)}),x=A.handleSubmit,R=A.setError,L=A.formState.errors,C=A.reset,I=Object.keys(L),v=o.b.useState(!1),S=Object(r.a)(v,2),F=S[0],B=S[1],y=o.b.useCallback((function(){p&&F&&g(_.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:c.w})),B(!1)}),[g,p,F]),Y=o.b.useCallback((function(){C()}),[C]);return o.b.useEffect((function(){h&&Object.keys(h.data).map((function(e){var t=e.startsWith(c.Nb)?e.slice(c.fb):e;return R(t,{message:h.data[e]},{shouldFocus:!1}),null})),I.length>c.Sb&&y(),M&&Y()}),[I.length,M,Y,R,y,h]),Object(b.jsx)(s.b,Object(a.a)(Object(a.a)(Object(a.a)({},A),P),{},{children:Object(b.jsx)(u.a,{noValidate:!0,"aria-label":n,"aria-labelledby":m,name:O,tag:"form",type:N,onSubmit:x(j,(function(){return B(!F)})),children:f})}))}j.useContext=s.f,j.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),r=n(19),i=(n(11),n(41)),o=n(136),s=n(82),l=n(38),u=n(101),c=n(491),_=n.n(c),E={name:_.a.NAME_EXTERNAL_CONTAINER,type:_.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},m=n(492),d=n.n(m),b=n(10),T=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function O(e){var t=e,n=t["header-onBack"],c=t["header-title"],_=t.children,E=t.name,m=t.type,O=t.headerClassName,N=t.showLogo,j=Object(r.a)(t,T),f=Boolean(n||c),h=Object(i.c)(!c&&d.a.onlyRow,O),p=Object(i.c)(N&&d.a.step1Logo),M=Object(i.c)(N&&d.a.hasLogo);return Object(b.jsxs)(u.a,{children:[N&&Object(b.jsx)("div",{className:p,children:Object(b.jsx)(o.a,{alt:"logo",uuid:"logo150Login"})}),Object(b.jsx)(i.a,Object(a.a)(Object(a.a)({name:E,tag:"article",type:m},j),{},{children:Object(b.jsxs)("article",{className:M,children:[f&&Object(b.jsxs)("header",{className:h,children:[n&&Object(b.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),c&&Object(b.jsx)(l.b,{tag:"h5",uuid:c})]}),_]})}))]})}O.defaultProps=E},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},494:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),r=n(19),i=n(16),o=n(11),s=n(50),l=n(41),u=n(488),c=n(498),_=n.n(c),E=n(10),m=["id","name","methods","defaultValue","pattern","withSuggestions","onChange","onBlur"],d=_.a.NAME_INPUT_FIELD,b=_.a.TYPE_INPUT_FIELD,T=o.b.memo((function(e){var t,n=o.b.useState(!1),u=Object(i.a)(n,2),c=u[0],_=u[1],T=e.id,O=e.name,N=e.methods,j=e.defaultValue,f=e.pattern,h=e.withSuggestions,p=void 0===h||h,M=e.onChange,P=e.onBlur,g=Object(r.a)(e,m),A=N.register,x=N.formState,R=N.setValue,L=N.clearErrors,C=x.errors,I="".concat(O),v=C[O];return o.b.useEffect((function(){j&&R(I,j),j||R(I,void 0),p&&_(!0)}),[j,I,R,p,_]),Object(E.jsx)(l.a,{name:d,type:b,children:Object(E.jsx)(s.TextField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({id:T||O},j&&{defaultValue:j}),v&&{error:null===(t=v.message)||void 0===t?void 0:t.toString()}),A(I,{onChange:function(e){M&&M(e);L([I])},onBlur:P})),g),{},{autoComplete:p?"on":"off",pattern:f,onKeyDown:function(e){e.target.value||c||_(!0)}}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function O(e){var t=u.a.useContext();return Object(E.jsx)(T,Object(a.a)({methods:t},e))}O.displayName=d},498:function(e,t,n){e.exports={NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element"}},554:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var a=n(39),r=n(187),i=n(6);function o(e){var t=e.textErrorRequired,n=e.textErrorEmail,o=e.textErrorMaxLength,s=e.emailMaxLength,l=e.emailValidationRegex,u=[Object(r.d)(a.e.string.ofLength(i.fb,s),o),Object(r.d)(Object(r.h)(l),n)];return Object(a.c)((function(e){var n=u.find((function(t){return!Object(a.d)(e,t)}));return e&&n?n:Object(r.d)(a.e.string.required(),t)}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=147.348b4a42.chunk.js.map