(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[167,80,199],{488:function(e,t,a){"use strict";a.d(t,"a",(function(){return h}));var n=a(2),o=a(16),r=a(19),s=a(11),i=a(502),c=a(505),l=a(41),u=a(6),E=a(79),d=a(8),b=a(493),m=a.n(b),O=a(10),T=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],_=m.a.NAME_FORM,N=m.a.TYPE_FORM;function h(e){var t=e,a=t.ariaLabel,b=t.ariaLabelledby,m=t.schema,h=t.onSubmit,j=t.children,f=t.warnings,M=t.isRequiredToast,R=t.isResetForm,A=Object(r.a)(t,T),g=Object(d.b)(),L=Object(i.e)({resolver:Object(c.a)(m)}),p=L.handleSubmit,P=L.setError,x=L.formState.errors,C=L.reset,F=Object.keys(x),I=s.b.useState(!1),S=Object(o.a)(I,2),y=S[0],v=S[1],w=s.b.useCallback((function(){M&&y&&g(E.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:u.w})),v(!1)}),[g,M,y]),Y=s.b.useCallback((function(){C()}),[C]);return s.b.useEffect((function(){f&&Object.keys(f.data).map((function(e){var t=e.startsWith(u.Nb)?e.slice(u.fb):e;return P(t,{message:f.data[e]},{shouldFocus:!1}),null})),F.length>u.Sb&&w(),R&&Y()}),[F.length,R,Y,P,w,f]),Object(O.jsx)(i.b,Object(n.a)(Object(n.a)(Object(n.a)({},L),A),{},{children:Object(O.jsx)(l.a,{noValidate:!0,"aria-label":a,"aria-labelledby":b,name:_,tag:"form",type:N,onSubmit:p(h,(function(){return v(!y)})),children:j})}))}h.useContext=i.f,h.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,a){"use strict";a.d(t,"a",(function(){return _}));var n=a(2),o=a(19),r=(a(11),a(41)),s=a(136),i=a(82),c=a(38),l=a(101),u=a(491),E=a.n(u),d={name:E.a.NAME_EXTERNAL_CONTAINER,type:E.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},b=a(492),m=a.n(b),O=a(10),T=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function _(e){var t=e,a=t["header-onBack"],u=t["header-title"],E=t.children,d=t.name,b=t.type,_=t.headerClassName,N=t.showLogo,h=Object(o.a)(t,T),j=Boolean(a||u),f=Object(r.c)(!u&&m.a.onlyRow,_),M=Object(r.c)(N&&m.a.step1Logo),R=Object(r.c)(N&&m.a.hasLogo);return Object(O.jsxs)(l.a,{children:[N&&Object(O.jsx)("div",{className:M,children:Object(O.jsx)(s.a,{alt:"logo",uuid:"logo150Login"})}),Object(O.jsx)(r.a,Object(n.a)(Object(n.a)({name:d,tag:"article",type:b},h),{},{children:Object(O.jsxs)("article",{className:R,children:[j&&Object(O.jsxs)("header",{className:f,children:[a&&Object(O.jsx)(i.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:a}),u&&Object(O.jsx)(c.b,{tag:"h5",uuid:u})]}),E]})}))]})}_.defaultProps=d},491:function(e,t,a){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,a){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},494:function(e,t,a){"use strict";a.d(t,"a",(function(){return _}));var n=a(2),o=a(19),r=a(16),s=a(11),i=a(50),c=a(41),l=a(488),u=a(498),E=a.n(u),d=a(10),b=["id","name","methods","defaultValue","pattern","withSuggestions","onChange","onBlur"],m=E.a.NAME_INPUT_FIELD,O=E.a.TYPE_INPUT_FIELD,T=s.b.memo((function(e){var t,a=s.b.useState(!1),l=Object(r.a)(a,2),u=l[0],E=l[1],T=e.id,_=e.name,N=e.methods,h=e.defaultValue,j=e.pattern,f=e.withSuggestions,M=void 0===f||f,R=e.onChange,A=e.onBlur,g=Object(o.a)(e,b),L=N.register,p=N.formState,P=N.setValue,x=N.clearErrors,C=p.errors,F="".concat(_),I=C[_];return s.b.useEffect((function(){h&&P(F,h),h||P(F,void 0),M&&E(!0)}),[h,F,P,M,E]),Object(d.jsx)(c.a,{name:m,type:O,children:Object(d.jsx)(i.TextField,Object(n.a)(Object(n.a)(Object(n.a)(Object(n.a)(Object(n.a)({id:T||_},h&&{defaultValue:h}),I&&{error:null===(t=I.message)||void 0===t?void 0:t.toString()}),L(F,{onChange:function(e){R&&R(e);x([F])},onBlur:A})),g),{},{autoComplete:M?"on":"off",pattern:j,onKeyDown:function(e){e.target.value||u||E(!0)}}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function _(e){var t=l.a.useContext();return Object(d.jsx)(T,Object(n.a)({methods:t},e))}_.displayName=m},498:function(e,t,a){e.exports={NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=167.7f460d5b.chunk.js.map