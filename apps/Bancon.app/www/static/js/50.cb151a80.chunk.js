(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[50],{499:function(e,t,a){"use strict";a.d(t,"a",(function(){return T}));var n=a(0),r=a(5);function o(e){var t=e.filename,a=e.path,n=e.flags;return new Promise((function(e,r){var o;function i(e){r(e)}(o=window.cordova.file[a],new Promise((function(e,t){window.resolveLocalFileSystemURL(o,(function(t){e(t)}),(function(e){t(e)}))}))).then((function(a){var r=a;r.getFile(t,n,(function(t){var a=new FileReader;t.createWriter((function(n){e({fileEntry:t,dirEntry:r,fileReader:a,fileWriter:n,fileWrite:function(e){return new Promise((function(t,a){n.onwriteend=function(){return t(n)},n.onerror=function(e){return a(e)},n.write(e)}))},fileRemove:function(){return new Promise((function(e,a){t.remove((function(){return e(!0)}),(function(e){return a(e)}))}))}})}),i)}),i)}))}))}var i=a(36),c=a(26),s=a(28);function l(){return E.apply(this,arguments)}function E(){return(E=Object(r.a)(Object(n.a)().mark((function e(){var t;return Object(n.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(c.c)();case 2:if(e.sent&&cordova.plugins){e.next=5;break}throw c.a.CORDOVA_UNAVAILABLE;case 5:if(t=cordova.plugins.fileOpener2){e.next=8;break}throw c.a.PLUGIN_UNAVAILABLE;case 8:return e.abrupt("return",t);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function u(e){return _.apply(this,arguments)}function _(){return _=Object(r.a)(Object(n.a)().mark((function e(t){var a,r,o,i,E;return Object(n.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.contentType,r=t.fileName,o=t.withDialog,e.next=3,Object(c.c)();case 3:if(e.sent){e.next=6;break}throw c.a.CORDOVA_UNAVAILABLE;case 6:return e.next=8,l();case 8:return i=e.sent,E=o?i.open:i.showOpenWithDialog,e.abrupt("return",new Promise((function(e,t){try{E(r,a,{success:function(){e({code:s.a.SUCCESS,value:!0})},error:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){t("boolean"===typeof e?new s.b(s.a.ERROR,i.open.name,s.c):new s.b(s.a.ERROR,i.open.name,e.message))}))})}catch(n){t(new s.b(s.a.ERROR_UNKNOWN,i.open.name,s.c))}})));case 11:case"end":return e.stop()}}),e)}))),_.apply(this,arguments)}function T(){var e=Object(i.i)(),t=e.isDesktop,a=e.isUnknown,c=e.platform;function s(e){var t=e.split(".").pop();return"png"===t||"jpg"===t||"gif"===t||"bmp"===t?"image/".concat(t):"pdf"===t?"application/".concat(t):"doc"===t||"docx"===t?"application/msword":"ppt"===t||"pptx"===t?"application/vnd.ms-powerpoint":"xls"===t||"xlsx"===t?"application/vnd.ms-excel":"xlsm"===t?"application/vnd.ms-excel.sheet.macroEnabled.12":"txt"===t?"text/plain":"zip"===t?"application/zip":void 0}return function(){var e=Object(r.a)(Object(n.a)().mark((function e(r,l){var E,_,T,O,d,A,m;return Object(n.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(E=c===i.b.CORDOVA_ANDROID,!(_=s(r))){e.next=19;break}if(!t&&!a){e.next=9;break}return(T=document.createElement("a")).href=window.URL.createObjectURL(l),T.download=r,T.click(),e.abrupt("return");case 9:return e.next=11,o({filename:r,path:E?"externalApplicationStorageDirectory":"dataDirectory",flags:{create:!0,exclusive:!1}});case 11:return O=e.sent,d=O.fileWrite,A=O.fileEntry,e.next=16,d(l);case 16:return m={contentType:_,fileName:A.nativeURL,withDialog:!0},e.next=19,u(m);case 19:case"end":return e.stop()}}),e)})));return function(t,a){return e.apply(this,arguments)}}()}},501:function(e,t,a){"use strict";a.d(t,"a",(function(){return o}));var n=512,r=0;function o(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:n,o=window.atob(e),i=[],c=r;c<o.length;c+=a){for(var s=o.slice(c,c+a),l=new Array(s.length),E=r;E<s.length;E++)l[E]=s.charCodeAt(E);i.push(new Uint8Array(l))}return new Blob(i,{type:t})}},582:function(e,t,a){"use strict";a.d(t,"a",(function(){return O}));var n=a(2),r=(a(11),a(41)),o=a(50),i=a(82),c=a(598),s=a.n(c),l=a(599),E=a.n(l),u=a(10),_=s.a.NAME_DROPDOWNBASIC,T=s.a.TYPE_DROPDOWNBASIC;function O(e){var t=e,a=t.color,c=t.iconName,s=t.options,l=Object(u.jsx)(i.a,{ariaLabel:{uuid:"spa.a11y.buttons.options"},kind:"plain",label:{uuid:"spa.a11y.buttons.options"},children:Object(u.jsx)(o.Icon,{name:c,size:"small"})});return Object(u.jsx)(r.a,Object(n.a)(Object(n.a)({},e),{},{name:_,type:T,children:Object(u.jsx)(o.Dropdown,{className:E.a.dropdown,color:a,label:l,children:s.map((function(e){var t=e.label,a=e.onOptionClick;if(t)return Object(u.jsx)(o.Dropdown.Item,{children:Object(u.jsx)(i.a,{className:E.a.dropdownItem,kind:"plain",label:{uuid:t},onClick:a})},t)}))})}))}O.defaultProps={color:"primary",iconName:"verticalKebab"}},598:function(e,t,a){e.exports={NAME_DROPDOWNBASIC:"DropdownBasic",TYPE_DROPDOWNBASIC:"Element"}},599:function(e,t,a){e.exports={NAME_DROPDOWNBASIC:"DropdownBasic",TYPE_DROPDOWNBASIC:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",dropdown:"_rules_dropdown__2aUF4"}},621:function(e,t,a){"use strict";a.d(t,"a",(function(){return R}));var n=a(2),r=a(19),o=(a(11),a(41)),i=a(6),c=a(100),s=a(50),l=a(500),E=a(82),u=a(38),_=a(504),T=a(622),O=a.n(T),d=a(623),A=a.n(d),m=a(10),p=["cardLabel","avatarName","amountText","dateText","operationTag","hasOperationTag","title","onClick","amount","date","operationOptions","hasAvatar"],M=O.a.NAME_OPERATION_CARD,b=O.a.TYPE_OPERATION_CARD,N={avatarName:"saving",hasAvatar:!0,hasOperationTag:!0,operationOptions:[],operationTag:i.D};function R(e){var t=e,a=t.cardLabel,T=t.avatarName,O=t.amountText,d=t.dateText,N=t.operationTag,R=t.hasOperationTag,j=t.title,P=t.onClick,f=t.amount,x=t.date,h=t.operationOptions,C=t.hasAvatar,L=Object(r.a)(t,p),v=Object(u.c)().textGet,D=Object(o.c)(N||!R?A.a.title:A.a.operationTag),F=Object(o.c)(A.a.operationInfo,C&&A.a.operatioSpace),g=h.length>i.Sb,w=Object(m.jsx)(E.a,{ariaLabel:{uuid:"spa.a11y.buttons.options"},className:A.a.dropdownButton,kind:"plain",label:{uuid:"spa.a11y.buttons.options"},children:Object(m.jsx)(s.Icon,{name:"verticalKebab",size:"small"})});return Object(m.jsxs)(s.Card,Object(n.a)(Object(n.a)({"data-name":M,"data-type":b},L),{},{children:[Object(m.jsxs)(E.a,{className:A.a.cardButton,kind:"plain",label:a,onClick:P,children:[Object(m.jsxs)("header",{children:[C&&Object(m.jsx)(s.Avatar,{"aria-hidden":!0,alt:i.D,className:A.a.avatar,color:"blue",name:T,variant:"square"}),Object(m.jsxs)("div",{className:F,children:[N&&Object(m.jsx)(u.b,{className:A.a.operationTag,children:N}),Object(m.jsx)(u.b,{className:D,children:j})]})]}),Object(m.jsxs)("div",{className:A.a.amount,children:[Object(m.jsx)(u.b,{uuid:O}),Object(m.jsx)(l.a,{amount:f})]}),Object(m.jsxs)("footer",{children:[Object(m.jsx)(u.b,{uuid:d}),Object(m.jsx)(_.a,{date:x,formatParams:{format:c.a.SHORT}})]})]}),g&&Object(m.jsx)(s.Dropdown,{"aria-label":v({uuid:"spa.a11y.buttons.options"}),label:w,children:h.map((function(e){var t=e.label,a=e.onOptionClick;if(t)return Object(m.jsx)(s.Dropdown.Item,{children:Object(m.jsx)(E.a,{className:A.a.dropdownItem,kind:"plain",label:{uuid:t},onClick:a})},t)}))})]}))}R.defaultProps=N,R.displayName=M},622:function(e,t,a){e.exports={NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_CARD:"Card",NAME_OPERATION_CARD:"CardOperation",TYPE_OPERATION_CARD:"Element"}},623:function(e,t,a){e.exports={NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_CARD:"Card",NAME_OPERATION_CARD:"CardOperation",TYPE_OPERATION_CARD:"Element",NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",cardButton:"_rules_cardButton__2Eryc",avatar:"_rules_avatar__3ZOvH",operationInfo:"_rules_operationInfo__1p28Z",operatioSpace:"_rules_operatioSpace__2_-Rm",operationTag:"_rules_operationTag__2l9xd",title:"_rules_title__2Om0F",amount:"_rules_amount__3Wsqk",dropdownButton:"_rules_dropdownButton__DKyvF",dropdownItem:"_rules_dropdownItem__22DSE"}},630:function(e,t,a){"use strict";a.d(t,"a",(function(){return m}));var n=a(2),r=a(19),o=(a(11),a(50)),i=a(41),c=a(38),s=a(631),l=a.n(s),E=a(632),u=a.n(E),_=a(10),T=["variant","title","message","isOutline","replaceMessage"],O=l.a.NAME_STATIC_ALERT,d=l.a.TYPE_STATIC_ALERT,A={ERROR:"error",INFO:"info",WARNING:"warning",SUCCESS:"success"};function m(e){var t=e.variant,a=e.title,s=e.message,l=e.isOutline,E=e.replaceMessage,m=Object(r.a)(e,T),p=t?A[t]:A.INFO;return Object(_.jsx)(i.a,Object(n.a)(Object(n.a)({},m),{},{name:O,type:d,children:Object(_.jsxs)(o.Alert,{className:u.a.alertStatic,isOutline:l,variant:p,children:[Object(_.jsx)(o.Icon,{name:p,size:"small",stroke:p}),Object(_.jsxs)("section",{children:[Object(_.jsx)(c.b,{className:u.a.title,tag:"p",uuid:a}),Object(_.jsx)(c.b,Object(n.a)({className:u.a.message,tag:"p",uuid:s},E&&{replace:E}))]})]})}))}m.defaultProps={isOutline:!1,replaceMessage:"",title:"",variant:"INFO"}},631:function(e,t,a){e.exports={NAME_STATIC_ALERT:"StaticAlert",TYPE_STATIC_ALERT:"Element"}},632:function(e,t,a){e.exports={NAME_STATIC_ALERT:"StaticAlert",TYPE_STATIC_ALERT:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",alertStatic:"_rules_alertStatic__2-ZHL",title:"_rules_title__3fuUz",message:"_rules_message__3_z0L"}},765:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var n=a(2),r=a(19),o=(a(11),a(41)),i=a(50),c=a(6),s=a(513),l=a(500),E=a(38),u=a(82),_=a(766),T=a.n(_),O=a(767),d=a.n(O),A=a(10),m=["buttonLabel","amount","title","body","onClick","to"],p=T.a.NAME_CARDLOAN_OFFER,M=T.a.TYPE_CARDLOAN_OFFER;function b(e){var t=e.buttonLabel,a=e.amount,_=e.title,T=e.body,O=e.onClick,b=e.to,N=Object(r.a)(e,m);return Object(A.jsx)(o.a,{name:p,type:M,children:Object(A.jsxs)(i.Card,Object(n.a)(Object(n.a)({className:d.a.loanCard},N),{},{children:[Object(A.jsx)("header",{children:Object(A.jsx)(i.Lottie,{name:"sack",size:"small"})}),Object(A.jsxs)("div",{children:[Object(A.jsx)(E.b,{className:d.a.title,tag:"p",uuid:_}),Object(A.jsxs)("div",{className:d.a.body,children:[Object(A.jsx)(E.b,{replace:c.C,tag:"span",uuid:T}),a&&Object(A.jsx)(l.a,{amount:a,className:d.a.amount})]})]}),function(e,a){if(a&&t)return Object(A.jsx)("footer",{children:Object(A.jsx)(s.a,{to:a,children:Object(A.jsxs)(u.a,{kind:"plain",label:{uuid:t},children:[Object(A.jsx)(E.b,{className:d.a.secondaryTextLink,tag:"span",uuid:t}),Object(A.jsx)(i.Icon,{name:"right",size:"small"})]})})});if(e&&t)return Object(A.jsx)("footer",{children:Object(A.jsxs)(u.a,{kind:"plain",label:{uuid:t},onClick:e,children:[Object(A.jsx)(E.b,{className:d.a.secondaryTextLink,tag:"span",uuid:t}),Object(A.jsx)(i.Icon,{name:"right",size:"small"})]})});return Object(A.jsx)("div",{})}(O,b)]}))})}b.defaultProps={body:"",buttonLabel:"",title:""}},766:function(e,t,a){e.exports={NAME_CARDLOAN_OFFER:"CardLoanOffer",TYPE_CARDLOAN_OFFER:"Element"}},767:function(e,t,a){e.exports={NAME_CARDLOAN_OFFER:"CardLoanOffer",TYPE_CARDLOAN_OFFER:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_CARD:"Card",NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",loanCard:"_rules_loanCard__2mrJS",secondaryTextLink:"_rules_secondaryTextLink__5lNzI",body:"_rules_body__NDLTu"}},768:function(e,t,a){"use strict";a.d(t,"a",(function(){return A}));var n=a(2),r=(a(11),a(41)),o=a(50),i=a(769),c=a.n(i),s=a(513),l=a(38),E=a(770),u=a.n(E),_=a(10),T=c.a.NAME_CARD_LOAN_TENURE,O=c.a.TYPE_CARD_LOAN_TENURE,d={isCorporate:void 0,to:void 0};function A(e){var t=e,a=t.isCorporate,i=t.to;return Object(_.jsx)(r.a,Object(n.a)(Object(n.a)({},e),{},{name:T,type:O,children:Object(_.jsxs)(o.Card,{className:u.a.cardTenure,children:[Object(_.jsx)(o.Icon,{name:"sack",size:"xlarge"}),Object(_.jsx)(l.b,{className:u.a.title,tag:"h6",uuid:"spa.loan.no.tenure.title"}),Object(_.jsxs)("div",{children:[a?Object(_.jsx)(l.b,{tag:"p",uuid:"spa.loan.no.tenure.subtitle.corporate"}):Object(_.jsx)(l.b,{tag:"p",uuid:"spa.loan.no.tenure.subtitle"}),Object(_.jsx)(s.a,{to:i,children:Object(_.jsx)(l.b,{className:u.a.url,tag:"p",children:i})})]})]})}))}A.defaultProps=d},769:function(e,t,a){e.exports={NAME_CARD_LOAN_TENURE:"CardLoanTenure",TYPE_CARD_LOAN_TENURE:"Element"}},770:function(e,t,a){e.exports={NAME_CARD_LOAN_TENURE:"CardLoanTenure",TYPE_CARD_LOAN_TENURE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_CARD:"Card",cardTenure:"_rules_cardTenure__2jZzB",title:"_rules_title__39v61",url:"_rules_url__2bDUE"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=50.cb151a80.chunk.js.map