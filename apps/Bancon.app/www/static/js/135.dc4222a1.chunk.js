(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[135,199,309],{341:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return R}));var n=a(11),r=a(38),o=a(82),s=a(489),i=a(488),c=a(507),E=a(187),d=a(39),u=a(150),l=a(8),O=a(506),T=a(147),b=a(270),m=a(431),_=a.n(m),j=a(10);function R(){var e=Object(l.b)(),t=Object(r.c)().textGet,a=t({uuid:"spa.generic.field.error.required"}),m=t({uuid:"spa.onboarding.ddjj.form.radio.yes"}),R=t({uuid:"spa.onboarding.ddjj.form.radio.no"}),h=Object(l.c)(u.d.hasRF)?m:R,f=Object(l.c)(T.c.exchangeToken),N=Object(l.c)(u.d.fetching),M=d.e.object({hasRF:Object(E.d)(d.e.string.required(),a)}),P=n.b.useCallback((function(){e(u.b.cleanSubjectType())}),[e]);return N?Object(j.jsx)(b.a,{}):Object(j.jsx)(s.a,{"header-onBack":P,children:Object(j.jsx)("section",{children:Object(j.jsxs)(i.a,{schema:M,onSubmit:function(t){if(!f)return;var a=t.hasRF===m;e(u.c.updateStatus({status:a?u.a.RF_YES:u.a.RF_NO,exchangeToken:f})),e(u.b.setHasRF(a))},children:[Object(j.jsxs)("header",{children:[Object(j.jsx)(r.b,{tag:"h1",uuid:"spa.onboarding.ddjj.rf.title"}),Object(j.jsx)(r.b,{tag:"h2",uuid:"spa.onboarding.ddjj.rf.step"})]}),Object(j.jsx)(r.b,{tag:"span",uuid:"spa.onboarding.ddjj.rf.label"}),Object(j.jsxs)(O.a,{name:"hasRF",value:h,children:[Object(j.jsx)(c.a,{id:"hasRF-".concat(m),label:m,name:"hasRF",value:m}),Object(j.jsx)(c.a,{id:"hasRF-".concat(R),label:R,name:"hasRF",value:R})]}),Object(j.jsx)("div",{className:_.a.infoContainer,children:Object(j.jsx)(r.b,{tag:"p",uuid:"spa.onboarding.ddjj.rf.info"})}),Object(j.jsx)(o.a,{label:{uuid:"spa.onboarding.ddjj.form.continue"},type:"submit"})]})})})}},431:function(e,t,a){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",infoContainer:"_rules_infoContainer__NsT2B",formContainer:"_rules_formContainer__3oZ9K",title:"_rules_title__13-ed",importantText:"_rules_importantText__1NiIU",downloadText:"_rules_downloadText__3FDkn"}},488:function(e,t,a){"use strict";a.d(t,"a",(function(){return R}));var n=a(2),r=a(16),o=a(19),s=a(11),i=a(502),c=a(505),E=a(41),d=a(6),u=a(79),l=a(8),O=a(493),T=a.n(O),b=a(10),m=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],_=T.a.NAME_FORM,j=T.a.TYPE_FORM;function R(e){var t=e,a=t.ariaLabel,O=t.ariaLabelledby,T=t.schema,R=t.onSubmit,h=t.children,f=t.warnings,N=t.isRequiredToast,M=t.isResetForm,P=Object(o.a)(t,m),A=Object(l.b)(),x=Object(i.e)({resolver:Object(c.a)(T)}),p=x.handleSubmit,g=x.setError,L=x.formState.errors,C=x.reset,F=Object.keys(L),I=s.b.useState(!1),v=Object(r.a)(I,2),S=v[0],Y=v[1],y=s.b.useCallback((function(){N&&S&&A(u.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:d.w})),Y(!1)}),[A,N,S]),U=s.b.useCallback((function(){C()}),[C]);return s.b.useEffect((function(){f&&Object.keys(f.data).map((function(e){var t=e.startsWith(d.Nb)?e.slice(d.fb):e;return g(t,{message:f.data[e]},{shouldFocus:!1}),null})),F.length>d.Sb&&y(),M&&U()}),[F.length,M,U,g,y,f]),Object(b.jsx)(i.b,Object(n.a)(Object(n.a)(Object(n.a)({},x),P),{},{children:Object(b.jsx)(E.a,{noValidate:!0,"aria-label":a,"aria-labelledby":O,name:_,tag:"form",type:j,onSubmit:p(R,(function(){return Y(!S)})),children:h})}))}R.useContext=i.f,R.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,a){"use strict";a.d(t,"a",(function(){return _}));var n=a(2),r=a(19),o=(a(11),a(41)),s=a(136),i=a(82),c=a(38),E=a(101),d=a(491),u=a.n(d),l={name:u.a.NAME_EXTERNAL_CONTAINER,type:u.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},O=a(492),T=a.n(O),b=a(10),m=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function _(e){var t=e,a=t["header-onBack"],d=t["header-title"],u=t.children,l=t.name,O=t.type,_=t.headerClassName,j=t.showLogo,R=Object(r.a)(t,m),h=Boolean(a||d),f=Object(o.c)(!d&&T.a.onlyRow,_),N=Object(o.c)(j&&T.a.step1Logo),M=Object(o.c)(j&&T.a.hasLogo);return Object(b.jsxs)(E.a,{children:[j&&Object(b.jsx)("div",{className:N,children:Object(b.jsx)(s.a,{alt:"logo",uuid:"logo150Login"})}),Object(b.jsx)(o.a,Object(n.a)(Object(n.a)({name:l,tag:"article",type:O},R),{},{children:Object(b.jsxs)("article",{className:M,children:[h&&Object(b.jsxs)("header",{className:f,children:[a&&Object(b.jsx)(i.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:a}),d&&Object(b.jsx)(c.b,{tag:"h5",uuid:d})]}),u]})}))]})}_.defaultProps=l},491:function(e,t,a){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,a){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},506:function(e,t,a){"use strict";a.d(t,"a",(function(){return _}));var n=a(2),r=a(19),o=a(11),s=a(50),i=a(41),c=a(488),E=a(509),d=a.n(E),u=a(10),l=["id","name","children","methods","value","onChange"],O=d.a.NAME_RADIO_GROUP,T=d.a.TYPE_RADIO_GROUP,b={id:O},m=o.b.memo((function(e){var t=e.id,a=e.name,c=e.children,E=e.methods,d=e.value,b=e.onChange,m=Object(r.a)(e,l),_=E.formState,j=E.setValue,R=_.errors[a];return o.b.useEffect((function(){d&&j(a,d,{shouldValidate:!0})}),[d,a,j]),Object(u.jsx)(i.a,{name:O,type:T,children:Object(u.jsx)(s.RadioGroup,Object(n.a)(Object(n.a)(Object(n.a)({id:t,name:a,value:d,onChange:function(e){j(a,e.target.value),b&&b(e)}},R&&{error:String(R.message)}),m),{},{children:c}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function _(e){var t=c.a.useContext();return Object(u.jsx)(m,Object(n.a)({methods:t},e))}_.defaultProps=b},507:function(e,t,a){"use strict";a.d(t,"a",(function(){return _}));var n=a(2),r=a(19),o=a(11),s=a(50),i=a(41),c=a(488),E=a(510),d=a.n(E),u=(a(511),a(10)),l=["id","name","methods","onChange"],O=d.a.NAME_INPUT_RADIO,T=d.a.TYPE_INPUT_RADIO,b={id:O},m=o.b.memo((function(e){var t=e.id,a=e.name,o=e.methods,c=e.onChange,E=Object(r.a)(e,l),d=o.register,b=o.formState,m=o.clearErrors,_=b.errors,j="".concat(a),R=_[a];return Object(u.jsx)(i.a,{name:O,type:T,children:Object(u.jsx)(s.Radio,Object(n.a)(Object(n.a)(Object(n.a)({id:t},R&&{error:String(R.message)}),d(j)),{},{name:a,onChange:function(e){c&&c(e),m([j])}},E))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function _(e){var t=c.a.useContext();return Object(u.jsx)(m,Object(n.a)({methods:t},e))}_.defaultProps=b},509:function(e,t,a){e.exports={NAME_RADIO_GROUP:"RadioGroup",TYPE_RADIO_GROUP:"Element"}},510:function(e,t,a){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element"}},511:function(e,t,a){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=135.dc4222a1.chunk.js.map