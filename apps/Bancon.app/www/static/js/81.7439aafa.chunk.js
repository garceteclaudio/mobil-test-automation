(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[81,272,273],{203:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return D}));var s=a(2),n=a(16),i=a(11),c=a(99),o=a(501),l=a(271),r=a(6),d=a(8),u=a(148),b=a(33),j=a(154),p=a(153),O=a(50),m=a(38),T=a(499),E=a(569),_=a(504),v=a(100),x=a(500),M=a(270),f=a(523),A=a(615),h=a(497),S=a(74),P=a(51),N=a(508),R=a(83),C=a(79),g=a(308),y=a(459),F=a.n(y),L=a(10);function D(){var e,t,a,y,D=Object(d.b)(),k=Object(P.qb)(),H=Object(c.a)().getValueConfig,B=Object(m.c)().textGet,I=Object(P.sb)(P.n),U=Object(P.sb)(P.j),Y=Object(S.a)(H("backend.spa.deposits.v11")),w=Object(S.a)(H("backend.spa.deposits.v12")),V=Object(d.c)(b.e.token),X=Object(d.c)(u.c.idTransactionConstituteDeposit),q=Object(d.c)(u.c.idTransactionRemoveAutoRenewalDeposit),G=Object(d.c)(u.c.idTransactionPrecancelUVAHolding),J=Object(d.c)(u.c.accounts),W=Object(d.c)(p.c.transaction),z=Object(d.c)(u.c.termSelected),K=Object(d.c)(b.e.isCorporateEnvironment),Q=X||q||G,Z=null===W||void 0===W?void 0:W.data,$=(null===Z||void 0===Z?void 0:Z.depositType)===r.q,ee=String(null===W||void 0===W?void 0:W.idTransaction).substring(r.Sb,r.Bb).toUpperCase(),te=null===Z||void 0===Z||null===(e=Z.amount)||void 0===e?void 0:e.currency,ae=te===r.r.USD?r.Pb:r.b,se=null===Z||void 0===Z||null===(t=Z.interest)||void 0===t?void 0:t.quantity,ne=null===Z||void 0===Z||null===(a=Z.amount)||void 0===a?void 0:a.quantity,ie=null===Z||void 0===Z||null===(y=Z.finalAmount)||void 0===y?void 0:y.quantity,ce=(null===W||void 0===W?void 0:W.idTransactionStatus)===r.ib,oe=Object(T.a)(),le=i.b.useState(!1),re=Object(n.a)(le,2),de=re[0],ue=re[1],be=i.b.useState(!1),je=Object(n.a)(be,2),pe=je[0],Oe=je[1],me=i.b.useState(!1),Te=Object(n.a)(me,2),Ee=Te[0],_e=Te[1],ve=Object(d.c)(b.e.token),xe=Object(d.c)(u.c.hasRemoveAutomaticRenewal),Me=Object(d.c)(j.c.fetching),fe=Object(d.c)(j.c.fetchedFile),Ae=Object(d.c)(j.c.filename),he=Object(d.c)(j.c.content),Se=Object(N.a)(Ae),Pe=B({uuid:"spa.toast.success"});return i.b.useEffect((function(){return function(){D(p.a.clean()),D(C.a.clean()),D(j.a.clean())}}),[D]),i.b.useEffect((function(){xe&&!ce&&D(C.a.set({kind:"SUCCESS",text:{uuid:"spa.deposits.edit.renewal.success",replace:"<b>".concat(Pe,"</b><br>")},duration:r.v}))}),[D,xe,ce,Pe]),i.b.useEffect((function(){(pe||de)&&ve&&(fe||Ae||he?(Ae&&he&&(de&&(oe(Se,Object(o.a)(he)),ue(!1)),pe&&(Object(l.a)({options:{message:Ae,subject:Ae},files:[{fileName:Se,base64File:he}]}),Oe(!1))),D(j.a.setFetchedFile(!1))):D(j.b.generatePdf({token:ve,idTransaction:Q})))}),[he,D,de,fe,Ae,Se,oe,Q,pe,ve]),Me?Object(L.jsx)(M.a,{a11yMsg:B({uuid:"spa.a11y.loading"})}):Object(L.jsxs)(h.a,{withoutBox:!0,className:F.a.ticket,children:[Object(L.jsx)(f.a,{}),Object(L.jsxs)(E.a,Object(s.a)(Object(s.a)({isDownloadable:!0,isShareable:!0,finishButtonText:"spa.form.finish",handleDownload:function(){ue(!0)},handleFinish:function(){D(u.a.cleanHasRemoveAutomaticRenewal()),D(u.a.cleanIdTransactionRemoveAutomaticRenewal()),D(u.a.cleanIdTransactionPrecancelUVAHolding()),G&&D(u.a.setHoldingsToHistoric());k(q||G?U:I)},handleShare:function(){Oe(!0)},statusCustomMessage:function(){if((null===W||void 0===W?void 0:W.idTransactionStatus)!==R.e.STATUS_FINISHED)return;if(q)return"spa.transaction.ticket.status.success.edit.renewal";if(G)return"spa.transaction.ticket.status.success.precancel";return"spa.transaction.ticket.status.success.signature"}(),subtitle:ce?void 0:{label:$?"spa.deposits.creation.confirm.subtitle.uvas":"spa.deposits.creation.confirm.subtitle.dollar",dataValue:$?B({uuid:"spa.deposits.amount.uvas",replace:ie}):Object(L.jsx)(x.a,{amount:se,currency:ae})},title:{label:$?"spa.deposits.transaction.ticket.title.uva":"spa.deposits.transaction.ticket.title",dataValue:Object(L.jsx)(x.a,{amount:$?ne:ne+se,currency:ae})},transactionDate:null===W||void 0===W?void 0:W.creationDateTime,transactionStatus:null===W||void 0===W?void 0:W.idTransactionStatus},ce&&{cancelButtonText:"spa.deposits.transaction.cancel.button",handleCancel:function(){_e(!Ee)}}),{},{children:[Object(L.jsxs)("ul",{className:F.a.content,children:[function(){var e;return Object(L.jsxs)(i.b.Fragment,{children:[Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{tag:"span",uuid:"spa.deposits.detail.expiration"}),(null===Z||void 0===Z?void 0:Z.endDate)&&Object(L.jsx)(_.a,{date:Z.endDate,formatParams:{format:v.a.SHORT}})]}),Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{tag:"span",uuid:$?"spa.deposits.interestByTerms.interest":"spa.deposits.transaction.ticket.title.uva"}),$?Object(L.jsx)(m.b,{className:F.a.value,replace:se,tag:"span",uuid:"spa.deposits.amount.uvas"}):Object(L.jsx)(x.a,{amount:ne,currency:ae})]}),Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{tag:"span",children:Object(L.jsx)("abbr",{title:B({uuid:"spa.deposits.detail.tna.a11y"}),children:Object(L.jsx)(m.b,{uuid:"spa.deposits.detail.tna"})})}),Object(L.jsx)(m.b,{tag:"span",children:Object(L.jsx)(x.a,{amount:null===Z||void 0===Z?void 0:Z.tna,currency:r.D,suffix:r.jb})})]}),(null===Z||void 0===Z?void 0:Z.tem)&&Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{tag:"span",children:Object(L.jsx)("abbr",{title:B({uuid:"spa.deposits.transaction.ticket.tem.ariaLabel"}),children:Object(L.jsx)(m.b,{tag:"span",uuid:"spa.deposits.transaction.ticket.tem"})})}),Object(L.jsx)(x.a,{amount:null===Z||void 0===Z?void 0:Z.tem,currency:r.D,suffix:r.jb})]}),Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{uuid:"spa.deposits.detail.term"}),Object(L.jsx)(m.b,{className:F.a.value,replace:String(null===Z||void 0===Z?void 0:Z.term),uuid:"spa.deposits.interestByTerms.days"})]}),Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{uuid:"spa.deposits.creation.type"}),Object(L.jsx)(m.b,{className:F.a.value,uuid:Ce()})]}),!$&&ge(),Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{uuid:"spa.deposits.transaction.ticket.valid.since"}),(null===Z||void 0===Z?void 0:Z.constituteDate)&&Object(L.jsx)(_.a,{date:Z.constituteDate,formatParams:{format:v.a.SHORT}})]}),Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{uuid:"spa.deposits.detail.accreditation.account"}),Object(L.jsx)(m.b,{className:F.a.value,children:(null===Z||void 0===Z?void 0:Z.accountLabel)||Ne(null===Z||void 0===Z||null===(e=Z.debitAccount)||void 0===e?void 0:e.value)})]}),Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{uuid:"spa.deposits.transaction.ticket.channel"}),Object(L.jsx)(m.b,{className:F.a.value,uuid:"spa.deposits.transaction.ticket.".concat(Re(),".").concat(null===Z||void 0===Z?void 0:Z.channel)})]}),(null===Z||void 0===Z?void 0:Z.certificateCode)&&Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{uuid:"spa.deposits.transaction.ticket.nro.deposit"}),Object(L.jsx)(m.b,{className:F.a.value,replace:[ae,null===Z||void 0===Z?void 0:Z.certificateCode],uuid:"spa.deposits.transaction.ticket.nro.deposit.value"})]}),$&&Number(z)<r.gb&&Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{uuid:"spa.deposits.transaction.ticket.precancel.fee"}),Object(L.jsx)(m.b,{className:F.a.value,children:Y})]}),$&&Number(z)>=r.gb&&Object(L.jsx)("li",{className:F.a.precancelMessage,children:Object(L.jsx)(m.b,{replace:[Y,w],uuid:"spa.deposits.transaction.ticket.uva.message"})})]})}(),Object(L.jsx)(O.Separator,{}),Object(L.jsxs)(i.b.Fragment,{children:[W.idTransactionStatus===R.e.STATUS_PENDING&&Object(L.jsx)(A.a,{className:F.a.signature,transaction:W}),Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{uuid:"spa.deposits.transaction.ticket.transaction.code"}),Object(L.jsx)(m.b,{className:F.a.value,children:ee})]})]})]}),Object(L.jsx)(g.ModalCancel,{isFromTransacton:!0,handleAccept:function(){if(!V)return;D(p.b.cancelTransaction({accessToken:V,idTransaction:Q}))},setShowModal:_e,showModal:Ee})]}))]});function Ne(e){var t;return e?null===(t=J.find((function(t){return t.idProduct===e})))||void 0===t?void 0:t.label:r.D}function Re(){return K?"company":"individual"}function Ce(){return Z?$?"spa.deposits.productType.".concat(te,".").concat(Z.depositType,".title"):"spa.deposits.productType.".concat(te,".title"):r.D}function ge(){return q&&ce?Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{uuid:"spa.deposits.detail.expiration.action"}),Object(L.jsxs)("div",{children:[Object(L.jsx)(m.b,{align:"right",uuid:"spa.deposits.detail.expiration.action.from"}),Object(L.jsx)(m.b,{className:F.a.value,uuid:"backend.investments.renovationType.".concat(null===Z||void 0===Z?void 0:Z.renovationType)}),Object(L.jsx)(m.b,{align:"right",uuid:"spa.deposits.detail.expiration.action.to"}),Object(L.jsx)(m.b,{className:F.a.value,uuid:"backend.investments.renovationType.2"})]})]}):Object(L.jsxs)("li",{children:[Object(L.jsx)(m.b,{uuid:"spa.deposits.detail.expiration.action"}),Object(L.jsx)(m.b,{className:F.a.value,uuid:"backend.investments.renovationType.".concat(null===Z||void 0===Z?void 0:Z.renovationType)})]})}}},308:function(e,t,a){"use strict";a.r(t),a.d(t,"DEF_MODAL_PROPS",(function(){return m})),a.d(t,"ModalCancel",(function(){return T}));a(11);var s=a(50),n=a(8),i=a(148),c=a(69),o=a(79),l=a(6),r=a(82),d=a(490),u=a(38),b=a(51),j=a(435),p=a.n(j),O=a(10),m={isFromTransacton:!1};function T(e){var t=e,a=t.showModal,j=t.setShowModal,m=t.handleAccept,T=t.isFromTransacton,E=Object(n.b)(),_=Object(b.qb)(),v=Object(b.sb)(b.i),x="confirm-cancellation-button",M=Object(n.c)(c.c.isMobile),f=Object(n.c)(c.c.isWebMobile);return M||f?Object(O.jsxs)(s.BottomSheet,{className:p.a.bottomSheetCancel,initialFocusElementId:x,isVisible:a,onClose:P,children:[Object(O.jsx)(s.Separator,{className:p.a.separator}),Object(O.jsx)(u.b,{className:p.a.title,tag:"h4",uuid:A()}),Object(O.jsx)(u.b,{className:p.a.body,uuid:"spa.deposits.creation.modal.cancel.description"}),Object(O.jsx)(s.Separator,{className:p.a.separator}),h()]}):Object(O.jsxs)(d.a,{className:p.a.modalCancel,id:"cancel-deposit",initialFocusElementId:x,open:a,title:A(),onClose:P,children:[Object(O.jsx)(d.a.Body,{children:Object(O.jsx)(u.b,{uuid:"spa.deposits.creation.modal.cancel.description"})}),Object(O.jsx)(d.a.Footer,{children:h()})]});function A(){return T?"spa.deposits.transaction.cancel.modal.title":"spa.deposits.creation.modal.cancel.title"}function h(){var e=M||f?p.a.bottomSheetFooter:p.a.modalFooter;return Object(O.jsxs)(s.Box,{align:"end",className:e,children:[Object(O.jsx)(r.a,{inline:!0,label:{uuid:"spa.global.yes"},type:"button",variant:"outlined",onClick:S}),Object(O.jsx)(r.a,{inline:!0,"data-focus-id":x,label:{uuid:"spa.global.no"},type:"button",onClick:P})]})}function S(){j(!1),E(i.a.clean()),_(v),E(o.a.set({kind:"SUCCESS",text:{uuid:T?"spa.deposits.transaction.cancel.toast.title":"spa.deposits.creation.request.canceled"},duration:l.v})),m&&m()}function P(){j(!a)}}T.defaultProps=m},435:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",modalCancel:"_rules_modalCancel__3p7fv",modalFooter:"_rules_modalFooter__diCuH",modalTermsAndConditions:"_rules_modalTermsAndConditions__1DLcO",modalBody:"_rules_modalBody__2xIYg",bottomSheetTermsAndConditions:"_rules_bottomSheetTermsAndConditions__2I7bt",title:"_rules_title__2HlRB",bottomSheetBody:"_rules_bottomSheetBody__TaT3s",bottomSheetFooter:"_rules_bottomSheetFooter__2HYeG",bottomSheetCancel:"_rules_bottomSheetCancel__1fOYL",body:"_rules_body__3yiYt",separator:"_rules_separator__3vejd"}},459:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",ticket:"_rules_ticket__smSVR",content:"_rules_content__28rEq",signature:"_rules_signature__3fPrk",value:"_rules_value__OkMMX",precancelMessage:"_rules_precancelMessage__1RTYY"}},523:function(e,t,a){"use strict";a.d(t,"a",(function(){return E}));var s=a(2),n=a(16),i=a(19),c=a(11),o=a(41),l=a(6),r=a(38),d=a(525),u=a.n(d),b=a(526),j=a.n(b),p=a(10),O=["a11yMessage","className"],m=j.a.NAME_ACCESSIBLE_LOADER_STATUS,T=j.a.TYPE_ACCESSIBLE_LOADER_STATUS;function E(e){var t=e,a=t.a11yMessage,d=t.className,b=Object(i.a)(t,O),j=Object(o.c)(d,u.a.fetchedIndicator),E=c.b.useState(!1),_=Object(n.a)(E,2),v=_[0],x=_[1];return c.b.useEffect((function(){var e=setTimeout((function(){x(!0)}),l.y);return function(){return clearTimeout(e)}}),[]),v?null:Object(p.jsx)(o.a,Object(s.a)(Object(s.a)({},b),{},{className:j,name:m,type:T,children:Object(p.jsx)(r.b,{"aria-live":"polite",role:"status",tag:"span",uuid:a})}))}E.defaultProps={a11yMessage:"spa.a11y.loaded"}},525:function(e,t,a){e.exports={NAME_ACCESSIBLE_LOADER_STATUS:"AccessibleLoaderStatus",TYPE_ACCESSIBLE_LOADER_STATUS:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",fetchedIndicator:"_rules_fetchedIndicator__2_ji8"}},526:function(e,t,a){e.exports={NAME_ACCESSIBLE_LOADER_STATUS:"AccessibleLoaderStatus",TYPE_ACCESSIBLE_LOADER_STATUS:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=81.7439aafa.chunk.js.map