(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[171,281],{332:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return A}));var a=n(2),i=n(16),r=n(50),o=n(38),s=n(11),u=n(82),c=n(151),l=n(519),m=n(8),_=n(6),b=n(571),d=n(488),O=n(39),p=n(187),f=n(33),j=n(434),T=n.n(j),E=n(10);function A(){var e=Object(m.b)(),t=Object(m.c)(c.c.minAmount)||_.Sb,n=Object(m.c)(c.c.maxAmount)||_.Sb,j=Object(m.c)(c.c.offer),A=Object(m.c)(f.e.token),h=Object(m.c)(c.c.selectedContract),M=Object(o.c)().textGet,C=M({uuid:"spa.generic.field.error.required"}),F=s.b.useState(_.Sb),N=Object(i.a)(F,2),x=N[0],g=N[1],P=M({uuid:"spa.loan.simulate.step2.loan.min.amount.error",replace:"".concat(Object(l.a)(t,{minimumFractionDigits:_.Jb}))}),S=M({uuid:"spa.loan.simulate.step2.loan.max.amount.error",replace:"".concat(Object(l.a)(n,{minimumFractionDigits:_.Jb}))}),R=O.e.object({amount:Object(O.c)((function(e){return String(e)?Object(p.i)(O.e.string(),t,n,P,S):Object(p.d)(O.e.string(),C)}))});return s.b.useLayoutEffect((function(){g(n)}),[n]),Object(E.jsx)(r.Card,{className:T.a.cardAmount,children:Object(E.jsxs)(d.a,{schema:R,onSubmit:function(){if(!A||!h||!j)return;e(c.a.setLoanAmount(x)),e(c.b.searchLoanTerms(Object(a.a)({token:A,contractId:h.contractId,loanAmount:x},j)))},children:[Object(E.jsx)(o.b,{className:T.a.title,tag:"h1",uuid:"spa.loan.simulate.step2.title"}),Object(E.jsxs)("div",{className:T.a.oversizedAmountContainer,children:[Object(E.jsx)(b.a,{currency:_.b,decimalScale:_.Jb,defaultValue:x,label:M({uuid:"spa.loan.simulate.step2.title"}),name:"amount",onValueChange:function(e){if(null===e||void 0===e||!e.floatValue)return;var t=e.floatValue;g(t)}}),Object(E.jsxs)("div",{className:T.a.chipContainer,children:[Object(E.jsx)(r.Chip,{active:x===t,variant:"light",onClick:function(e){e.preventDefault(),g(t)},children:Object(E.jsx)(o.b,{replace:Object(l.a)(t,{minimumFractionDigits:_.Jb}),uuid:"spa.loan.simulate.amount.min"})}),Object(E.jsx)(r.Chip,{active:x===n,variant:"light",onClick:function(e){e.preventDefault(),g(n)},children:Object(E.jsx)(o.b,{replace:Object(l.a)(n,{minimumFractionDigits:_.Jb}),uuid:"spa.loan.simulate.amount.max"})})]})]}),Object(E.jsx)("div",{children:Object(E.jsx)(u.a,{className:T.a.submitButton,label:{uuid:"spa.form.continue"},type:"submit"})})]})})}},434:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_FORM:"Form",TYPE_FORM:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",internalContainer:"_rules_internalContainer__1m9L6",title:"_rules_title__3C-Al",optionTitle:"_rules_optionTitle__2Q8DY",optionBold:"_rules_optionBold__1kdVS",subtitle:"_rules_subtitle__3veU1",list:"_rules_list___buYN",cardAmount:"_rules_cardAmount__2-LWf",oversizedAmountContainer:"_rules_oversizedAmountContainer__2hIb2",chipContainer:"_rules_chipContainer__2GN0s",submitButton:"_rules_submitButton__1E6Vq",optionTerm:"_rules_optionTerm__1xcNp",step4Title:"_rules_step4Title__-aL_f",step4Subtitle:"_rules_step4Subtitle__3cAzP",step4SubtitleAmount:"_rules_step4SubtitleAmount__3n5qW",staticAlertContainer:"_rules_staticAlertContainer__25zco",step4Container:"_rules_step4Container__2WGO5",step4DetailsContainer:"_rules_step4DetailsContainer__3rbTi",step4AmountLoan:"_rules_step4AmountLoan__2HIxM",step4FinanceAmount:"_rules_step4FinanceAmount__26sXm",buttonContainer:"_rules_buttonContainer__10QzD",termsAndConditions:"_rules_termsAndConditions__4A6QU",step5Container:"_rules_step5Container__2mVf2",step5AmountLoan:"_rules_step5AmountLoan__1QlRH",step5FinanceAmount:"_rules_step5FinanceAmount__1I9JH",step5DetailsContainer:"_rules_step5DetailsContainer__2FUPO",step5TagContainer:"_rules_step5TagContainer__owxD2",stepOTPContainer:"_rules_stepOTPContainer__2iXZo"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return T}));var a=n(2),i=n(16),r=n(19),o=n(11),s=n(502),u=n(505),c=n(41),l=n(6),m=n(79),_=n(8),b=n(493),d=n.n(b),O=n(10),p=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],f=d.a.NAME_FORM,j=d.a.TYPE_FORM;function T(e){var t=e,n=t.ariaLabel,b=t.ariaLabelledby,d=t.schema,T=t.onSubmit,E=t.children,A=t.warnings,h=t.isRequiredToast,M=t.isResetForm,C=Object(r.a)(t,p),F=Object(_.b)(),N=Object(s.e)({resolver:Object(u.a)(d)}),x=N.handleSubmit,g=N.setError,P=N.formState.errors,S=N.reset,R=Object.keys(P),v=o.b.useState(!1),D=Object(i.a)(v,2),L=D[0],y=D[1],U=o.b.useCallback((function(){h&&L&&F(m.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:l.w})),y(!1)}),[F,h,L]),V=o.b.useCallback((function(){S()}),[S]);return o.b.useEffect((function(){A&&Object.keys(A.data).map((function(e){var t=e.startsWith(l.Nb)?e.slice(l.fb):e;return g(t,{message:A.data[e]},{shouldFocus:!1}),null})),R.length>l.Sb&&U(),M&&V()}),[R.length,M,V,g,U,A]),Object(O.jsx)(s.b,Object(a.a)(Object(a.a)(Object(a.a)({},N),C),{},{children:Object(O.jsx)(c.a,{noValidate:!0,"aria-label":n,"aria-labelledby":b,name:f,tag:"form",type:j,onSubmit:x(T,(function(){return y(!L)})),children:E})}))}T.useContext=s.f,T.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},519:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var a=n(2),i=n(6),r={locales:i.X.ES_AR,currencySymbol:i.b,minimumFractionDigits:i.Sb,maximumFractionDigits:i.Jb,suffix:i.D};function o(e,t){var n=Object(a.a)(Object(a.a)({},r),t),o=n.locales,s=n.currencySymbol,u=n.minimumFractionDigits,c=n.maximumFractionDigits,l=n.options,m=n.suffix,_=Object(a.a)({minimumFractionDigits:u,maximumFractionDigits:c},l),b=new Intl.NumberFormat(o,_);return(e||e===i.Sb)&&b?"".concat(s,"\xa0").concat(b.format(e)).concat(m):i.D}},571:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var a=n(2),i=n(19),r=n(11),o=n(50),s=n(41),u=n(488),c=n(572),l=n.n(c),m=n(10),_=["id","name","methods","defaultValue","onChange"],b=l.a.NAME_INPUT_AMOUNT,d=l.a.TYPE_INPUT_AMOUNT,O={id:b},p=r.b.memo((function(e){var t,n=e.id,u=e.name,c=e.methods,l=e.defaultValue,O=e.onChange,p=Object(i.a)(e,_),f=c.register,j=c.formState,T=c.setValue,E=c.clearErrors,A=j.errors,h="".concat(u),M=A[u];return r.b.useEffect((function(){l&&T(h,l,{shouldValidate:!0}),l||T(h,void 0)}),[l,h,T]),Object(m.jsx)(s.a,{name:b,type:d,children:Object(m.jsx)(o.OversizedAmountField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({id:n||u},l&&{defaultValue:l}),M&&{error:null===(t=M.message)||void 0===t?void 0:t.toString()}),f(h,{onChange:function(e){O&&O(e);E([h])}})),p))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function f(e){var t=u.a.useContext();return Object(m.jsx)(p,Object(a.a)({methods:t},e))}f.displayName=b,f.defaultProps=O},572:function(e,t,n){e.exports={NAME_INPUT_AMOUNT:"InputAmount",TYPE_INPUT_AMOUNT:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=171.dc9a3549.chunk.js.map