(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[93],{206:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return N}));var n=a(9),c=a(2),r=a(0),i=a(5),s=a(16),o=a(11),l=a(586),u=a(8),d=a(6),b=a(117),E=a(156),_=a(33),O=a(518),M=a(38),T=a(51),f=a(641),j=a(645),m=a(10);function N(){var e=Object(T.rb)().id,t=void 0===e?"":e,a=Object(T.qb)(),N=Object(u.b)(),A=Object(M.c)().textGet,p=o.b.useState(),P=Object(s.a)(p,2),h=P[0],x=P[1],R=o.b.useState(d.D),v=Object(s.a)(R,2),L=v[0],C=v[1],k=o.b.useState([]),S=Object(s.a)(k,2),F=S[0],g=S[1],H=A({uuid:"spa.modo.pay.qr.scan.title"}),D=Object(u.c)(_.e.token),Y=Object(u.c)(b.c.validateUser),I=Object(u.c)(b.c.hasFinishedModoOnboarding),U=Object(T.sb)(T.s),B=Object(T.sb)(T.nb),y=Object(T.sb)(T.C),X=o.b.useCallback(Object(i.a)(Object(r.a)().mark((function e(){var t;return Object(r.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(D){e.next=2;break}return e.abrupt("return");case 2:if(Y){e.next=5;break}return N(b.b.validateUser({token:D})),e.abrupt("return");case 5:if(I||!Y){e.next=8;break}return a(y),e.abrupt("return");case 8:return N(E.a.clean()),e.next=11,Object(l.a)(H);case 11:if((t=e.sent)&&t.value){e.next=14;break}return e.abrupt("return");case 14:N(E.a.qrCode(t.value)),a(B);case 16:case"end":return e.stop()}}),e)}))),[N,I,a,B,H,D,y,Y]),w=o.b.useCallback((function(e){if("modo.pay"===e)return X}),[X]);o.b.useEffect((function(){var e=j.b.find((function(e){return e.id===t}));x(e)}),[t]);var q=o.b.useCallback((function(e,t){return null===t||void 0===t?void 0:t.reduce((function(t,a){return Object(c.a)(Object(c.a)(Object(c.a)({},t),e.id===a.id&&Object(n.a)({},a.id,a.legacy)),a.sections&&q(e,a.sections))}),{})}),[]);return o.b.useEffect((function(){if(h){var e=(h.sections||[]).map((function e(t){var a=q(t,null===h||void 0===h?void 0:h.sections);return Object(c.a)(Object(c.a)(Object(c.a)({},t),a&&a[t.id]&&(void 0===t.legacy||t.hasLegacy)&&{url:Object(O.a)(U,a[t.id])}),{},{callback:w(t.id),sections:(t.sections||[]).map(e)})}));t!==L&&(C(t),e!==F&&g(e))}}),[w,t,h,L,F,q,U]),Object(m.jsx)(f.a,{item:h,sections:F})}},597:function(e,t,a){e.exports={NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_CARD:"Card",NAME_LATERAL_MENU:"CardLateralMenu",TYPE_LATERAL_MENU:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_MODAL:"Modal",TYPE_MODAL:"Element",disabled:"_rules_disabled__ZPdNp",clickable:"_rules_clickable__3XF1m",mainTitle:"_rules_mainTitle__SZuES",info:"_rules_info__4dq3Q",closeButton:"_rules_closeButton__2SFOS",main_title:"_rules_main_title__2gLoQ"}},628:function(e,t,a){e.exports={NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_CARD:"Card",NAME_LATERAL_MENU:"CardLateralMenu",TYPE_LATERAL_MENU:"Element"}},629:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",landingSection:"_rules_landingSection__3MG8h",title:"_rules_title__2IOX4",subtitle:"_rules_subtitle__P7LwF",cards:"_rules_cards__8dN7Q",card:"_rules_card__-OnhU",fooContainer:"_rules_fooContainer__20HY4",footerTitle:"_rules_footerTitle__MpD2-",footerDescription:"_rules_footerDescription__pRimw"}},641:function(e,t,a){"use strict";a.d(t,"a",(function(){return F}));var n=a(16),c=a(11),r=a(6),i=a(38),s=a(2),o=a(19),l=a(50),u=a(41),d=a(33),b=a(79),E=a(513),_=a(82),O=a(556),M=a.n(O),T=a(628),f=a.n(T),j=a(490),m=a(597),N=a.n(m),A=a(10),p=["modal.info.report-credit-card.firstItem","modal.info.report-credit-card.secondItem","modal.info.report-credit-card.thirdItem"];function P(e){var t=e,a=t.isModalOpen,n=t.handleModal;return Object(A.jsxs)(j.a,{closeOnBgTap:!0,hasCloseIcon:!1,open:a,title:"spa.report-credit-card.modal.title",onClose:n,children:[Object(A.jsx)(j.a.Body,{children:p.map((function(e){return Object(A.jsx)(i.b,{className:N.a.info,uuid:e},e)}))}),Object(A.jsx)("div",{className:N.a.closeButton,children:Object(A.jsx)(_.a,{label:{uuid:"spa.report-credit-card.modal.buttonText"},size:"small",variant:"text",onClick:n})})]})}var h=["className","textHeader","href","isModal","isClickable","callback","id"],x=(M.a.NAME_CARD,f.a.NAME_LATERAL_MENU),R=f.a.TYPE_LATERAL_MENU;function v(e){var t=Object(i.c)().textGet,a=e,r=a.className,O=a.textHeader,M=a.href,T=a.isModal,f=a.isClickable,j=a.callback,m=a.id,p=Object(o.a)(a,h),v=c.b.useRef(null),L=Boolean(j),C=Object(d.h)(m),k=Object(d.f)(m),S=j||function(){return I(!0)},F=Object(u.c)(!y()&&N.a.disabled),g=Object(b.d)().showErrorToast,H=c.b.useState(!1),D=Object(n.a)(H,2),Y=D[0],I=D[1],U=t({uuid:O});return y()?Object(A.jsx)(u.a,{className:F,name:x,type:R,children:function(){if(L||T)return Object(A.jsxs)(c.b.Fragment,{children:[Object(A.jsx)(_.a,{flowId:m,kind:"plain",label:{uuid:O},onClick:S,children:B()}),T&&Object(A.jsx)(P,{handleModal:w,isModalOpen:Y})]});return Object(A.jsx)(E.a,{preventNavigateCallback:X,to:M,children:B()})}()}):null;function B(){return Object(A.jsxs)(l.Card,Object(s.a)(Object(s.a)({className:Object(u.c)(r,f&&N.a.clickable)},p),{},{children:[Object(A.jsx)("header",{children:Object(A.jsx)(i.b,{className:N.a.mainTitle,tag:"span",uuid:O})}),Object(A.jsx)("footer",{ref:v,children:Object(A.jsx)(l.Icon,{name:"right",size:"small"})})]}))}function y(){return!!T||k}function X(){return C||g("spa.feature.error.permission",U),C}function w(){return I(!1)}}v.defaultProps={isClickable:!1,isModal:!1},v.displayName=x;var L=a(51),C=a(497),k=a(629),S=a.n(k);function F(e){var t=e,a=t.item,s=t.sections,o=Object(L.sb)(L.n),l=Object(L.qb)(),u=Object(L.rb)().id,d=void 0===u?"":u,b=c.b.useState(!1),E=Object(n.a)(b,2),_=E[0],O=E[1],M=c.b.useState(r.D),T=Object(n.a)(M,2),f=T[0],j=T[1];return c.b.useLayoutEffect((function(){a&&a.sections&&(O(!1),a.sections.map((function(e){return e.sections&&O(!0),e})),j("menu.products.title.".concat(d)))}),[a,d,O]),Object(A.jsxs)(C.a,{withFooter:!0,withoutBox:!0,className:S.a.landingSection,"header-onBack":function(){l(o)},children:[_?s.map((function(e){return Object(A.jsxs)("div",{children:[Object(A.jsx)(i.b,{className:S.a.title,tag:"h4",uuid:e.name}),e.description&&Object(A.jsx)(i.b,{className:S.a.subtitle,tag:"h6",uuid:e.description}),Object(A.jsx)("div",{className:S.a.cards,children:(e.sections||[]).map((function(e){return Object(A.jsx)(v,{isClickable:!0,callback:e.callback,className:S.a.card,href:e.url,id:m(e),isModal:e.modal,textHeader:e.name},e.id)}))})]},e.id)})):Object(A.jsxs)(c.b.Fragment,{children:[Object(A.jsx)(i.b,{className:S.a.title,tag:"h4",uuid:f}),Object(A.jsx)("div",{className:S.a.cards,children:s.map((function(e){return Object(A.jsx)(v,{isClickable:!0,className:S.a.card,href:e.url,id:m(e),textHeader:e.name},e.id)}))})]}),function(){var e=[];if(a&&a.footerInfo)for(var t=r.Sb;t<(null===(n=a.footerInfo)||void 0===n?void 0:n.quantity);t++){var n;e.push(Object(A.jsxs)("div",{className:S.a.fooContainer,children:[Object(A.jsx)(i.b,{className:S.a.footerTitle,uuid:"".concat(a.footerInfo.title,".").concat(t)}),Object(A.jsx)(i.b,{className:S.a.footerDescription,uuid:"".concat(a.footerInfo.description,".").concat(t)})]},"footer_".concat(t)))}return e.map((function(e){return e}))}()]});function m(e){return e.legacy&&!e.legacy.includes("http")?e.legacy:e.id}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=93.f6329c82.chunk.js.map