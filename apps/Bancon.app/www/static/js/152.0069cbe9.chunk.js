(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[152,199,311],{355:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return j}));var a=n(0),r=n(5),o=n(11),i=n(39),s=n(8),l=n(149),u=n(79),_=n(187),c=n(488),E=n(489),m=n(38),b=n(82),d=n(512),T=n(50),N=n(6),h=n(147),O=n(428),P=n.n(O),p=n(10);function j(){var e=Object(m.c)().textGet,t=Object(s.b)(),n=Object(s.c)(l.c.fetching),O=Object(s.c)(l.c.warning),j=Object(s.c)(l.c.hasSetValidationCodeEmail),A=Object(s.c)(h.c.exchangeToken),M=e({uuid:"spa.generic.field.error.required"}),f=e({uuid:"spa.onboarding.step4.area.label"}),g=e({uuid:"spa.onboarding.step4.area.helper"}),C=e({uuid:"spa.onboarding.step4.phone.label"}),R=e({uuid:"spa.onboarding.step4.phone.helper"}),x="#".repeat(N.M),L="#".repeat(N.A),I=i.e.object({mobilePhoneCodeArea:Object(_.d)(i.e.string(),M),mobilePhoneNumber:Object(_.d)(i.e.string(),M)}),S=o.b.useCallback((function(){t(u.a.set({kind:"SUCCESS",text:{uuid:"spa.onboarding.step4.success"},duration:N.v}))}),[t]);return o.b.useEffect((function(){j&&S()}),[j,S]),Object(p.jsx)(E.a,{"header-onBack":function(){t(l.a.cleanValidationCodeEmail())},"header-title":"spa.onboarding.step4.title",children:Object(p.jsx)("section",{children:Object(p.jsxs)(c.a,{schema:I,warnings:O,onSubmit:function(e){return U.apply(this,arguments)},children:[Object(p.jsx)(m.b,{className:P.a.validateTitle,uuid:"spa.onboarding.step4.text1"}),Object(p.jsxs)("div",{className:P.a.inputContainerPhone,children:[Object(p.jsx)(d.a,{allowLeadingZeros:!0,format:x,helper:g,id:"mobilePhoneCodeArea",label:f,name:"mobilePhoneCodeArea",start:Object(p.jsx)(T.Icon,{name:"message",size:"small",stroke:"gray-600"}),valueAsNumber:!1,onChange:v}),Object(p.jsx)(d.a,{allowLeadingZeros:!0,format:L,helper:R,id:"mobilePhoneNumber",label:C,name:"mobilePhoneNumber",start:Object(p.jsx)(T.Icon,{name:"message",size:"small",stroke:"gray-600"}),valueAsNumber:!1,onChange:v})]}),Object(p.jsx)(b.a,{label:{uuid:"spa.form.continue"},loading:n,type:"submit"})]})})});function v(){t(l.a.cleanWarnings())}function U(){return(U=Object(r.a)(Object(a.a)().mark((function e(n){var r,o,i,s;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n.mobilePhoneCodeArea,o=n.mobilePhoneNumber,i=r.toString().trim(),s=o.toString().trim(),e.next=5,t(l.b.sendPhone({exchangeToken:A,mobilePhoneCodeArea:i,mobilePhoneNumber:s}));case 5:t(l.a.setPhone({phoneCodeArea:i,phoneNumber:s}));case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},428:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",presentation:"_rules_presentation__2rnDT",image:"_rules_image__2dV7m",containerText:"_rules_containerText__pu48C",title:"_rules_title__3WK5D",text:"_rules_text__3khoq",nextButton:"_rules_nextButton__3nv4A",skipButton:"_rules_skipButton__6WOgG",finishButton:"_rules_finishButton__VsgGK",subtitle:"_rules_subtitle__bTvVh",inputSelectContainer:"_rules_inputSelectContainer__2j7Df",submitButton:"_rules_submitButton__3FaKR",alert:"_rules_alert__laL5T",alertLottie:"_rules_alertLottie__2sgW7",termsAndConditions:"_rules_termsAndConditions__cNiMg",validateTitle:"_rules_validateTitle__2Nx1p",emailValue:"_rules_emailValue__yLDPW",noteEmail:"_rules_noteEmail__4AmC9",subtitleEmail:"_rules_subtitleEmail__2J0wM",inputContainerEmail:"_rules_inputContainerEmail__2O1ou",resendCode:"_rules_resendCode__lH6Jj",inputContainerPhone:"_rules_inputContainerPhone__1gKy1",securitySealContainer:"_rules_securitySealContainer__1LU5g",onboardingWelcome:"_rules_onboardingWelcome__ijVs1",downloadPrincipal:"_rules_downloadPrincipal__2thE8",logosContainer:"_rules_logosContainer__2uaXe"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),r=n(16),o=n(19),i=n(11),s=n(502),l=n(505),u=n(41),_=n(6),c=n(79),E=n(8),m=n(493),b=n.n(m),d=n(10),T=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],N=b.a.NAME_FORM,h=b.a.TYPE_FORM;function O(e){var t=e,n=t.ariaLabel,m=t.ariaLabelledby,b=t.schema,O=t.onSubmit,P=t.children,p=t.warnings,j=t.isRequiredToast,A=t.isResetForm,M=Object(o.a)(t,T),f=Object(E.b)(),g=Object(s.e)({resolver:Object(l.a)(b)}),C=g.handleSubmit,R=g.setError,x=g.formState.errors,L=g.reset,I=Object.keys(x),S=i.b.useState(!1),v=Object(r.a)(S,2),U=v[0],B=v[1],F=i.b.useCallback((function(){j&&U&&f(c.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:_.w})),B(!1)}),[f,j,U]),y=i.b.useCallback((function(){L()}),[L]);return i.b.useEffect((function(){p&&Object.keys(p.data).map((function(e){var t=e.startsWith(_.Nb)?e.slice(_.fb):e;return R(t,{message:p.data[e]},{shouldFocus:!1}),null})),I.length>_.Sb&&F(),A&&y()}),[I.length,A,y,R,F,p]),Object(d.jsx)(s.b,Object(a.a)(Object(a.a)(Object(a.a)({},g),M),{},{children:Object(d.jsx)(u.a,{noValidate:!0,"aria-label":n,"aria-labelledby":m,name:N,tag:"form",type:h,onSubmit:C(O,(function(){return B(!U)})),children:P})}))}O.useContext=s.f,O.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return N}));var a=n(2),r=n(19),o=(n(11),n(41)),i=n(136),s=n(82),l=n(38),u=n(101),_=n(491),c=n.n(_),E={name:c.a.NAME_EXTERNAL_CONTAINER,type:c.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},m=n(492),b=n.n(m),d=n(10),T=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function N(e){var t=e,n=t["header-onBack"],_=t["header-title"],c=t.children,E=t.name,m=t.type,N=t.headerClassName,h=t.showLogo,O=Object(r.a)(t,T),P=Boolean(n||_),p=Object(o.c)(!_&&b.a.onlyRow,N),j=Object(o.c)(h&&b.a.step1Logo),A=Object(o.c)(h&&b.a.hasLogo);return Object(d.jsxs)(u.a,{children:[h&&Object(d.jsx)("div",{className:j,children:Object(d.jsx)(i.a,{alt:"logo",uuid:"logo150Login"})}),Object(d.jsx)(o.a,Object(a.a)(Object(a.a)({name:E,tag:"article",type:m},O),{},{children:Object(d.jsxs)("article",{className:A,children:[P&&Object(d.jsxs)("header",{className:p,children:[n&&Object(d.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),_&&Object(d.jsx)(l.b,{tag:"h5",uuid:_})]}),c]})}))]})}N.defaultProps=E},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},512:function(e,t,n){"use strict";n.d(t,"a",(function(){return N}));var a=n(2),r=n(19),o=n(11),i=n(50),s=n(41),l=n(488),u=n(514),_=n.n(u),c=n(10),E=["id","name","methods","defaultValue","onChange","valueAsNumber"],m=_.a.NAME_INPUT_NUMBER,b=_.a.TYPE_INPUT_NUMBER,d={id:m,valueAsNumber:!0},T=o.b.memo((function(e){var t,n=e.id,l=e.name,u=e.methods,_=e.defaultValue,d=e.onChange,T=e.valueAsNumber,N=Object(r.a)(e,E),h=u.register,O=u.formState,P=u.getValues,p=u.setValue,j=u.clearErrors,A=O.errors,M="".concat(l),f=P()[M],g=A[l];return o.b.useEffect((function(){_&&p(M,_,{shouldValidate:!0}),_||p(M,void 0)}),[_,M,p]),Object(c.jsx)(s.a,{name:m,type:b,children:Object(c.jsx)(i.NumberField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({},_&&{defaultValue:_}),{},{id:n||l},g&&{error:null===(t=g.message)||void 0===t?void 0:t.toString()}),h(M,{onChange:function(e){d&&d(e);j([M])},valueAsNumber:T})),{},{value:f},N))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function N(e){var t=l.a.useContext();return Object(c.jsx)(T,Object(a.a)({methods:t},e))}N.displayName=m,N.defaultProps=d},514:function(e,t,n){e.exports={NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=152.0069cbe9.chunk.js.map