(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[203,280],{387:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return m}));var n=a(30),c=a(16),r=a(11),s=a(669),o=a(8),i=a(89),b=a(270),u=a(6),E=a(51),d=a(497),O=a(518),f=a(464),T=a.n(f),l=a(10);function m(){var e=r.b.createRef(),t=Object(E.qb)(),a=Object(E.ub)(),f=Object(c.a)(a,1)[0],m=r.b.useState(),j=Object(c.a)(m,2),M=j[0],_=j[1],p=Object(E.rb)().id,A=void 0===p?u.D:p,N=Object(o.c)(i.e.legacyFeatures),R=Object(E.sb)(E.n),k=Object(E.sb)(E.T),P=Object(E.sb)(E.X),h=Object(E.sb)(E.kb),S=Object(E.sb)(E.r),g=Object(i.f)(A),w=r.b.useState(!0),v=Object(c.a)(w,2),y=v[0],L=v[1],C=r.b.useCallback((function(){if(!e||!e.current)return;e.current.style.display=y?"none":"block"}),[y,e]),F=u.yb.SOFT_TOKEN;return r.b.useEffect((function(){if(N[A]){var e,a,c=["https://pdq4.bancor.com.ar/frontendqa4",f?(e=N[A].url,a=Object.fromEntries(Object(n.a)(f)),Object.keys(a).reduce((function(e,t){return e.split("{".concat(t,"}")).join(a[t])}),e)):N[A].url].join("/"),r=c.indexOf("?")>=u.Sb?"&":"?",s="".concat(c+r,"consumer=").concat(window.location.origin.toString());_(s)}else t(R)}),[A,N,t,f,R,g]),r.b.useEffect((function(){return window.addEventListener("message",H),function(){window.removeEventListener("message",H)}}),[e]),r.b.useEffect((function(){e&&(e.current&&e.current.addEventListener("load",I))}),[e]),Object(s.a)({target:window,handler:C}),Object(l.jsxs)(d.a,{withoutBox:!0,className:T.a.legacy,"header-onBack":function(){t(u.c)},children:[y?Object(l.jsx)(b.a,{}):null,Object(l.jsx)("iframe",{ref:e,id:"SPA_IFRAME",src:M,width:"100%"})]});function I(){L(!1)}function H(a){if(e&&e.current){var n=e.current;if(a.source===n.contentWindow&&a.data&&a.data.redirection)switch(a.data.redirection){case"Home":t(R);break;case"HomeToast":t(R,{state:{messageToast:a.data.messageToast,messageToastType:a.data.messageToastType}});break;case"SecurityRecommendations":t(h.replace(E.c,F));break;case"Cards":t(Object(O.a)(S,"cards"));break;case"Checkbook":t(Object(O.a)(S,"checkbook"));break;case"Investments":t(Object(O.a)(S,"investments"));break;case"paymentSuppliersAdhere":t(k);break;case"paymentSuppliersGenerate":t(P)}}}}},464:function(e,t,a){e.exports={NAME_BASEINTERNAL_CONTAINER:"BaseInternalContainer",TYPE_BASEINTERNAL_CONTAINER:"Container",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",legacy:"_rules_legacy__2ZM07"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=203.092d9380.chunk.js.map