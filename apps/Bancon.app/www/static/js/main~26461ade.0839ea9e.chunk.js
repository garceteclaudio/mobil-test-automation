(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[227],{157:function(e,r,t){"use strict";t.d(r,"c",(function(){return j})),t.d(r,"b",(function(){return l})),t.d(r,"a",(function(){return f})),t.d(r,"d",(function(){return v}));var n=t(9),i="credential",c={accessToken:void 0,credential:void 0,error:void 0,fetching:!1,idCredentialGroup:void 0,warning:void 0,isResetCredential:void 0,isOtpRequiredError:!1,isOtpLengthError:!1,isOtpFormTokenVisible:!1},a=t(2),u=t(12),o=t(1),d=t(135),f=Object(o.b)(i,["clean","setIsResetCredential","setOtpRequiredError","setOtpLengthError","setOtpFormTokenVisible"]),s=t(0),b=t(5),l=Object(o.c)(i,{getCredential:function(e,r){return Object(b.a)(Object(s.a)().mark((function t(){var n,i;return Object(s.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=r.rejectWithValue,t.next=3,Object(d.b)(Object(a.a)({},e));case 3:if(i=t.sent){t.next=6;break}return t.abrupt("return",null);case 6:if(!Object(d.c)(i)){t.next=8;break}return t.abrupt("return",n(Object(a.a)(Object(a.a)({},i),d.a[i.code])));case 8:return t.abrupt("return",i);case 9:case"end":return t.stop()}}),t)})))()}}),p=t(3),O=Object(o.d)(c,(function(e){var r=e.addCase,t=e.addMatcher;r(f.clean,(function(){return Object(a.a)({},c)})),r(l.getCredential.fulfilled,(function(e,r){var t=r.payload;if(e.fetching=!1,e.error=c.error,t){var n=t.data,i=n.idCredentialGroup,a=n.accessToken,u=n.credential;e.idCredentialGroup=i,e.accessToken=a,e.credential=u}})),r(f.setIsResetCredential,(function(e,r){var t=r.payload;e.isResetCredential=t})),r(f.setOtpRequiredError,(function(e,r){var t=r.payload;e.isOtpRequiredError=t})),r(f.setOtpLengthError,(function(e,r){var t=r.payload;e.isOtpLengthError=t})),r(f.setOtpFormTokenVisible,(function(e,r){var t=r.payload;e.isOtpFormTokenVisible=t})),t((function(e){return Object(u.b)(e,i)}),(function(e){e.fetching=!0,e.error=c.error,e.warning=c.warning})),t((function(e){return Object(u.c)(e,i)}),(function(e,r){var t=r.payload;e.fetching=!1,Object(p.x)(d.a,t.code)?e.warning=t:e.error=t}))}));function j(e){return e[i]}j.accessToken=Object(o.e)(j,(function(e){return e.accessToken})),j.credential=Object(o.e)(j,(function(e){return e.credential})),j.error=Object(o.e)(j,(function(e){return e.error})),j.fetching=Object(o.e)(j,(function(e){return e.fetching})),j.idCredentialGroup=Object(o.e)(j,(function(e){return e.idCredentialGroup})),j.warning=Object(o.e)(j,(function(e){return e.warning})),j.isResetCredential=Object(o.e)(j,(function(e){return e.isResetCredential})),j.isOtpRequiredError=Object(o.e)(j,(function(e){return e.isOtpRequiredError})),j.isOtpLengthError=Object(o.e)(j,(function(e){return e.isOtpLengthError})),j.isOtpFormTokenVisible=Object(o.e)(j,(function(e){return e.isOtpFormTokenVisible}));var v=Object(n.a)({},i,O)},164:function(e,r,t){"use strict";t.d(r,"c",(function(){return j})),t.d(r,"b",(function(){return l})),t.d(r,"a",(function(){return f})),t.d(r,"d",(function(){return v}));var n=t(9),i="campaigns",c={fetching:!1,fetched:!1,campaigns:[],error:void 0,warning:void 0,isRetryEnabled:!1},a=t(2),u=t(12),o=t(1),d=t(133),f=Object(o.b)(i,["clean","setIsRetryEnabled"]),s=t(0),b=t(5),l=Object(o.c)(i,{listCampaignsForWidget:function(e,r){return Object(b.a)(Object(s.a)().mark((function t(){var n,i,c;return Object(s.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=r.rejectWithValue,i=e.token,t.next=4,Object(d.c)({token:i});case 4:if(c=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(!Object(d.d)(c)){t.next=9;break}return t.abrupt("return",n(Object(a.a)(Object(a.a)({},c),d.a[c.code])));case 9:return t.abrupt("return",c);case 10:case"end":return t.stop()}}),t)})))()}}),p=t(3),O=Object(o.d)(c,(function(e){var r=e.addCase,t=e.addMatcher;r(f.clean,(function(){return Object(a.a)({},c)})),r(f.setIsRetryEnabled,(function(e,r){var t=r.payload;e.isRetryEnabled=t})),r(l.listCampaignsForWidget.fulfilled,(function(e,r){var t=r.payload;if(e.fetching=!1,e.error=c.error,e.warning=c.warning,t){var n=t.data.campaigns;e.campaigns=n,e.fetched=!0}})),t((function(e){return Object(u.b)(e,i)}),(function(e){e.fetching=!0,e.fetched=!1,e.error=c.error,e.warning=c.warning})),t((function(e){return Object(u.c)(e,i)}),(function(e,r){var t=r.payload;e.fetched=!0,e.fetching=!1,e.error=t,e.isRetryEnabled=Object(p.u)(d.b,t.code)}))}));function j(e){return e[i]}j.fetched=Object(o.e)(j,(function(e){return e.fetched})),j.fetching=Object(o.e)(j,(function(e){return e.fetching})),j.error=Object(o.e)(j,(function(e){return e.error})),j.warning=Object(o.e)(j,(function(e){return e.warning})),j.campaigns=Object(o.e)(j,(function(e){return e.campaigns})),j.businessError=Object(o.e)(j,(function(e){var r;return"WARNING"===(null===(r=e.error)||void 0===r?void 0:r.type)})),j.systemError=Object(o.e)(j,(function(e){var r,t;return"UNKNOWN"===(null===(r=e.error)||void 0===r?void 0:r.type)||"ERROR"===(null===(t=e.error)||void 0===t?void 0:t.type)})),j.isRetryEnabled=Object(o.e)(j,(function(e){return e.isRetryEnabled}));var v=Object(n.a)({},i,O)},167:function(e,r,t){"use strict";t.d(r,"a",(function(){return v})),t.d(r,"c",(function(){return h})),t.d(r,"b",(function(){return O})),t.d(r,"d",(function(){return m}));var n=t(9),i=t(6),c="creditCard",a={fetchingCards:!1,fetchingOffer:!1,creditCards:void 0,creditCardOffers:void 0,errors:i.D,error:void 0},u=t(2),o=t(1),d=t(12),f=t(0),s=t(5),b=t(185),l=t(186),p=i.M,O=Object(o.c)(c,{listCreditCards:function(e,r){return Object(s.a)(Object(f.a)().mark((function t(){var n,i,c,a;return Object(f.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=r.rejectWithValue,i=e.token){t.next=4;break}return t.abrupt("return",null);case 4:return t.next=6,Object(l.b)({token:i});case 6:if(c=t.sent){t.next=9;break}return t.abrupt("return",null);case 9:if(!Object(l.c)(c)){t.next=11;break}return t.abrupt("return",n(Object(u.a)(Object(u.a)({},c),l.a[c.code])));case 11:return a=j(c),t.abrupt("return",a);case 13:case"end":return t.stop()}}),t)})))()},consultOffer:function(e,r){return Object(s.a)(Object(f.a)().mark((function t(){var n,i,c;return Object(f.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=r.rejectWithValue,i=e.token){t.next=4;break}return t.abrupt("return",null);case 4:return t.next=6,Object(b.b)({token:i});case 6:if(c=t.sent){t.next=9;break}return t.abrupt("return",null);case 9:if(!Object(b.c)(c)){t.next=11;break}return t.abrupt("return",n(Object(u.a)(Object(u.a)({},c),b.a[c.code])));case 11:return t.abrupt("return",c);case 12:case"end":return t.stop()}}),t)})))()}});function j(e){var r=e.code,t=e.idTransaction,n=e.message,c=e.data.creditCards,a=null===c||void 0===c?void 0:c.filter((function(e){return"3"!==e.creditCardProductType}));return{code:r,idTransaction:t,message:n,data:{creditCards:null===a||void 0===a?void 0:a.map((function(e){var r=e.idProduct,t=e.image,n=e.ownership,c=e.creditCardProductType,a=e.color,u=e.numberCard,o=e.widgetProductType,d=e.availableLimit,f=u||i.D,s=f.length;return{image:t,color:a,ownership:n,creditCardProductType:c,idProduct:r,widgetProductType:o,availableLimit:d,numberCard:s>p?f.substring(s-p):f}}))}}}var v=Object(o.b)(c,["clean"]),g=Object(o.d)(a,(function(e){var r=e.addCase,t=e.addMatcher;r(v.clean,(function(){return Object(u.a)({},a)})),r(O.listCreditCards.pending,(function(e){e.fetchingCards=!0,e.error=a.error})),r(O.listCreditCards.fulfilled,(function(e,r){var t=r.payload;if(e.fetchingCards=!1,t){var n=t.data.creditCards;e.creditCards=n}})),r(O.consultOffer.pending,(function(e){e.fetchingOffer=!0,e.error=a.error})),r(O.consultOffer.fulfilled,(function(e,r){var t=r.payload;if(e.fetchingOffer=!1,t){var n=t.data.creditCardOffers;e.creditCardOffers=n}})),t((function(e){return Object(d.c)(e,c)}),(function(e,r){var t=r.payload;e.fetchingCards&&(e.fetchingCards=!1),e.fetchingOffer&&(e.fetchingOffer=!1),e.error=t}))}));function h(e){return e[c]}h.getCreditCards=Object(o.e)(h,(function(e){return e.creditCards})),h.consultOffer=Object(o.e)(h,(function(e){return e.creditCardOffers})),h.fetchingCards=Object(o.e)(h,(function(e){return e.fetchingCards})),h.fetchingOffer=Object(o.e)(h,(function(e){return e.fetchingOffer})),h.error=Object(o.e)(h,(function(e){return e.error}));var m=Object(n.a)({},c,g)},172:function(e,r,t){"use strict";t.d(r,"a",(function(){return f})),t.d(r,"c",(function(){return j})),t.d(r,"b",(function(){return l})),t.d(r,"d",(function(){return v}));var n=t(9),i="countries",c={fetching:!1,countries:[],error:void 0,warning:void 0},a=t(2),u=t(12),o=t(1),d=t(130),f=Object(o.b)(i,["clean"]),s=t(0),b=t(5),l=Object(o.c)(i,{listCountries:function(e,r){return Object(b.a)(Object(s.a)().mark((function e(){var t,n;return Object(s.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.rejectWithValue,e.next=3,Object(d.b)();case 3:if(n=e.sent){e.next=6;break}return e.abrupt("return",null);case 6:if(!Object(d.c)(n)){e.next=8;break}return e.abrupt("return",t(Object(a.a)(Object(a.a)({},n),d.a[n.code])));case 8:return e.abrupt("return",n);case 9:case"end":return e.stop()}}),e)})))()}}),p=t(3),O=Object(o.d)(c,(function(e){var r=e.addCase,t=e.addMatcher;r(f.clean,(function(){return Object(a.a)({},c)})),r(l.listCountries.fulfilled,(function(e,r){var t=r.payload;if(e.fetching=!1,t){var n=t.data.countries;e.countries=n}})),t((function(e){return Object(u.b)(e,i)}),(function(e){e.fetching=!0,e.error=c.error,e.warning=c.warning})),t((function(e){return Object(u.c)(e,i)}),(function(e,r){var t=r.payload;e.fetching=!1,Object(p.x)(d.a,t.code)?e.warning=t:e.error=t}))}));function j(e){return e[i]}j.fetching=Object(o.e)(j,(function(e){return e.fetching})),j.countries=Object(o.e)(j,(function(e){return e.countries}));var v=Object(n.a)({},i,O)},69:function(e,r,t){"use strict";t.d(r,"c",(function(){return g})),t.d(r,"b",(function(){return O})),t.d(r,"a",(function(){return s})),t.d(r,"d",(function(){return h}));var n=t(9),i=t(6),c="configuration",a={fetching:!1,error:void 0,warning:void 0,platform:void 0,isMobile:!1,isDesktop:!1,isWebMobile:!1,isUnknown:!1,osName:i.D,device:void 0,isDeviceCompatibleToken:!1,uniqueDeviceID:i.D,isTackerDebugEnabled:!1,initialSetupExecuted:!1,minVersionSupported:void 0,forcedUpdate:!1,updateLaterSel:!1},u=t(2),o=t(12),d=t(1),f=t(105),s=Object(d.b)(c,["clean","setDevice","setPlatform","setUniqueDeviceID","setTackerDebugEnabled","cleanMinSupportedVersion","setUpdateLaterSel"]),b=t(3),l=t(0),p=t(5),O=Object(d.c)(c,{initialSetup:function(){return Object(p.a)(Object(l.a)().mark((function e(){return Object(l.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(f.c)();case 2:case"end":return e.stop()}}),e)})))()},getMinSupportedVersion:function(){return Object(p.a)(Object(l.a)().mark((function e(){var r;return Object(l.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(f.b)();case 2:if(r=e.sent){e.next=5;break}return e.abrupt("return",null);case 5:if(!Object(f.e)(r)){e.next=7;break}return e.abrupt("return",null);case 7:return e.abrupt("return",r);case 8:case"end":return e.stop()}}),e)})))()}}),j=Object(d.d)(a,(function(e){var r=e.addCase,t=e.addMatcher;r(s.clean,(function(){return Object(u.a)({},a)})),r(s.setUpdateLaterSel,(function(e){e.updateLaterSel=!0,e.minVersionSupported=a.minVersionSupported,e.forcedUpdate=a.forcedUpdate})),r(s.cleanMinSupportedVersion,(function(e){e.minVersionSupported=a.minVersionSupported,e.forcedUpdate=a.forcedUpdate})),r(O.initialSetup.fulfilled,(function(e){e.initialSetupExecuted=!0})),r(s.setDevice,(function(e,r){var t=r.payload;if(t){e.device=t.device;var n=t.device,i=n.osName,c=n.osVersion,a=t.minAndroidVersion,u=t.minIosVersion,o=Number(a.split(".")[0]),d=Number(u.split(".")[0]),f=Number(c.split(".")[0]),s="Android"===i&&f>o,b="iOS"===i&&f>d;e.isDeviceCompatibleToken=s||b}})),r(s.setPlatform,(function(e,r){var t=r.payload;if(t){var n=t.isDesktop,i=t.isMobile,c=t.isUnknown,a=t.isWebMobile,u=t.platform;e.isDesktop=n,e.isMobile=i,e.isUnknown=c,e.isWebMobile=a,e.platform=u,e.osName=u}})),r(s.setUniqueDeviceID,(function(e,r){var t=r.payload;t&&(e.uniqueDeviceID=t)})),r(s.setTackerDebugEnabled,(function(e,r){var t=r.payload;t&&(e.isTackerDebugEnabled=t)})),r(O.getMinSupportedVersion.fulfilled,(function(e,r){var t=r.payload;e.fetching=!1,t&&(e.minVersionSupported=t.data.minSupportedVersion,e.forcedUpdate=t.data.forceUpdate)})),t((function(e){return Object(o.b)(e,c)}),(function(e){e.fetching=!0,e.error=a.error,e.warning=a.warning})),t((function(e){return Object(o.c)(e,c)}),(function(e,r){var t=r.payload;e.fetching=!1,Object(b.x)(f.a,t.code)?e.warning=t:e.error=t}))})),v=t(36);function g(e){return e[c]}g.fetching=Object(d.e)(g,(function(e){return e.fetching})),g.error=Object(d.e)(g,(function(e){return e.error})),g.warning=Object(d.e)(g,(function(e){return e.warning})),g.platform=Object(d.e)(g,(function(e){return e.platform})),g.isMobile=Object(d.e)(g,(function(e){return e.isMobile})),g.isIoS=Object(d.e)(g,(function(e){return e.isMobile&&e.platform===v.b.CORDOVA_IOS})),g.isAndroid=Object(d.e)(g,(function(e){return e.isMobile&&e.platform===v.b.CORDOVA_ANDROID})),g.isDesktop=Object(d.e)(g,(function(e){return e.isDesktop})),g.isWebMobile=Object(d.e)(g,(function(e){return e.isWebMobile})),g.isUnknown=Object(d.e)(g,(function(e){return e.isUnknown})),g.device=Object(d.e)(g,(function(e){return e.device})),g.deviceModel=Object(d.e)(g,(function(e){var r;return(null===(r=e.device)||void 0===r?void 0:r.model)||""})),g.osVersion=Object(d.e)(g,(function(e){var r;return null===(r=e.device)||void 0===r?void 0:r.osVersion})),g.osName=Object(d.e)(g,(function(e){var r;return null===(r=e.device)||void 0===r?void 0:r.osName})),g.deviceBrand=Object(d.e)(g,(function(e){var r;return null===(r=e.device)||void 0===r?void 0:r.brand})),g.isSimulator=Object(d.e)(g,(function(e){var r;return null===(r=e.device)||void 0===r?void 0:r.isSimulator})),g.isDeviceCompatibleToken=Object(d.e)(g,(function(e){return e.isDeviceCompatibleToken})),g.uniqueDeviceID=Object(d.e)(g,(function(e){return e.uniqueDeviceID})),g.isTackerDebugEnabled=Object(d.e)(g,(function(e){return e.isTackerDebugEnabled})),g.initialSetupExecuted=Object(d.e)(g,(function(e){return e.initialSetupExecuted})),g.minVersionSupported=Object(d.e)(g,(function(e){return e.minVersionSupported})),g.isForcedUpdate=Object(d.e)(g,(function(e){return e.forcedUpdate})),g.updateLaterSel=Object(d.e)(g,(function(e){return e.updateLaterSel}));var h=Object(n.a)({},c,j)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=main~26461ade.0839ea9e.chunk.js.map