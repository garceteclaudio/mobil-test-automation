(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[148,80,167,199,311],{354:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return f}));var a=n(0),r=n(5),i=(n(11),n(39)),o=n(8),s=n(149),l=n(187),u=n(270),c=n(488),_=n(489),E=n(38),d=n(82),b=n(494),m=n(147),T=n(99),O=n(535),N=n(6),j=n(428),p=n.n(j),h=n(10);function f(){var e=Object(E.c)().textGet,t=Object(o.b)(),n=Object(T.a)().getValueConfig,j=Object(o.c)(s.c.fetching),f=Object(o.c)(s.c.warning),g=Object(o.c)(m.c.exchangeToken),P=Object(o.c)(s.c.email),M=Object(O.a)(n),A=e({uuid:"spa.generic.field.error.required"}),C=e({uuid:"spa.onboarding.step3.code.label"}),x=i.e.object({validationCode:Object(l.d)(i.e.string.ofLength(M,M),A)});return j?Object(h.jsx)(u.a,{}):Object(h.jsx)(_.a,{"header-onBack":function(){t(s.a.cleanEmail())},"header-title":"spa.onboarding.step3.title",children:Object(h.jsx)("section",{children:Object(h.jsxs)(c.a,{schema:x,warnings:f,onSubmit:function(e){return L.apply(this,arguments)},children:[Object(h.jsx)(E.b,{className:p.a.validateTitle,uuid:"spa.onboarding.step3.text1"}),Object(h.jsx)(E.b,{className:p.a.emailValue,children:P}),Object(h.jsx)(E.b,{className:p.a.noteEmail,uuid:"spa.onboarding.step3.text3"}),Object(h.jsx)(E.b,{className:p.a.subtitleEmail,uuid:"spa.onboarding.step3.text2"}),Object(h.jsx)("div",{className:p.a.inputContainerEmail,children:Object(h.jsx)(b.a,{withoutSpaces:!0,label:C,maxLength:N.Bb,name:"validationCode",withSuggestions:!1,onChange:function(){t(s.a.cleanWarnings())}})}),Object(h.jsx)(d.a,{label:{uuid:"spa.form.continue"},loading:j,type:"submit"}),Object(h.jsxs)("div",{className:p.a.resendCode,children:[Object(h.jsx)(E.b,{tag:"span",uuid:"spa.onboarding.step3.text4"}),Object(h.jsx)(d.a,{kind:"plain",label:{uuid:"spa.onboarding.step3.button"},onClick:function(){return R.apply(this,arguments)}})]})]})})});function R(){return(R=Object(r.a)(Object(a.a)().mark((function e(){return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t(s.b.sendEmail({exchangeToken:g,email:P}));case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function L(){return(L=Object(r.a)(Object(a.a)().mark((function e(n){var r;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n.validationCode,e.next=3,t(s.b.sendCodeEmail({validationCode:r,exchangeToken:g}));case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},428:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",presentation:"_rules_presentation__2rnDT",image:"_rules_image__2dV7m",containerText:"_rules_containerText__pu48C",title:"_rules_title__3WK5D",text:"_rules_text__3khoq",nextButton:"_rules_nextButton__3nv4A",skipButton:"_rules_skipButton__6WOgG",finishButton:"_rules_finishButton__VsgGK",subtitle:"_rules_subtitle__bTvVh",inputSelectContainer:"_rules_inputSelectContainer__2j7Df",submitButton:"_rules_submitButton__3FaKR",alert:"_rules_alert__laL5T",alertLottie:"_rules_alertLottie__2sgW7",termsAndConditions:"_rules_termsAndConditions__cNiMg",validateTitle:"_rules_validateTitle__2Nx1p",emailValue:"_rules_emailValue__yLDPW",noteEmail:"_rules_noteEmail__4AmC9",subtitleEmail:"_rules_subtitleEmail__2J0wM",inputContainerEmail:"_rules_inputContainerEmail__2O1ou",resendCode:"_rules_resendCode__lH6Jj",inputContainerPhone:"_rules_inputContainerPhone__1gKy1",securitySealContainer:"_rules_securitySealContainer__1LU5g",onboardingWelcome:"_rules_onboardingWelcome__ijVs1",downloadPrincipal:"_rules_downloadPrincipal__2thE8",logosContainer:"_rules_logosContainer__2uaXe"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var a=n(2),r=n(16),i=n(19),o=n(11),s=n(502),l=n(505),u=n(41),c=n(6),_=n(79),E=n(8),d=n(493),b=n.n(d),m=n(10),T=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],O=b.a.NAME_FORM,N=b.a.TYPE_FORM;function j(e){var t=e,n=t.ariaLabel,d=t.ariaLabelledby,b=t.schema,j=t.onSubmit,p=t.children,h=t.warnings,f=t.isRequiredToast,g=t.isResetForm,P=Object(i.a)(t,T),M=Object(E.b)(),A=Object(s.e)({resolver:Object(l.a)(b)}),C=A.handleSubmit,x=A.setError,R=A.formState.errors,L=A.reset,I=Object.keys(R),v=o.b.useState(!1),S=Object(r.a)(v,2),F=S[0],y=S[1],B=o.b.useCallback((function(){f&&F&&M(_.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:c.w})),y(!1)}),[M,f,F]),w=o.b.useCallback((function(){L()}),[L]);return o.b.useEffect((function(){h&&Object.keys(h.data).map((function(e){var t=e.startsWith(c.Nb)?e.slice(c.fb):e;return x(t,{message:h.data[e]},{shouldFocus:!1}),null})),I.length>c.Sb&&B(),g&&w()}),[I.length,g,w,x,B,h]),Object(m.jsx)(s.b,Object(a.a)(Object(a.a)(Object(a.a)({},A),P),{},{children:Object(m.jsx)(u.a,{noValidate:!0,"aria-label":n,"aria-labelledby":d,name:O,tag:"form",type:N,onSubmit:C(j,(function(){return y(!F)})),children:p})}))}j.useContext=s.f,j.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),r=n(19),i=(n(11),n(41)),o=n(136),s=n(82),l=n(38),u=n(101),c=n(491),_=n.n(c),E={name:_.a.NAME_EXTERNAL_CONTAINER,type:_.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},d=n(492),b=n.n(d),m=n(10),T=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function O(e){var t=e,n=t["header-onBack"],c=t["header-title"],_=t.children,E=t.name,d=t.type,O=t.headerClassName,N=t.showLogo,j=Object(r.a)(t,T),p=Boolean(n||c),h=Object(i.c)(!c&&b.a.onlyRow,O),f=Object(i.c)(N&&b.a.step1Logo),g=Object(i.c)(N&&b.a.hasLogo);return Object(m.jsxs)(u.a,{children:[N&&Object(m.jsx)("div",{className:f,children:Object(m.jsx)(o.a,{alt:"logo",uuid:"logo150Login"})}),Object(m.jsx)(i.a,Object(a.a)(Object(a.a)({name:E,tag:"article",type:d},j),{},{children:Object(m.jsxs)("article",{className:g,children:[p&&Object(m.jsxs)("header",{className:h,children:[n&&Object(m.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),c&&Object(m.jsx)(l.b,{tag:"h5",uuid:c})]}),_]})}))]})}O.defaultProps=E},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},494:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),r=n(19),i=n(16),o=n(11),s=n(50),l=n(41),u=n(488),c=n(498),_=n.n(c),E=n(10),d=["id","name","methods","defaultValue","pattern","withSuggestions","onChange","onBlur"],b=_.a.NAME_INPUT_FIELD,m=_.a.TYPE_INPUT_FIELD,T=o.b.memo((function(e){var t,n=o.b.useState(!1),u=Object(i.a)(n,2),c=u[0],_=u[1],T=e.id,O=e.name,N=e.methods,j=e.defaultValue,p=e.pattern,h=e.withSuggestions,f=void 0===h||h,g=e.onChange,P=e.onBlur,M=Object(r.a)(e,d),A=N.register,C=N.formState,x=N.setValue,R=N.clearErrors,L=C.errors,I="".concat(O),v=L[O];return o.b.useEffect((function(){j&&x(I,j),j||x(I,void 0),f&&_(!0)}),[j,I,x,f,_]),Object(E.jsx)(l.a,{name:b,type:m,children:Object(E.jsx)(s.TextField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({id:T||O},j&&{defaultValue:j}),v&&{error:null===(t=v.message)||void 0===t?void 0:t.toString()}),A(I,{onChange:function(e){g&&g(e);R([I])},onBlur:P})),M),{},{autoComplete:f?"on":"off",pattern:p,onKeyDown:function(e){e.target.value||c||_(!0)}}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function O(e){var t=u.a.useContext();return Object(E.jsx)(T,Object(a.a)({methods:t},e))}O.displayName=b},498:function(e,t,n){e.exports={NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element"}},535:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(6);function r(e){var t=Number(e("validationCodes.id.groups.length"));return Number(e("validationCodes.id.groupLength"))*t+t-a.fb}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=148.86ddd1fb.chunk.js.map