(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[84,297],{219:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return T}));n(11);var a=n(8),c=n(117),o=n(33),i=n(6),s=n(38),r=n(532),l=n(270),u=n(504),d=n(500),b=n(497),p=n(51),j=n(100),m=n(136),f=n(50),O=n(474),E=n.n(O),x=n(10);function T(){var e=Object(p.qb)(),t=Object(a.b)(),n=Object(p.sb)(p.n),O=Object(s.c)().textGet,T=Object(a.c)(o.e.userFullName),h=Object(a.c)(o.e.documentNumber),v=Object(a.c)(c.c.couponDataTicket),_=Object(a.c)(c.c.couponData),g=Object(a.c)(c.c.couponDataPaid),k=(null===v||void 0===v?void 0:v.statusTransaction)!==i.F,N=k?"spa.modo.send.money.ticket.success.title":"spa.modo.send.money.ticket.rejected.title",P=k?"spa.modo.send.money.ticket.success.description":"spa.modo.send.money.ticket.rejected.description",w=O({uuid:"spa.modo.send.money.title"}),A=Object(x.jsxs)(f.Box,{flex:!0,align:"baseline",children:[Object(x.jsx)(s.b,{"aria-label":w,tag:"h1",uuid:"spa.modo.send.money.title.short"}),Object(x.jsx)(m.a,{"aria-hidden":!0,alt:"modo",uuid:"logoModo"})]});return g?Object(x.jsx)(b.a,{withFooter:!0,className:E.a.couponTicket,hasNotifications:!1,children:Object(x.jsx)(r.a,{hasModoLogo:!0,isDownloadable:!0,isShareable:!0,buttonText:"spa.form.accept",handleButton:function(){t(c.a.clean()),e(n)},idTransaction:null===v||void 0===v?void 0:v.idTransaction,responseDescription:P,responseTitle:N,titleText:A,transactionStatus:null===v||void 0===v?void 0:v.statusTransaction,children:Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)(s.b,{tag:"span",uuid:"spa.modo.send.money.ticket.code"}),Object(x.jsx)(s.b,{className:E.a.ticketInfo,tag:"span",children:null===v||void 0===v?void 0:v.idTransactionShort})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(s.b,{tag:"span",uuid:"spa.modo.send.money.ticket.status"}),Object(x.jsx)(s.b,{className:E.a.ticketInfo,tag:"span",uuid:"spa.modo.ticket.status.".concat(null===v||void 0===v?void 0:v.statusTransaction)})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(s.b,{tag:"span",uuid:"spa.modo.send.money.ticket.date"}),Object(x.jsx)(u.a,{className:E.a.ticketInfo,date:null===v||void 0===v?void 0:v.dateExecution,formatParams:{format:j.a.LARGE}})]}),Object(x.jsx)("li",{children:Object(x.jsx)(s.b,{className:E.a.subtitle,uuid:"spa.modo.send.money.info.subtitle1"})}),Object(x.jsxs)("li",{children:[Object(x.jsx)(s.b,{tag:"span",uuid:"spa.modo.send.money.ticket.name"}),Object(x.jsx)(s.b,{className:E.a.ticketInfo,tag:"span",children:T})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(s.b,{tag:"span",uuid:"spa.modo.send.money.ticket.cuit"}),Object(x.jsx)(s.b,{className:E.a.ticketInfo,tag:"span",children:h})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(s.b,{tag:"span",uuid:"spa.modo.send.money.ticket.account"}),Object(x.jsx)(s.b,{className:E.a.ticketInfo,tag:"span",children:null===g||void 0===g?void 0:g.account})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(s.b,{tag:"span",uuid:"spa.modo.send.money.ticket.amount"}),Object(x.jsx)(s.b,{className:E.a.ticketInfo,tag:"span",children:Object(d.a)({currency:null===g||void 0===g?void 0:g.amount.currency,amount:null===g||void 0===g?void 0:g.amount.quantity})})]}),Object(x.jsx)("li",{children:Object(x.jsx)(s.b,{className:E.a.subtitle,uuid:"spa.modo.send.money.info.subtitle2"})}),Object(x.jsxs)("li",{children:[Object(x.jsx)(s.b,{tag:"span",uuid:"spa.modo.send.money.ticket.name"}),Object(x.jsx)(s.b,{className:E.a.ticketInfo,tag:"span",children:null===_||void 0===_?void 0:_.contactName.contactName})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(s.b,{tag:"span",uuid:"spa.modo.send.money.ticket.concept"}),Object(x.jsx)(s.b,{className:E.a.ticketInfo,tag:"span",uuid:"spa.modo.send.money.ticket.".concat(g.concept)})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(s.b,{tag:"span",uuid:"spa.modo.send.money.ticket.reference"}),Object(x.jsx)(s.b,{className:E.a.ticketInfo,tag:"span",children:g.motive})]})]})})}):Object(x.jsx)(l.a,{})}},474:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",couponTicket:"_rules_couponTicket__u69-a",subtitle:"_rules_subtitle__1LiG9",ticketInfo:"_rules_ticketInfo__158b5"}},499:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var a=n(0),c=n(5);function o(e){var t=e.filename,n=e.path,a=e.flags;return new Promise((function(e,c){var o;function i(e){c(e)}(o=window.cordova.file[n],new Promise((function(e,t){window.resolveLocalFileSystemURL(o,(function(t){e(t)}),(function(e){t(e)}))}))).then((function(n){var c=n;c.getFile(t,a,(function(t){var n=new FileReader;t.createWriter((function(a){e({fileEntry:t,dirEntry:c,fileReader:n,fileWriter:a,fileWrite:function(e){return new Promise((function(t,n){a.onwriteend=function(){return t(a)},a.onerror=function(e){return n(e)},a.write(e)}))},fileRemove:function(){return new Promise((function(e,n){t.remove((function(){return e(!0)}),(function(e){return n(e)}))}))}})}),i)}),i)}))}))}var i=n(36),s=n(26),r=n(28);function l(){return u.apply(this,arguments)}function u(){return(u=Object(c.a)(Object(a.a)().mark((function e(){var t;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(s.c)();case 2:if(e.sent&&cordova.plugins){e.next=5;break}throw s.a.CORDOVA_UNAVAILABLE;case 5:if(t=cordova.plugins.fileOpener2){e.next=8;break}throw s.a.PLUGIN_UNAVAILABLE;case 8:return e.abrupt("return",t);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function d(e){return b.apply(this,arguments)}function b(){return b=Object(c.a)(Object(a.a)().mark((function e(t){var n,c,o,i,u;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.contentType,c=t.fileName,o=t.withDialog,e.next=3,Object(s.c)();case 3:if(e.sent){e.next=6;break}throw s.a.CORDOVA_UNAVAILABLE;case 6:return e.next=8,l();case 8:return i=e.sent,u=o?i.open:i.showOpenWithDialog,e.abrupt("return",new Promise((function(e,t){try{u(c,n,{success:function(){e({code:r.a.SUCCESS,value:!0})},error:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){t("boolean"===typeof e?new r.b(r.a.ERROR,i.open.name,r.c):new r.b(r.a.ERROR,i.open.name,e.message))}))})}catch(a){t(new r.b(r.a.ERROR_UNKNOWN,i.open.name,r.c))}})));case 11:case"end":return e.stop()}}),e)}))),b.apply(this,arguments)}function p(){var e=Object(i.i)(),t=e.isDesktop,n=e.isUnknown,s=e.platform;function r(e){var t=e.split(".").pop();return"png"===t||"jpg"===t||"gif"===t||"bmp"===t?"image/".concat(t):"pdf"===t?"application/".concat(t):"doc"===t||"docx"===t?"application/msword":"ppt"===t||"pptx"===t?"application/vnd.ms-powerpoint":"xls"===t||"xlsx"===t?"application/vnd.ms-excel":"xlsm"===t?"application/vnd.ms-excel.sheet.macroEnabled.12":"txt"===t?"text/plain":"zip"===t?"application/zip":void 0}return function(){var e=Object(c.a)(Object(a.a)().mark((function e(c,l){var u,b,p,j,m,f,O;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(u=s===i.b.CORDOVA_ANDROID,!(b=r(c))){e.next=19;break}if(!t&&!n){e.next=9;break}return(p=document.createElement("a")).href=window.URL.createObjectURL(l),p.download=c,p.click(),e.abrupt("return");case 9:return e.next=11,o({filename:c,path:u?"externalApplicationStorageDirectory":"dataDirectory",flags:{create:!0,exclusive:!1}});case 11:return j=e.sent,m=j.fileWrite,f=j.fileEntry,e.next=16,m(l);case 16:return O={contentType:b,fileName:f.nativeURL,withDialog:!0},e.next=19,d(O);case 19:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}()}},501:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var a=512,c=0;function o(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a,o=window.atob(e),i=[],s=c;s<o.length;s+=n){for(var r=o.slice(s,s+n),l=new Array(r.length),u=c;u<r.length;u++)l[u]=r.charCodeAt(u);i.push(new Uint8Array(l))}return new Blob(i,{type:t})}},508:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var a=n(6);function c(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"pdf";if("string"===typeof e&&e.trim()){var n=e.trim().toLowerCase().replace(/[^a-zA-Z0-9]/g,a.Nb);return"".concat(n,".").concat(t)}var c=new Date,o=c.getMonth()+a.fb,i=(o<a.Fb?a.Ub:a.D)+o,s=c.getDate(),r=(s<a.Fb?a.Ub:a.D)+s;return"".concat(c.getFullYear(),"_").concat(i,"_").concat(r,".").concat(t)}},532:function(e,t,n){"use strict";n.d(t,"a",(function(){return P}));var a=n(16),c=n(11),o=n(41),i=n(36),s=n(50),r=n(6),l=n(8),u=n(33),d=n(271),b=n(501),p=n(154),j=n(499),m=n(38),f=n(82),O=n(533),E=n.n(O),x=n(534),T=n.n(x),h=n(508),v=n(270),_=n(10),g=T.a.NAME_TICKET,k=T.a.TYPE_TICKET,N={hasModoLogo:!1,isDownloadable:!1,isShareable:!1,navigateButton:{},responseDescription:r.D};function P(e){var t=e,n=t.idTransaction,r=t.buttonText,O=t.children,x=t.className,T=t.transactionStatus,N=t.responseTitle,P=t.responseDescription,w=t.navigateButton,A=t.hasModoLogo,M=t.titleText,I=t.handleButton,y=t.isDownloadable,R=t.isShareable,D=Object(l.b)(),L=Object(j.a)(),F=Object(i.i)().isDesktop,C=c.b.useState(!1),S=Object(a.a)(C,2),U=S[0],B=S[1],H=c.b.useState(!1),Y=Object(a.a)(H,2),z=Y[0],V=Y[1],G=Object(l.c)(u.e.token),K=Object(l.c)(p.c.fetching),W=Object(l.c)(p.c.fetchedFile),X=Object(l.c)(p.c.filename),J=Object(l.c)(p.c.content),q=y||R,Z=Object(h.a)(X),Q="string"===typeof M;c.b.useEffect((function(){D(p.a.clean())}),[D]),c.b.useEffect((function(){(z||U)&&G&&(W||X||J?(X&&J&&(U&&(L(Z,Object(b.a)(J)),B(!1)),z&&(Object(d.a)({options:{message:X,subject:X},files:[{fileName:Z,base64File:J}]}),V(!1))),D(p.a.setFetchedFile(!1))):D(p.b.generatePdf({token:G,idTransaction:n})))}),[J,D,U,W,X,Z,L,n,z,G]);var $={FINISHED:Object(_.jsx)(s.Icon,{name:"success",size:"large",stroke:"success"}),PROCESSING:Object(_.jsx)(s.Icon,{name:"clock",size:"large",stroke:"info"}),PENDING:Object(_.jsx)(s.Icon,{name:"clock",size:"large",stroke:"info"}),FAILED:Object(_.jsx)(s.Icon,{name:"error",size:"large",stroke:"error"}),ANNULED:Object(_.jsx)(s.Icon,{name:"warning",size:"large",stroke:"warning"}),RETURNED:Object(_.jsx)(s.Icon,{name:"warning",size:"large",stroke:"warning"})};return K?Object(_.jsx)(v.a,{}):Object(_.jsxs)(o.a,{className:x,name:g,tag:"section",type:k,children:[Object(_.jsx)("header",{children:Q?Object(_.jsx)(m.b,{className:E.a.title,fallback:M,tag:"h1",uuid:M}):M}),Object(_.jsxs)("section",{children:[q&&Object(_.jsxs)("div",{className:E.a.actions,children:[R&&!F&&Object(_.jsx)(f.a,{icon:"share",kind:"icon",label:{uuid:"spa.a11y.buttons.share"},size:"small",variant:"text",onClick:function(){V(!0)}}),y&&Object(_.jsx)(f.a,{icon:"download",kind:"icon",label:{uuid:"spa.a11y.buttons.download"},size:"small",variant:"text",onClick:function(){B(!0)}})]}),Object(_.jsx)("div",{className:E.a.responseIcon,children:$[T]}),Object(_.jsx)(m.b,{className:E.a.responseTitle,fallback:N,tag:"h2",uuid:N}),P&&Object(_.jsx)(m.b,{className:E.a.responseDescription,tag:"h3",uuid:P}),(null===w||void 0===w?void 0:w.label)&&(null===w||void 0===w?void 0:w.handleClick)&&Object(_.jsx)(f.a,{className:E.a.navigateButton,kind:"plain",label:w.label,type:"button",onClick:w.handleClick}),O,A&&Object(_.jsx)("div",{className:E.a.responseIcon,children:Object(_.jsx)(s.Icon,{name:"modo"})})]}),Object(_.jsx)("footer",{children:Object(_.jsx)(f.a,{label:{uuid:r},onClick:I})})]})}P.defaultProps=N},533:function(e,t,n){e.exports={NAME_TICKET:"Ticket",TYPE_TICKET:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",title:"_rules_title__1SNPA",actions:"_rules_actions__30efJ",responseIcon:"_rules_responseIcon__1McyH",responseTitle:"_rules_responseTitle__3H3Id",responseDescription:"_rules_responseDescription__1NvkT",navigateButton:"_rules_navigateButton__Dlve9"}},534:function(e,t,n){e.exports={NAME_TICKET:"Ticket",TYPE_TICKET:"Section"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=84.e4823849.chunk.js.map