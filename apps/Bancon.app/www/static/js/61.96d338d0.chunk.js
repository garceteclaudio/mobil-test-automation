(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[61],{570:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",voidPaymentModal:"_rules_voidPaymentModal__252im",footer:"_rules_footer__12oQD",termsAndConditions:"_rules_termsAndConditions__h5pv6",downloadAll:"_rules_downloadAll__3a9nR",downloadMultiple:"_rules_downloadMultiple__2-5O9"}},616:function(e,t,a){"use strict";a.d(t,"a",(function(){return m}));a(11);var n=a(41),c=a(8),s=a(38),l=a(503),o=a(500),r=a(152),u=a(137),i=a(6),d=a(633),p=a.n(d),b=a(10);i.D;function m(e){var t=e.title,a=e.rules,i=e.isConsult,d=e.name,m=Object(c.c)(r.c.accounts),E=Object(c.c)(r.c.selectedCleanFilters),_=Object(c.b)(),T=Object(s.c)().textGet,O=Object(n.c)(a&&p.a.emissionAccountDataContainer,!a&&void 0);return Object(b.jsxs)("div",{className:O,children:[t&&Object(b.jsx)(s.b,{className:p.a.title,uuid:"spa.supplier.accountData.title"}),Object(b.jsx)(l.a,{cleanData:i&&E,label:T({uuid:i?"spa.suppliers.consultPayments.debitAccount.label":"spa.supplier.accountIssuing"}),name:d,options:m?m.map((function(e){var t=e.shortLabel,a=e.cbu,n=e.value,c=e.balance;return{label:Object(b.jsxs)("div",{children:[Object(b.jsx)(s.b,{tag:"p",children:t}),Object(b.jsx)(s.b,{className:p.a.labelSecondRow,tag:"p",children:Object(b.jsx)(o.a,{amount:c})})]}),value:i?String(a):n,searchKey:t}})):[],onSelectOption:function(e){var t=null===m||void 0===m?void 0:m.find((function(t){return t.shortLabel===e.searchKey})),a={accountLabel:e.searchKey,accountNumber:String(e.value),accountCurrency:null===t||void 0===t?void 0:t.currency,accountBalance:null===t||void 0===t?void 0:t.actualBalance};i?(null!==t&&void 0!==t&&t.idProduct&&_(r.a.debitAccount(null===t||void 0===t?void 0:t.idProduct)),_(r.a.selectedCleanFilters(!1))):_(u.a.account(a))}})]})}},618:function(e,t,a){"use strict";a.d(t,"a",(function(){return d}));a(11);var n=a(8),c=a(69),s=a(82),l=a(490),o=a(38),r=a(570),u=a.n(r),i=a(10);function d(e){var t=e,a=t.showModal,r=t.setShowModal,d=t.isMultipleVoid,p=t.onContinue,b=d?"voidMultiplePayments":"voidPayment",m=Object(n.c)(c.c.isDesktop)?"":".mobile";return Object(i.jsxs)(l.a,{className:u.a.voidPaymentModal,closeOnBgTap:!1,open:a,title:"spa.suppliers.".concat(b,".modal.title"),onClose:E,children:[Object(i.jsx)(l.a.Body,{children:Object(i.jsx)(o.b,{uuid:"spa.suppliers.".concat(b,".modal.body").concat(m)})}),Object(i.jsx)(l.a.Footer,{children:Object(i.jsxs)("div",{className:u.a.footer,children:[Object(i.jsx)(s.a,{label:{uuid:"spa.form.cancel"},type:"button",variant:"outlined",onClick:E}),Object(i.jsx)(s.a,{label:{uuid:"spa.form.confirm"},type:"button",onClick:function(){E(),p()}})]})})]});function E(){r(!1)}}d.defaultProps={}},633:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",emissionAccountDataContainer:"_rules_emissionAccountDataContainer__28-jt",title:"_rules_title__2X1aI",labelSecondRow:"_rules_labelSecondRow__2p2tO"}},781:function(e,t,a){"use strict";a.d(t,"a",(function(){return j}));a(11);var n=a(41),c=a(69),s=a(8),l=a(82),o=a(38),r=a(50),u=a(152),i=a(51),d=a(33),p=a(782),b=a.n(p),m=a(783),E=a.n(m),_=a(10),T=E.a.NAME_CONSULT_PAYMENTS_HEADER,O=E.a.TYPE_CONSULT_PAYMENTS_HEADER;function j(){var e=Object(s.c)(c.c.isDesktop),t=Object(i.qb)(),a=Object(s.b)(),p=Object(i.sb)(i.X),m=Object(d.f)("legacy.payments.supplier.generate"),E=Object(d.h)("legacy.payments.supplier.generate"),j=Object(_.jsxs)(l.a,{className:b.a.dropdownLabel,label:{uuid:"spa.suppliers.consultPayments.dropdown.label"},children:[Object(_.jsx)(o.b,{tag:"label",uuid:"spa.suppliers.consultPayments.dropdown.label"}),Object(_.jsx)(r.Icon,{name:"down",size:"small",stroke:"gray-600"})]});return Object(_.jsxs)(n.a,{name:T,type:O,children:[Object(_.jsx)(o.b,{className:b.a.title,tag:"h1",uuid:"spa.suppliers.consultPayments.title"}),e&&m&&E&&Object(_.jsx)("div",{children:Object(_.jsx)(r.Dropdown,{className:b.a.dropdown,label:j,children:Object(_.jsx)(r.Dropdown.Item,{children:Object(_.jsx)(l.a,{kind:"plain",label:{uuid:"spa.suppliers.consultPayments.dropdown.item.transfer"},onClick:P})})})})]});function P(){a(u.a.cleanAccounts()),t(p)}}},782:function(e,t,a){e.exports={NAME_CONSULT_PAYMENTS_HEADER:"ConsultPaymentsHeader",TYPE_CONSULT_PAYMENTS_HEADER:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",title:"_rules_title__2z2tR",dropdown:"_rules_dropdown__2lKwh",dropdownLabel:"_rules_dropdownLabel__3uGow"}},783:function(e,t,a){e.exports={NAME_CONSULT_PAYMENTS_HEADER:"ConsultPaymentsHeader",TYPE_CONSULT_PAYMENTS_HEADER:"Section"}},784:function(e,t,a){"use strict";a.d(t,"a",(function(){return h}));var n=a(16),c=a(11),s=a(41),l=a(55),o=a(6),r=a(152),u=a(8),i=a(488),d=a(82),p=a(494),b=a(512),m=a(503),E=a(566),_=a(38),T=a(50),O=a(616),j=a(785),P=a.n(j),M=a(786),N=a.n(M),f=a(10),A=N.a.NAME_CONSULT_PAYMENTS_FILTERS,y=N.a.TYPE_CONSULT_PAYMENTS_FILTERS;function h(){var e=Object(_.c)().textGet,t=Object(u.b)(),a=new Date,j=new Date((new Date).setMonth((new Date).getMonth()-o.fb)),M=c.b.useState(j),N=Object(n.a)(M,2),h=N[0],x=N[1],R=c.b.useState(a),S=Object(n.a)(R,2),D=S[0],C=S[1],F=i.a.useContext().setValue,v=Object(u.c)(r.c.selectedCleanFilters),L=Object(u.c)(r.c.hasSelectedTransfer),I=Object(u.c)(r.c.conceptPay);return Object(f.jsxs)(s.a,{name:A,type:y,children:[Object(f.jsxs)("div",{className:P.a.filtersHeader,children:[Object(f.jsx)(_.b,{className:P.a.subtitleDate,tag:"h2",uuid:"spa.suppliers.consultPayments.subtitle.date"}),Object(f.jsx)(d.a,{kind:"plain",label:{uuid:"spa.suppliers.consultPayments.clean.filters"},onClick:function(){t(r.a.selectedCleanFilters(!0)),F("conceptPay",o.D),F("status",o.D),F("bankAccountCBU",o.D),F("paymentReference",o.D),F("paymentFilename",o.D),F("transferNumber",o.D)}})]}),Object(f.jsxs)("ul",{children:[Object(f.jsxs)("li",{className:P.a.dateFields,children:[Object(f.jsx)(E.a,{className:P.a.dateFrom,defaultValue:h,filterDate:function(e){return e<D},label:e({uuid:"spa.suppliers.consultPayments.from.label"}),name:"dateFrom",selected:h,startDate:h,onChange:function(e){x(e)}}),Object(f.jsx)(E.a,{className:P.a.dateTo,defaultValue:D,filterDate:function(e){return h.setHours(o.Sb,o.Sb,o.Sb,o.Sb),e>=h&&e<a},label:e({uuid:"spa.suppliers.consultPayments.to.label"}),minDate:h,name:"dateTo",selected:D,startDate:D,onChange:function(e){C(e)}})]}),Object(f.jsx)("li",{className:P.a.paymentMethod,children:Object(f.jsx)(m.a,{cleanData:v,label:e({uuid:"spa.suppliers.consultPayments.paymentMethod.label"}),name:"conceptPay",options:function(){var e=[l.c.TRANSFER];return U(["spa.suppliers.consultPayments.transfer.label"],e)}(),onSelectOption:w})}),I&&!L&&Object(f.jsx)("li",{className:P.a.echeqInfo,children:Object(f.jsx)(T.Tag,{variant:"info",children:Object(f.jsx)(_.b,{tag:"p",uuid:"spa.suppliers.consultPayments.info.echeq"})})}),Object(f.jsx)("li",{className:P.a.debitAccount,children:Object(f.jsx)(O.a,{isConsult:!0,name:"bankAccountCBU"})}),Object(f.jsx)("li",{className:P.a.paymentReference,children:Object(f.jsx)(p.a,{label:e({uuid:"spa.suppliers.consultPayments.paymentReference.label"}),name:"paymentReference",regexPattern:o.ub})}),Object(f.jsx)("li",{className:P.a.paymentStatus,children:Object(f.jsx)(m.a,{cleanData:v,disabled:!I,label:e({uuid:"spa.suppliers.consultPayments.paymentState.label"}),name:"status",options:L?function(){var e=[l.d.IMPUTED,l.d.REJECTED,l.d.PENDING,l.d.VOIDED];return U(["spa.suppliers.consultPayments.imputed.label","spa.suppliers.consultPayments.rejected.label","spa.suppliers.consultPayments.pending.label","spa.suppliers.consultPayments.canceled.label"],e)}():function(){var e=[l.d.IMPUTED,l.d.REJECTED];return U(["spa.suppliers.consultPayments.imputed.label","spa.suppliers.consultPayments.rejected.label"],e)}(),onSelectOption:w})})]}),Object(f.jsx)(T.Accordion,{className:P.a.accordion,children:Object(f.jsxs)(T.Accordion.Item,{children:[Object(f.jsx)(T.Accordion.Summary,{className:P.a.accordionSummary,children:Object(f.jsx)(_.b,{tag:"h2",uuid:"spa.suppliers.consultPayments.subtitle.search"})}),Object(f.jsxs)(T.Accordion.Details,{className:P.a.accordionDetails,children:[Object(f.jsx)(p.a,{label:e({uuid:"spa.suppliers.consultPayments.fileName.label"}),name:"paymentFilename"}),I&&L&&Object(f.jsx)(p.a,{label:e({uuid:"spa.suppliers.consultPayments.transferNumber.label"}),maxLength:o.A,name:"transferNumber",regexPattern:o.tb}),I&&!L&&Object(f.jsx)(b.a,{label:e({uuid:"spa.suppliers.consultPayments.echeqNumber.label"}),name:"echeqNumber"})]})]})})]});function w(){t(r.a.selectedCleanFilters(!1))}function U(t,a){return t.map((function(t,n){return{value:a[n],label:e({uuid:t}),searchKey:e({uuid:t})}}))}}},785:function(e,t,a){e.exports={NAME_CONSULT_PAYMENTS_FILTERS:"ConsultPaymentsFilters",TYPE_CONSULT_PAYMENTS_FILTERS:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_INPUT_DATE_FIELD:"InputDateField",TYPE_INPUT_DATE_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",filtersHeader:"_rules_filtersHeader__3yBMY",accordion:"_rules_accordion__2CXWu",accordionSummary:"_rules_accordionSummary__G_vAE",accordionDetails:"_rules_accordionDetails__1NKCK",dateFields:"_rules_dateFields__2Qb7P",echeqInfo:"_rules_echeqInfo__2IczQ",paymentMethod:"_rules_paymentMethod__3kcBW",debitAccount:"_rules_debitAccount__3r4wd",paymentReference:"_rules_paymentReference__3FPAD",paymentStatus:"_rules_paymentStatus__3vS9a"}},786:function(e,t,a){e.exports={NAME_CONSULT_PAYMENTS_FILTERS:"ConsultPaymentsFilters",TYPE_CONSULT_PAYMENTS_FILTERS:"Section"}},787:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));a(11);var n=a(152),c=a(33),s=a(8),l=a(82),o=a(490),r=a(38),u=a(6),i=a(570),d=a.n(i),p=a(10);function b(e){var t=e,a=t.showModal,i=t.setShowModal,b=Object(s.c)(c.e.token),m=Object(s.c)(n.c.contractId),E=Object(s.c)(n.c.paymentIds),_=Object(s.c)(n.c.conceptPay),T=Object(s.c)(n.c.dateFrom),O=Object(s.c)(n.c.dateTo),j=Object(s.c)(n.c.paymentReference),P=Object(s.c)(n.c.paymentFilename),M=Object(s.c)(n.c.paymentStatus),N=Object(s.b)();return Object(p.jsxs)(o.a,{className:d.a.downloadMultiple,closeOnBgTap:!1,open:a,title:"spa.suppliers.consultPayments.downloads.vouchers",onClose:f,children:[Object(p.jsx)(o.a.Body,{children:Object(p.jsx)(r.b,{uuid:"spa.suppliers.consultPayments.download.vouchers.description"})}),Object(p.jsxs)(o.a.Footer,{className:d.a.footer,children:[Object(p.jsx)(l.a,{label:{uuid:"spa.form.cancel"},type:"button",variant:"outlined",onClick:f}),Object(p.jsx)(l.a,{label:{uuid:"spa.form.continue"},type:"button",onClick:function(){if(!b)return;N(n.b.downloadMultiple({token:b,lastBatch:u.Ub,contractId:m,paymentIds:E,requestDateFrom:T,requestDateTo:O,paymentReference:j,paymentFilename:P,conceptPay:_,format:"xls",status:M})),f()}})]})]});function f(){i(!1)}}b.defaultProps={}},788:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));a(11);var n=a(152),c=a(33),s=a(8),l=a(6),o=a(82),r=a(490),u=a(38),i=a(570),d=a.n(i),p=a(10);function b(e){var t=e,a=t.showModal,i=t.setShowModal,b=Object(s.b)(),m=Object(s.c)(n.c.contractId),E=Object(s.c)(n.c.paymentReference),_=Object(s.c)(n.c.paymentFilename),T=Object(s.c)(n.c.conceptPay),O=Object(s.c)(n.c.dateFrom),j=Object(s.c)(n.c.dateTo),P=Object(s.c)(n.c.paymentStatus),M=Object(s.c)(c.e.token);return Object(p.jsxs)(r.a,{className:d.a.downloadAll,closeOnBgTap:!1,open:a,title:"spa.suppliers.consultPayments.download.voucher",onClose:N,children:[Object(p.jsx)(r.a.Body,{children:Object(p.jsx)(u.b,{uuid:"spa.suppliers.consultPayments.download.voucher.description"})}),Object(p.jsxs)(r.a.Footer,{className:d.a.footer,children:[Object(p.jsx)(o.a,{label:{uuid:"spa.form.cancel"},type:"button",variant:"outlined",onClick:N}),Object(p.jsx)(o.a,{label:{uuid:"spa.form.continue"},type:"button",onClick:function(){if(!M)return;b(n.b.downloadAll({token:M,lastBatch:l.Ub,contractId:m,requestDateFrom:O,requestDateTo:j,conceptPay:T,paymentFilename:_,paymentReference:E,format:"xls",status:P})),N()}})]})]});function N(){i(!1)}}b.defaultProps={}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=61.96d338d0.chunk.js.map