(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[103,314],{312:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return R}));var a=n(0),c=n(5),s=n(16),i=n(8),r=n(3),o=n(6),u=n(118),l=n(147),b=n(79),d=n(187),j=n(50),O=n(489),p=n(82),_=n(488),m=n(494),x=n(515),h=n(517),E=n(490),f=n(568),C=n(38),g=n(11),T=n(99),y=n(80),S=n(39),N=n(51),P=n(530),v=n(607),A=n(429),M=n.n(A),w=n(10);function R(){var e=g.b.useState(!1),t=Object(s.a)(e,2),n=t[0],A=t[1],R=g.b.useState(!1),I=Object(s.a)(R,2),U=I[0],k=I[1],L=g.b.useState(void 0),B=Object(s.a)(L,2),F=B[0],Y=B[1],D=g.b.useState(!1),H=Object(s.a)(D,2),W=H[0],X=H[1],q=g.b.useState(o.fb),G=Object(s.a)(q,2),V=G[0],z=G[1],J=Object(i.b)(),Z=Object(y.g)(),K=Object(C.c)().textGet,Q=Object(T.a)().getValueConfig,$=Object(N.sb)(N.R),ee=Object(i.c)(u.c.fetching),te=Object(i.c)(l.c.exchangeToken),ne=Object(i.c)(l.c.documentNumber),ae=Object(i.c)(u.c.invitationCode),ce=Object(i.c)(u.c.securitySeals),se=Object(i.c)(u.c.firstName),ie=Object(i.c)(u.c.warning),re=Object(v.a)(K,Q),oe=ne?Object(P.a)(K,Q,ne):Object(P.a)(K,Q),ue=K({uuid:"spa.generic.field.error.required"}),le=K({uuid:"spa.onboarding.error.termsAndConditions"}),be=K({uuid:"spa.enrollment.step4.createUser.username.input.label"}),de=K({uuid:"spa.enrollment.step4.createUser.password.input.label"}),je=K({uuid:"spa.enrollment.step4.createUser.password.input.helper"}),Oe=K({uuid:"spa.generic.accessData.error.userInPassword"}),pe=K({uuid:"spa.form.continue"}),_e=K({uuid:"spa.enrollment.securitySeal.modal.title"}),me=S.e.object({username:re,newPassword:oe,generalConditions:Object(d.d)(S.e.boolean.equals(!0),le),securitySeal:Object(d.d)(S.e.number(),ue)}),xe=Object(w.jsx)(j.Lottie,{direction:V,name:"user",play:W,size:"medium"});return g.b.useEffect((function(){J(u.b.securitySealList({exchangeToken:te}))}),[J,te]),Object(w.jsxs)(O.a,{"header-onBack":fe,"header-title":"spa.enrollment.step4.createUser.title",children:[Object(w.jsx)("section",{children:Object(w.jsxs)(_.a,{schema:me,warnings:ie,onSubmit:function(e){return he.apply(this,arguments)},children:[Object(w.jsxs)(C.b,{className:M.a.textSubtitle,tag:"h6",children:[Object(w.jsx)("strong",{children:"".concat(se," ")}),Object(w.jsx)(C.b,{tag:"span",uuid:"spa.enrollment.step4.createUser.subtitle"})]}),Object(w.jsx)("div",{className:M.a.securitySealContainer,children:Object(w.jsx)(f.a,{"aria-label":_e,buttonLabel:pe,modalTitle:Object(w.jsx)(C.b,{tag:"h5",children:_e}),name:"securitySeal",options:ce,selectedAvatar:F,uuidError:"spa.generic.securitySeal.error.required",uuidLabel:"spa.enrollment.step4.createUser.securitySeal.label",onContinue:function(e){Y(e)}})}),Object(w.jsxs)("div",{className:M.a.alignInputs,children:[Object(w.jsx)(m.a,{withoutSpaces:!0,label:be,name:"username",start:xe,onBlur:function(){z(o.ab),X(!0)},onChange:Ee,onFocus:function(){z(o.fb),X(!0)}}),Object(w.jsx)(h.a,{withoutSpaces:!0,helper:je,label:de,name:"newPassword",onChange:Ee})]}),Object(w.jsx)("div",{className:M.a.termsAndConditions,children:Object(w.jsx)(x.a,{label:Object(w.jsxs)("div",{children:[Object(w.jsx)(C.b,{uuid:"spa.enrollment.step4.createUser.generalConditions.input.label1"}),Object(w.jsx)(p.a,{kind:"plain",label:{uuid:"spa.enrollment.step4.createUser.generalConditions.label2"},type:"button",onClick:Ce})]}),name:"generalConditions",onChange:Ee})}),Object(w.jsx)(p.a,{className:M.a.submitButton,label:{uuid:"spa.form.continue"},loading:ee,type:"submit"})]})}),Object(w.jsxs)(E.a,{open:n,title:"spa.enrollment.terms.and.conditions.title",onClose:Ce,children:[Object(w.jsx)(E.a.Body,{children:Object(w.jsx)(C.b,{uuid:"spa.enrollment.terms.and.conditions"})}),Object(w.jsx)(E.a.Footer,{children:Object(w.jsx)(p.a,{label:{uuid:"spa.form.accept"},size:"small",type:"button",onClick:Ce})})]}),Object(w.jsxs)(E.a,{open:U,onClose:fe,children:[Object(w.jsx)(E.a.Body,{children:Object(w.jsx)(C.b,{uuid:"spa.enrollment.cancelSignup"})}),Object(w.jsx)(E.a.Footer,{children:Object(w.jsx)(p.a,{label:{uuid:"spa.form.accept"},type:"button",onClick:function(){J(u.a.clean()),J(b.a.clean()),J(l.a.clean()),Z($)}})})]})]});function he(){return(he=Object(c.a)(Object(a.a)().mark((function e(t){var n,c,s,i;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=t.generalConditions,c=t.newPassword,s=t.username,i=t.securitySeal,!c.includes(s)){e.next=4;break}return J(u.a.updateWarnings({code:r.a,message:r.a,data:{_newPassword:Oe},type:r.i.COR020W.type})),e.abrupt("return");case 4:return e.next=6,J(u.b.createUser({exchangeToken:te,invitationCode:ae,generalConditions:n,newPassword:c,username:s,securitySeal:i.toString()}));case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Ee(){J(u.a.cleanWarnings())}function fe(){k(!U)}function Ce(){A(!n)}}},313:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return _}));n(11);var a=n(80),c=n(8),s=n(118),i=n(147),r=n(270),o=n(82),u=n(38),l=n(136),b=n(51),d=n(489),j=n(429),O=n.n(j),p=n(10);function _(){var e=Object(c.b)(),t=Object(a.g)(),n=Object(b.sb)(b.O);return Object(c.c)(s.c.fetching)?Object(p.jsx)(r.a,{}):Object(p.jsx)(d.a,{children:Object(p.jsxs)("section",{children:[Object(p.jsx)(l.a,{uuid:"eOLogin"}),Object(p.jsx)("div",{className:O.a.textBody,children:Object(p.jsx)(u.b,{uuid:"spa.enrollment.finish.text"})}),Object(p.jsx)(o.a,{label:{uuid:"spa.enrollment.finish.button"},type:"button",onClick:function(){e(s.a.clean()),e(i.a.clean()),t(n)}})]})})}},363:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return _}));var a=n(0),c=n(5),s=(n(11),n(8)),i=n(118),r=n(147),o=n(488),u=n(38),l=n(579),b=n(82),d=n(489),j=n(429),O=n.n(j),p=n(10);function _(){var e=Object(s.b)(),t=Object(u.c)().textGet,n=Object(s.c)(i.c.fetching),j=Object(s.c)(r.c.exchangeToken),_=Object(s.c)(i.c.warning),m=t({uuid:"spa.generic.field.error.required"}),x=t({uuid:"spa.generic.field.error.incorrectData"}),h=Object(l.a)({textErrorData:x,textErrorRequired:m});return Object(p.jsx)(d.a,{"header-onBack":function(){e(i.a.cancelPinPath())},"header-title":"spa.enrollment.title",children:Object(p.jsx)("section",{children:Object(p.jsxs)(o.a,{schema:h,warnings:_,onSubmit:function(e){return E.apply(this,arguments)},children:[Object(p.jsx)(u.b,{className:O.a.byPin,uuid:"spa.enrollment.step3.byPin.subtitle"}),Object(p.jsx)("div",{className:O.a.alignInputs,children:Object(p.jsx)(l.b,{onChange:function(){_&&e(i.a.cleanWarnings())}})}),Object(p.jsx)(b.a,{label:{uuid:"spa.form.continue"},loading:n,type:"submit"})]})})});function E(){return(E=Object(c.a)(Object(a.a)().mark((function t(n){var c,s;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return c=n.debitCardLastFour,s=n.pinCode,t.next=3,e(i.b.byPinStep1({exchangeToken:j,debitCardLastFour:c,pinCode:s}));case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},365:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return _}));n(11);var a=n(80),c=n(8),s=n(118),i=n(147),r=n(270),o=n(82),u=n(38),l=n(136),b=n(51),d=n(489),j=n(429),O=n.n(j),p=n(10);function _(){var e=Object(c.b)(),t=Object(a.g)(),n=Object(b.sb)(b.O);return Object(c.c)(s.c.fetching)?Object(p.jsx)(r.a,{}):Object(p.jsx)(d.a,{children:Object(p.jsxs)("section",{children:[Object(p.jsx)(l.a,{uuid:"eOLogin"}),Object(p.jsx)("div",{className:O.a.textBody,children:Object(p.jsx)(u.b,{uuid:"spa.enrollment.success.associate.intro"})}),Object(p.jsx)(o.a,{label:{uuid:"spa.enrollment.finish.button"},type:"button",onClick:function(){e(s.a.clean()),e(i.a.clean()),t(n)}})]})})}},429:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_SECURITY_SEAL:"SecuritySeal",TYPE_SECURITY_SEAL:"Element",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",byCodeTitle:"_rules_byCodeTitle__yr3wN",byCodeInvitationCode:"_rules_byCodeInvitationCode__1vi5-",byPin:"_rules_byPin__15kE-",haveCodeSubtitle:"_rules_haveCodeSubtitle__1Zpe2",alignInputs:"_rules_alignInputs__5ZcTE",byCodeSubtitle:"_rules_byCodeSubtitle__33HL5",securitySealContainer:"_rules_securitySealContainer__2vwIC",alignInvitationCode:"_rules_alignInvitationCode__1NX5C",textSubtitle:"_rules_textSubtitle__159WN",haveCode:"_rules_haveCode__Kknyv",submitButton:"_rules_submitButton__1hASq",termsAndConditions:"_rules_termsAndConditions__2CP8-",textBody:"_rules_textBody__3hBIX"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=103.8f26b9f4.chunk.js.map