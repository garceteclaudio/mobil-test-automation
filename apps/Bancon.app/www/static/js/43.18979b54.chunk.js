(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[43,311],{380:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return E}));var o=n(0),r=n(5),i=n(16),a=n(11),s=n(8),c=n(149),u=n(79),l=n(270),d=n(489),m=n(38),T=n(82),b=n(147),p=n(74),x=n(99),_=n(6),g=n(109),f=n(606),h=n(428),w=n.n(h),v=n(636),C=n(10);function E(){var e=Object(s.b)(),t=Object(s.c)(c.c.sendFrontDocument),n=Object(s.c)(c.c.sendBackDocument),h=Object(s.c)(c.c.sendSelfie),E=Object(s.c)(b.c.exchangeToken),O=a.b.useState(_.D),S=Object(i.a)(O,2),M=S[0],B=S[1],P=a.b.useState(!0),A=Object(i.a)(P,2),N=A[0],R=A[1],k=Object(x.a)().getValueConfig,j=Object(p.a)(k("spa.onboarding.vu.color")),I=Object(p.a)(k("spa.onboarding.vu.gesturesAmount")),y=Object(p.a)(k("spa.onboarding.vu.disableFaceMoveGesture")),D=Object(p.a)(k("spa.onboarding.vu.smileMinSeconds")),F=Object(p.a)(k("spa.onboarding.vu.smileMaxSeconds")),L=Object(p.a)(k("spa.onboarding.vu.winkMinSeconds")),U=Object(p.a)(k("spa.onboarding.vu.winkMaxSeconds")),G=Object(p.a)(k("spa.onboarding.vu.eyesClosedMinSeconds")),V=Object(p.a)(k("spa.onboarding.vu.eyesClosedMaxSeconds")),W=Object(p.a)(k("spa.onboarding.vu.smileMinimumScore")),H=Object(p.a)(k("spa.onboarding.vu.winkMinimumScore")),K=Object(p.a)(k("spa.onboarding.vu.eyesClosedMinimumScore")),Y=Object(p.a)(k("spa.onboarding.vu.minimumValidGestures")),J=Object(p.a)(k("backend.vu.fraud.api.fingerprint.url")),X=Object(p.a)(k("backend.vu.fraud.api.fingerprint.timeout"));return a.b.useEffect((function(){Q()}),[t,n,h]),N?Object(C.jsx)(l.a,{}):Object(C.jsx)(d.a,{"header-onBack":function(){e(c.a.cleanValidationCodePhone())},"header-title":"spa.onboarding.step6.title",children:Object(C.jsxs)("section",{children:[Object(C.jsx)(m.b,{className:w.a.title,uuid:"spa.onboarding.step6.error.client"}),Object(C.jsx)(T.a,{label:{uuid:"spa.onboarding.step6.recapture"},onClick:function(){t&&n&&!1===h?e(c.a.goToScanDniFront()):Q()}})]})});function Q(){return q.apply(this,arguments)}function q(){return(q=Object(r.a)(Object(o.a)().mark((function n(){var r,i,a,s,u,l,d,m;return Object(o.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(n.prev=0,t){n.next=15;break}return R(!0),n.next=5,Object(f.b)({color:j});case 5:return r=n.sent,i=r.value,a=i.document,s=i.imageBase64,a.gender&&a.order||(u=Object(v.a)(a.rawValue),l=u.gender,d=u.order,a.gender=l,a.order=d),m=JSON.stringify(a),B(m),n.next=12,e(c.b.sendFrontDocument({exchangeToken:E,documentToSave:s,documentData:m}));case 12:R(!1),n.next=16;break;case 15:z();case 16:n.next=21;break;case 18:n.prev=18,n.t0=n.catch(0),R(!1);case 21:case"end":return n.stop()}}),n,null,[[0,18]])})))).apply(this,arguments)}function z(){return Z.apply(this,arguments)}function Z(){return(Z=Object(r.a)(Object(o.a)().mark((function t(){var r,i,a,s;return Object(o.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(t.prev=0,n){t.next=16;break}return R(!0),t.next=5,Object(f.a)({color:j});case 5:return r=t.sent,i=r.value.imageBase64,t.next=9,Object(g.a)({url:J,timeout:X});case 9:return a=t.sent,s=a.fingerPrintDeviceInfo,t.next=13,e(c.b.sendBackDocument({exchangeToken:E,documentToSave:i,documentData:M,fingerPrintDeviceInfo:s}));case 13:R(!1),t.next=17;break;case 16:$();case 17:t.next=23;break;case 19:t.prev=19,t.t0=t.catch(0),R(!1),e(u.a.set({kind:"ERROR",text:{uuid:"spa.onboarding.renaper.capturefront.generic.error"},duration:_.w}));case 23:case"end":return t.stop()}}),t,null,[[0,19]])})))).apply(this,arguments)}function $(){return ee.apply(this,arguments)}function ee(){return(ee=Object(r.a)(Object(o.a)().mark((function t(){var n,r,i;return Object(o.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(t.prev=0,h){t.next=11;break}return R(!0),t.next=5,Object(f.c)({color:j,gesturesAmount:I,disableFaceMoveGesture:y,smileMinSeconds:D,smileMaxSeconds:F,winkMinSeconds:L,winkMaxSeconds:U,eyesClosedMinSeconds:G,eyesClosedMaxSeconds:V,smileMinimumScore:W,winkMinimumScore:H,eyesClosedMinimumScore:K,minimumValidGestures:Y});case 5:return n=t.sent,r=n.value.selfieList,i=JSON.stringify(r),t.next=10,e(c.b.sendSelfie({exchangeToken:E,imagesToSave:i}));case 10:R(!1);case 11:t.next=16;break;case 13:t.prev=13,t.t0=t.catch(0),R(!1);case 16:case"end":return t.stop()}}),t,null,[[0,13]])})))).apply(this,arguments)}}},428:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",presentation:"_rules_presentation__2rnDT",image:"_rules_image__2dV7m",containerText:"_rules_containerText__pu48C",title:"_rules_title__3WK5D",text:"_rules_text__3khoq",nextButton:"_rules_nextButton__3nv4A",skipButton:"_rules_skipButton__6WOgG",finishButton:"_rules_finishButton__VsgGK",subtitle:"_rules_subtitle__bTvVh",inputSelectContainer:"_rules_inputSelectContainer__2j7Df",submitButton:"_rules_submitButton__3FaKR",alert:"_rules_alert__laL5T",alertLottie:"_rules_alertLottie__2sgW7",termsAndConditions:"_rules_termsAndConditions__cNiMg",validateTitle:"_rules_validateTitle__2Nx1p",emailValue:"_rules_emailValue__yLDPW",noteEmail:"_rules_noteEmail__4AmC9",subtitleEmail:"_rules_subtitleEmail__2J0wM",inputContainerEmail:"_rules_inputContainerEmail__2O1ou",resendCode:"_rules_resendCode__lH6Jj",inputContainerPhone:"_rules_inputContainerPhone__1gKy1",securitySealContainer:"_rules_securitySealContainer__1LU5g",onboardingWelcome:"_rules_onboardingWelcome__ijVs1",downloadPrincipal:"_rules_downloadPrincipal__2thE8",logosContainer:"_rules_logosContainer__2uaXe"}},606:function(e,t,n){"use strict";n.d(t,"c",(function(){return m})),n.d(t,"b",(function(){return b})),n.d(t,"a",(function(){return x}));var o=n(0),r=n(2),i=n(5),a=n(26),s=n(28),c={maxInactivitySeconds:60,maxResetsBeforeBlock:20,smileText:"Sonria",closeEyesText:"Cierre sus ojos",winkEyeText:"Cierre un ojo",moveFaceToLeftText:"Mire su hombro Izquierdo",moveFaceToRightText:"Mire su hombro Derecho",minimumAngle:20,maxAngleJumpAllowed:30,showTutorial:1,tutorialTitle:"Siga las instrucciones",tutorialDescription:"Preste atencion para realizar una validacion correcta",tutorialNextButtonText:"Siguiente",closeText:"Cerrar",buttonCloseEnabled:!1,buttonTutorialCloseEnabled:!1,faceCenterText:"Ubic\xe1 tu rostro",hideCircleProgressBar:!1,hideGestureInstructionAnimation:!1,backgroundColor:"",textColor:"",returnAnalysisSelfies:!0,textStepsMoveToBottom:!1,progressBarColor:"",progressCirclesColor:"",validateFrames:!0,clearBackgroundRecommendation:"",lightEnvironmentRecommendation:"",clearFaceRecommendation:"",centerMobileRecommendation:"",resultsTitle:"",resultsSubtitle:"",resultsContinueButtonText:"",watchRecommendationsAgain:"",smileHelpText:"",winkHelpText:"",closeEyesHelpText:"",moveFaceHelpText:"",placeFaceInSilhouette:"",keepMobileFirm:"",avoidMobileMoves:"",clearBackgroundProcessRecommendation:"",cameraNotAvailableTitle:"",cameraNotAvailableDescription:"",understoodText:"",processingText:"",showRoundedTopBar:!1,topBarTitle:"",hideInstructionsText:!1,hideSoundButton:!1,showCloseButtonBorders:!1,showStageIndicator:!1,stageIndicatorColor:"",beginWithoutPreview:!1,centerInstructionGif:!1,showLargeSoundIndicator:!1,soundIndicatorInstructions:"",disableWinkGesture:!1,disableEyesClosedGesture:!1,disableSmileGesture:!1,showResultInFailure:!0,showFullScreenLoader:!1,validatingText:"",middleInstructionGif:!1,welcomeText:"",showFinalMessage:!1,finalSuccessMessage:"",finalFailMessage:"",resultsCompactVersion:!1,showCenterProgressCircle:!1,centerProgressCircleColor:"",disableWelcomeAudio:!1,disableInstructionsAudios:!1,showLeftInstructionGif:!1,showHorizontalProgress:!1,showBottomTip:!1,bottomTipText:"",showBottomCloseText:!1,bottomCloseTextColor:"",bottomCloseText:"",enableScreenRecording:!1,videoQualityLevel:3,permissionDeniedTitle:"",cameraAccessText:"",enableText:"",exitText:"",enableStartupDarkEffect:!1},u={title:"Frente del Documento",instructions:"Ubique el documento dentro de la pantalla. Sostenga firmemente y tomaremos la foto por usted.",scanCountry:1,showTutorial:1,tutorialTitle:"",tutorialDescription:"",faceDetectionMaximumWait:1e4,tutorialNextButtonText:"Continuar",showPreview:1,previewConfirmationText:"",buttonCloseTutorialEnabled:0,focusOnTouch:!1,noDocumentFound:"",faceNotFound:"",previewConfirmationTitle:"",yesPreviewText:"",noPreviewText:"",noDocumentFoundTitle:"",faceNotFoundTitle:"",okText:"",enableAudio:!1,showCustomBackground:!1,enableScreenRecording:!1,videoQualityLevel:3,permissionDeniedTitle:"",cameraAccessText:"",enableText:"",exitText:"",enableBlur:!1,blurThreshold:0,blurNotTakePhoto:!1,imageBlurredTitle:"",imageBlurredMessage:"",returnExtraImages:!1,extraImagesAmount:0},l={title:"Dorso del Documento",instructions:"Ubique el documento dentro de la pantalla. Sostenga firmemente y tomaremos la foto por usted.",scanCountry:1,barcodeDetectionMaximumWait:1e4,showTutorial:1,tutorialTitle:"",tutorialDescription:"",tutorialNextButtonText:"Continuar",showPreview:1,previewConfirmationText:"",buttonCloseTutorialEnabled:0,focusOnTouch:!1,documentNotDetected:"",codeNotRead:"",yesText:"",noText:"",documentPictureNotDetected:"",previewConfirmationTitle:"",yesPreviewText:"",noPreviewText:"",enableAudio:!1,showCustomBackground:!1,enableScreenRecording:!1,videoQualityLevel:3,permissionDeniedTitle:"",cameraAccessText:"",enableText:"",exitText:"",enableBlur:!1,blurThreshold:0,blurNotTakePhoto:!1,imageBlurredTitle:"",imageBlurredMessage:"",returnExtraImages:!1,extraImagesAmount:0},d="onboarding";function m(e){return T.apply(this,arguments)}function T(){return(T=Object(i.a)(Object(o.a)().mark((function e(t){var n;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(a.c)();case 2:if(e.sent){e.next=5;break}throw a.a.CORDOVA_UNAVAILABLE;case 5:return n=Object(r.a)(Object(r.a)({},c),t),e.abrupt("return",new Promise((function(e,t){try{window.serviceOnBoardingSDK.captureSelfie(n.gesturesAmount,n.disableFaceMoveGesture,n.maxInactivitySeconds,n.maxResetsBeforeBlock,n.smileText,n.closeEyesText,n.winkEyeText,n.moveFaceToLeftText,n.moveFaceToRightText,n.smileMinSeconds,n.smileMaxSeconds,n.winkMinSeconds,n.winkMaxSeconds,n.eyesClosedMinSeconds,n.eyesClosedMaxSeconds,n.minimumAngle,n.maxAngleJumpAllowed,n.showTutorial,n.tutorialTitle,n.tutorialDescription,n.tutorialNextButtonText,n.color,n.closeText,n.buttonCloseEnabled,n.buttonTutorialCloseEnabled,n.faceCenterText,n.smileMinimumScore,n.winkMinimumScore,n.eyesClosedMinimumScore,n.minimumValidGestures,n.hideCircleProgressBar,n.hideGestureInstructionAnimation,n.backgroundColor,n.textColor,n.returnAnalysisSelfies,n.textStepsMoveToBottom,n.progressBarColor,n.progressCirclesColor,n.validateFrames,n.clearBackgroundRecommendation,n.lightEnvironmentRecommendation,n.clearFaceRecommendation,n.centerMobileRecommendation,n.resultsTitle,n.resultsSubtitle,n.resultsContinueButtonText,n.watchRecommendationsAgain,n.smileHelpText,n.winkHelpText,n.closeEyesHelpText,n.moveFaceHelpText,n.placeFaceInSilhouette,n.keepMobileFirm,n.avoidMobileMoves,n.clearBackgroundProcessRecommendation,n.cameraNotAvailableTitle,n.cameraNotAvailableDescription,n.understoodText,n.processingText,n.showRoundedTopBar,n.topBarTitle,n.hideInstructionsText,n.hideSoundButton,n.showCloseButtonBorders,n.showStageIndicator,n.stageIndicatorColor,n.beginWithoutPreview,n.centerInstructionGif,n.showLargeSoundIndicator,n.soundIndicatorInstructions,n.disableWinkGesture,n.disableEyesClosedGesture,n.disableSmileGesture,n.showResultInFailure,n.showFullScreenLoader,n.validatingText,n.middleInstructionGif,n.welcomeText,n.showFinalMessage,n.finalSuccessMessage,n.finalFailMessage,n.resultsCompactVersion,n.showCenterProgressCircle,n.centerProgressCircleColor,n.disableWelcomeAudio,n.disableInstructionsAudios,n.showLeftInstructionGif,n.showHorizontalProgress,n.showBottomTip,n.bottomTipText,n.showBottomCloseText,n.bottomCloseTextColor,n.bottomCloseText,n.enableScreenRecording,n.videoQualityLevel,n.permissionDeniedTitle,n.cameraAccessText,n.enableText,n.exitText,n.enableStartupDarkEffect,(function(t){if(!t||"string"===typeof t)throw t;e({code:s.a.SUCCESS,value:t})}),(function(e){t(new s.b(s.a.ERROR,d,e))}))}catch(o){t(new s.b(s.a.ERROR_UNKNOWN,d,s.c))}})));case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function b(e){return p.apply(this,arguments)}function p(){return(p=Object(i.a)(Object(o.a)().mark((function e(t){var n;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(a.c)();case 2:if(e.sent&&window.serviceOnBoardingSDK){e.next=5;break}throw a.a.CORDOVA_UNAVAILABLE;case 5:return n=Object(r.a)(Object(r.a)({},u),t),e.abrupt("return",new Promise((function(e,t){try{window.serviceOnBoardingSDK.captureFront(n.title,n.instructions,n.scanCountry,n.showTutorial,n.tutorialTitle,n.tutorialDescription,n.faceDetectionMaximumWait,n.tutorialNextButtonText,n.showPreview,n.previewConfirmationText,n.color,n.buttonCloseTutorialEnabled,n.focusOnTouch,n.noDocumentFound,n.faceNotFound,n.previewConfirmationTitle,n.yesPreviewText,n.noPreviewText,n.noDocumentFoundTitle,n.faceNotFoundTitle,n.okText,n.enableAudio,n.showCustomBackground,n.enableScreenRecording,n.videoQualityLevel,n.permissionDeniedTitle,n.cameraAccessText,n.enableText,n.exitText,n.enableBlur,n.blurThreshold,n.blurNotTakePhoto,n.imageBlurredTitle,n.imageBlurredMessage,n.returnExtraImages,n.extraImagesAmount,(function(t){if(!t||"string"===typeof t)throw t;e({code:s.a.SUCCESS,value:t})}),(function(e){t(new s.b(s.a.ERROR,d,e))}))}catch(o){t(new s.b(s.a.ERROR_UNKNOWN,d,s.c))}})));case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function x(e){return _.apply(this,arguments)}function _(){return(_=Object(i.a)(Object(o.a)().mark((function e(t){var n;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(a.c)();case 2:if(e.sent&&window.serviceOnBoardingSDK){e.next=5;break}throw a.a.CORDOVA_UNAVAILABLE;case 5:return n=Object(r.a)(Object(r.a)({},l),t),e.abrupt("return",new Promise((function(e,t){try{window.serviceOnBoardingSDK.captureBack(n.title,n.instructions,n.scanCountry,n.barcodeDetectionMaximumWait,n.showTutorial,n.tutorialTitle,n.tutorialDescription,n.tutorialNextButtonText,n.showPreview,n.previewConfirmationText,n.color,n.buttonCloseTutorialEnabled,n.focusOnTouch,n.documentNotDetected,n.codeNotRead,n.yesText,n.noText,n.documentPictureNotDetected,n.previewConfirmationTitle,n.yesPreviewText,n.noPreviewText,n.enableAudio,n.showCustomBackground,n.enableScreenRecording,n.videoQualityLevel,n.permissionDeniedTitle,n.cameraAccessText,n.enableText,n.exitText,n.enableBlur,n.blurThreshold,n.blurNotTakePhoto,n.imageBlurredTitle,n.imageBlurredMessage,n.returnExtraImages,n.extraImagesAmount,(function(t){if(!t||"string"===typeof t)throw t;e({code:s.a.SUCCESS,value:t})}),(function(e){t(new s.b(s.a.ERROR,d,e))}))}catch(o){t(new s.b(s.a.ERROR_UNKNOWN,d,s.c))}})));case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}},636:function(e,t,n){"use strict";function o(e){var t=e.split("@"),n="",o="";return t.length>9?(n=t[8],o=t[10]):(n=t[3],o=t[0]),{gender:n,order:o}}n.d(t,"a",(function(){return o}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=43.18979b54.chunk.js.map