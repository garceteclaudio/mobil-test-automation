(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[245],{144:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return i}));var n=r(9),a=r(1),c="fetching",u=Object(a.b)(c,["set","toggle"]),o=Object(a.d)(!1,(function(e){var t=e.addCase;t(u.set,(function(e,t){return t.payload})),t(u.toggle,(function(e){return!e}))})),i=Object(n.a)({},c,o)},154:function(e,t,r){"use strict";r.d(t,"c",(function(){return p})),r.d(t,"b",(function(){return l})),r.d(t,"a",(function(){return b})),r.d(t,"d",(function(){return h}));var n=r(9),a="files",c={fetching:!1,fetchedFile:!1,error:void 0,warning:void 0},u=r(2),o=r(12),i=r(1),s=r(134),b=Object(i.b)(a,["clean","setFetchedFile"]),f=r(0),j=r(5),l=Object(i.c)(a,{generatePdf:function(e,t){return Object(j.a)(Object(f.a)().mark((function r(){var n,a,c,o;return Object(f.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,a=e.token,c=e.idTransaction,r.next=4,Object(s.b)({token:a,idTransaction:c});case 4:if(o=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(s.c)(o)){r.next=9;break}return r.abrupt("return",n(Object(u.a)(Object(u.a)({},o),s.a[o.code])));case 9:return r.abrupt("return",o);case 10:case"end":return r.stop()}}),r)})))()}}),O=r(3),d=Object(i.d)(c,(function(e){var t=e.addCase,r=e.addMatcher;t(b.clean,(function(){return Object(u.a)({},c)})),t(l.generatePdf.fulfilled,(function(e,t){var r=t.payload;if(e.fetching=!1,e.error=c.error,e.warning=c.warning,r){var n=r.data,a=n.PDF,u=n.activityName;e.filename=u,e.content=a,e.fetchedFile=Boolean(u)&&Boolean(a)}})),t(b.setFetchedFile,(function(e,t){var r=t.payload;e.fetchedFile=r})),r((function(e){return Object(o.b)(e,a)}),(function(e){e.fetching=!0,e.error=c.error,e.warning=c.warning})),r((function(e){return Object(o.c)(e,a)}),(function(e,t){var r=t.payload;e.fetching=!1,Object(O.x)(s.a,r.code)?e.warning=r:e.error=r}))}));function p(e){return e[a]}p.fetching=Object(i.e)(p,(function(e){return e.fetching})),p.error=Object(i.e)(p,(function(e){return e.error})),p.warning=Object(i.e)(p,(function(e){return e.warning})),p.filename=Object(i.e)(p,(function(e){return e.filename})),p.content=Object(i.e)(p,(function(e){return e.content})),p.fetchedFile=Object(i.e)(p,(function(e){return e.fetchedFile}));var h=Object(n.a)({},a,d)},173:function(e,t,r){"use strict";r.d(t,"c",(function(){return p})),r.d(t,"b",(function(){return l})),r.d(t,"a",(function(){return b})),r.d(t,"d",(function(){return h}));var n=r(9),a="landmarks",c={fetching:!1,error:void 0,warning:void 0,atms:[],branches:[],hasSearch:!1,showBranches:!0,showATMs:!1},u=r(2),o=r(12),i=r(1),s=r(132),b=Object(i.b)(a,["clean","showBranches","showATMs"]),f=r(0),j=r(5),l=Object(i.c)(a,{listLandmarks:function(e,t){return Object(j.a)(Object(f.a)().mark((function r(){var n,a;return Object(f.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(n=t.rejectWithValue,e){r.next=3;break}return r.abrupt("return",null);case 3:return r.next=5,Object(s.a)(Object(u.a)({},e));case 5:if(a=r.sent){r.next=8;break}return r.abrupt("return",null);case 8:if(!Object(s.c)(a)){r.next=10;break}return r.abrupt("return",n(Object(u.a)(Object(u.a)({},a),s.b[a.code])));case 10:return r.abrupt("return",a);case 11:case"end":return r.stop()}}),r)})))()}}),O=r(3),d=Object(i.d)(c,(function(e){var t=e.addCase,r=e.addMatcher;t(b.clean,(function(){return Object(u.a)({},c)})),t(b.showBranches,(function(e,t){var r=t.payload;e.showBranches=r})),t(b.showATMs,(function(e,t){var r=t.payload;e.showATMs=r})),t(l.listLandmarks.fulfilled,(function(e,t){var r=t.payload;if(e.fetching=!1,e.error=c.error,e.warning=c.warning,r){var n=r.data,a=n.branches,u=n.atms;e.branches=a,e.atms=u,e.hasSearch=!0}})),r((function(e){return Object(o.b)(e,a)}),(function(e){e.fetching=!0,e.error=c.error,e.warning=c.warning})),r((function(e){return Object(o.c)(e,a)}),(function(e,t){var r=t.payload;e.fetching=!1,Object(O.x)(s.b,r.code)?e.warning=r:e.error=r}))}));function p(e){return e[a]}p.fetching=Object(i.e)(p,(function(e){return e.fetching})),p.error=Object(i.e)(p,(function(e){return e.error})),p.warning=Object(i.e)(p,(function(e){return e.warning})),p.atms=Object(i.e)(p,(function(e){return e.atms})),p.branches=Object(i.e)(p,(function(e){return e.branches})),p.showATMs=Object(i.e)(p,(function(e){return e.showATMs})),p.showBranches=Object(i.e)(p,(function(e){return e.showBranches})),p.hasSearch=Object(i.e)(p,(function(e){return e.hasSearch})),p.isEmptyAtms=Object(i.e)(p,(function(e){var t;return!(null!==(t=e.atms)&&void 0!==t&&t.length)&&e.showATMs})),p.isEmptyBranches=Object(i.e)(p,(function(e){var t;return!(null!==(t=e.branches)&&void 0!==t&&t.length)&&e.showBranches}));var h=Object(n.a)({},a,d)},52:function(e,t,r){"use strict";r.d(t,"b",(function(){return n})),r.d(t,"a",(function(){return a}));var n="loan",a={fetching:!1,offerLoansNotification:[],loans:void 0,error:void 0,loanOffer:void 0,loanList:void 0,searchTerms:void 0,amount:void 0,contract:void 0,loanTerms:[],loanSimulation:void 0,selectedLoanTerm:void 0,isTyCOffer:!1,loanGeneral:void 0,pendingInstallment:void 0,loanInstallments:void 0,loanId:void 0,idCreateLoanTransaction:void 0,fetchingOffer:!1,fetchingLoanList:!1,installments:void 0,isPreTicket:!1}},61:function(e,t,r){"use strict";r.d(t,"a",(function(){return s}));var n=r(0),a=r(2),c=r(5),u=r(1),o=r(31),i=r(52),s=Object(u.c)(i.b,{listLoansForWidget:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u,i,s;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(c=t.rejectWithValue,u=e.token){r.next=4;break}return r.abrupt("return",null);case 4:return r.next=6,Object(o.k)({token:u});case 6:if(i=r.sent){r.next=9;break}return r.abrupt("return",null);case 9:if(!Object(o.n)(i)){r.next=11;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},i),o.l[i.code])));case 11:return s=b(i),r.abrupt("return",s);case 13:case"end":return r.stop()}}),r)})))()},getLoanOffer:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u,i;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return c=t.rejectWithValue,u=e.token,r.next=4,Object(o.j)({token:u});case 4:if(i=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(o.n)(i)){r.next=9;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},i),o.l[i.code])));case 9:return r.abrupt("return",i);case 10:case"end":return r.stop()}}),r)})))()},getLoanList:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u,i;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return c=t.rejectWithValue,u=e.token,r.next=4,Object(o.i)({token:u});case 4:if(i=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(o.n)(i)){r.next=9;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},i),o.l[i.code])));case 9:return r.abrupt("return",i);case 10:case"end":return r.stop()}}),r)})))()},searchLoanTerms:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return c=t.rejectWithValue,r.next=3,Object(o.m)(e);case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(o.n)(u)){r.next=8;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},u),o.l[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()},getLoanDetailTerms:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return c=t.rejectWithValue,r.next=3,Object(o.g)(e);case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(o.n)(u)){r.next=8;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},u),o.l[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()},getLoanDetail:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return c=t.rejectWithValue,r.next=3,Object(o.f)(Object(a.a)({},e));case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(o.n)(u)){r.next=8;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},u),o.l[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()},downloadInstallment:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return c=t.rejectWithValue,r.next=3,Object(o.d)(Object(a.a)({},e));case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(o.n)(u)){r.next=8;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},u),o.l[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()},createLoan:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return c=t.rejectWithValue,r.next=3,Object(o.a)(e);case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(o.n)(u)){r.next=8;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},u),o.l[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()},downloadSettlmentReceipt:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return c=t.rejectWithValue,r.next=3,Object(o.e)(Object(a.a)({},e));case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(o.n)(u)){r.next=8;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},u),o.l[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()},listInstallments:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return c=t.rejectWithValue,r.next=3,Object(o.h)(e);case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(o.n)(u)){r.next=8;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},u),o.l[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()},downloadLastReceipt:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return c=t.rejectWithValue,r.next=3,Object(o.c)(Object(a.a)({},e));case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(o.n)(u)){r.next=8;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},u),o.l[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()},downloadContractFile:function(e,t){return Object(c.a)(Object(n.a)().mark((function r(){var c,u;return Object(n.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return c=t.rejectWithValue,r.next=3,Object(o.b)(Object(a.a)({},e));case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(o.n)(u)){r.next=8;break}return r.abrupt("return",c(Object(a.a)(Object(a.a)({},u),o.l[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()}});function b(e){var t=e.code,r=e.idTransaction,n=e.message,a=e.data,c=a.loans,u=a.offerLoansNotification;return{code:t,idTransaction:r,message:n,data:{loans:null===c||void 0===c?void 0:c.map((function(e){return{idProduct:e.idProduct,currency:e.currency,balance:e.balance,productAlias:e.productAlias,shortLabel:e.shortLabel}})),offerLoansNotification:null===u||void 0===u?void 0:u.map((function(e){return{productId:e.productId,message:e.message,origin:e.origin,lineId:e.lineId,deposit:e.deposit}}))}}}},71:function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var n=r(1),a=r(52),c=Object(n.b)(a.b,["clean","setContractObject","setLoanAmount","setLoanTerm","setTyCOffer","cleanStep1","cleanStep2","cleanStep3","cleanStep4","cleanReceipt","cleanInstallments","setPreTicket"])},89:function(e,t,r){"use strict";r.d(t,"c",(function(){return a})),r.d(t,"e",(function(){return p})),r.d(t,"d",(function(){return d})),r.d(t,"b",(function(){return l})),r.d(t,"a",(function(){return b})),r.d(t,"f",(function(){return x}));var n=r(9),a="legacy",c={fetching:!1,legacyFeatures:{},featureGroups:[],error:void 0,legacyBackendError:!1,warning:void 0},u=r(2),o=r(12),i=r(1),s=r(127),b=Object(i.b)(a,["clean"]),f=r(0),j=r(5),l=Object(i.c)(a,{getLegacyInfo:function(e,t){return Object(j.a)(Object(f.a)().mark((function r(){var n,a,c;return Object(f.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(n=t.rejectWithValue,a=e.accessToken){r.next=4;break}return r.abrupt("return",null);case 4:return r.next=6,Object(s.b)({accessToken:a});case 6:if(c=r.sent){r.next=9;break}return r.abrupt("return",null);case 9:if(!Object(s.d)(c)){r.next=11;break}return r.abrupt("return",n(Object(u.a)(Object(u.a)({},c),s.c[c.code])));case 11:return r.abrupt("return",c);case 12:case"end":return r.stop()}}),r)})))()}}),O=r(3),d=Object(i.d)(c,(function(e){var t=e.addCase,r=e.addMatcher;t(b.clean,(function(){return Object(u.a)({},c)})),t(l.getLegacyInfo.fulfilled,(function(e,t){var r=t.payload;if(e.fetching=!1,e.error=c.error,e.warning=c.warning,r){var n=r.data,a=n.legacyFeatures,u=n.featureGroups;e.legacyFeatures=a,e.featureGroups=u}})),r((function(e){return Object(o.b)(e,a)}),(function(e){e.fetching=!0,e.error=c.error,e.warning=c.warning})),r((function(e){return Object(o.c)(e,a)}),(function(e,t){var r=t.payload;e.fetching=!1,Object(O.x)(s.c,r.code)?e.warning=r:e.error=r}))}));function p(e){return e[a]}p.fetching=Object(i.e)(p,(function(e){return e.fetching})),p.error=Object(i.e)(p,(function(e){return e.error})),p.warning=Object(i.e)(p,(function(e){return e.warning})),p.legacyFeatures=Object(i.e)(p,(function(e){return e.legacyFeatures})),p.featureGroups=Object(i.e)(p,(function(e){return e.featureGroups})),p.legacyBackendError=Object(i.e)(p,(function(e){return e.legacyBackendError}));var h=r(30),v=r(11),g=r(6),w=r(8),k=r(33);function x(e){var t=Object(w.b)(),r=Object(w.c)(p.featureGroups),n=Object(w.c)(k.e.token),a=Object(w.c)(p.legacyFeatures);return v.b.useEffect((function(){n&&null===r&&Object.keys(a).length===g.Sb&&t(l.getLegacyInfo({accessToken:n}))}),[n,t,r,a]),n?!!r&&(r.reduce(function e(t,r){var n=Object.assign({},r);if(Object.defineProperty(n,"parent",{value:this}),!n.sections)return[].concat(Object(h.a)(t),[n]);var a=n.sections.reduce(e.bind(n),[]);return[].concat(Object(h.a)(t),[n],Object(h.a)(a))}.bind(void 0),[]).find((function(t){return t.legacy===e}))||null):null}Object(n.a)({},a,d)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=main~c478cef6.02b1e8e4.chunk.js.map