(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[127,97,199,311],{361:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return A}));var a=n(0),o=n(2),r=n(5),i=n(16),s=n(11),l=n(39),c=n(8),u=n(149),d=n(187),_=n(50),b=n(147),E=n(270),m=n(489),O=n(38),j=n(82),T=n(503),h=n(515),f=n(490),p=n(488),N=n(428),C=n.n(N),M=n(10);function A(){var e=Object(O.c)().textGet,t=Object(c.b)(),n=s.b.useState(!1),N=Object(i.a)(n,2),A=N[0],x=N[1],P=Object(c.c)(u.c.fetching),g=Object(c.c)(u.c.branchOffices),L=Object(c.c)(b.c.exchangeToken),R=Object(c.c)(u.c.warning),v=e({uuid:"spa.onboarding.error.termsAndConditions"}),I=e({uuid:"spa.onboarding.step9.branch.error.required"}),S=e({uuid:"spa.onboarding.step9.branch.label"}),y=l.e.object({branch:Object(d.d)(l.e.string.required(),I),termConditions:Object(d.d)(l.e.boolean.equals(!0),v)});if(s.b.useEffect((function(){L&&t(u.b.preStep9({exchangeToken:L}))}),[t,L]),P||!g.length)return Object(M.jsx)(E.a,{});var B=g.map((function(e){return function(e){var t=e.id,n=e.name,a=e.address,o="".concat(n," - ").concat(t),r=a;return{value:t,searchKey:o,label:Object(M.jsx)("div",{className:C.a.option,children:Object(M.jsxs)(O.b,{className:C.a.labelOptionsText,color:"gray-light",tag:"span",children:[o,"  ",r]})})}}(e)}));return Object(M.jsx)(m.a,{"header-onBack":function(){t(u.a.cleanAddresData())},"header-title":"spa.onboarding.step9.title",children:Object(M.jsxs)("section",{children:[Object(M.jsxs)(p.a,{schema:y,warnings:R,onSubmit:function(e){return k.apply(this,arguments)},children:[Object(M.jsx)(O.b,{className:C.a.title,uuid:"spa.onboarding.step9.text1"}),Object(M.jsxs)("div",{className:C.a.inputSelectContainer,children:[Object(M.jsx)(T.a,{label:S,name:"branch",options:B}),Object(M.jsx)(_.Alert,{variant:"info",children:Object(M.jsxs)("div",{className:C.a.alert,children:[Object(M.jsx)(_.Lottie,{play:!0,className:C.a.alertLottie,name:"info",size:"small"}),Object(M.jsx)(O.b,{uuid:"spa.onboarding.step9.termsAndConditions.text"})]})}),Object(M.jsx)(h.a,{label:Object(M.jsxs)("div",{className:C.a.termsAndConditions,children:[Object(M.jsx)(O.b,{uuid:"spa.onboarding.step9.termsAndConditions.label1"}),Object(M.jsx)(j.a,{kind:"plain",label:{uuid:"spa.onboarding.step9.termsAndConditions.label2"},type:"button",onClick:F})]}),name:"termConditions",onChange:function(){t(u.a.cleanWarnings())}})]}),Object(M.jsx)(j.a,{label:{uuid:"spa.form.continue"},loading:P,type:"submit"})]}),Object(M.jsxs)(f.a,{open:A,title:"spa.enrollment.terms.and.conditions.title",onClose:F,children:[Object(M.jsx)(f.a.Body,{children:Object(M.jsx)(O.b,{uuid:"spa.enrollment.terms.and.conditions"})}),Object(M.jsx)(f.a.Footer,{children:Object(M.jsx)(j.a,{label:{uuid:"spa.form.accept"},type:"button",onClick:F})})]})]})});function F(){x(!A)}function k(){return(k=Object(r.a)(Object(a.a)().mark((function e(n){return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t(u.b.sendBranchOfficeData(Object(o.a)({exchangeToken:L},n)));case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},428:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",presentation:"_rules_presentation__2rnDT",image:"_rules_image__2dV7m",containerText:"_rules_containerText__pu48C",title:"_rules_title__3WK5D",text:"_rules_text__3khoq",nextButton:"_rules_nextButton__3nv4A",skipButton:"_rules_skipButton__6WOgG",finishButton:"_rules_finishButton__VsgGK",subtitle:"_rules_subtitle__bTvVh",inputSelectContainer:"_rules_inputSelectContainer__2j7Df",submitButton:"_rules_submitButton__3FaKR",alert:"_rules_alert__laL5T",alertLottie:"_rules_alertLottie__2sgW7",termsAndConditions:"_rules_termsAndConditions__cNiMg",validateTitle:"_rules_validateTitle__2Nx1p",emailValue:"_rules_emailValue__yLDPW",noteEmail:"_rules_noteEmail__4AmC9",subtitleEmail:"_rules_subtitleEmail__2J0wM",inputContainerEmail:"_rules_inputContainerEmail__2O1ou",resendCode:"_rules_resendCode__lH6Jj",inputContainerPhone:"_rules_inputContainerPhone__1gKy1",securitySealContainer:"_rules_securitySealContainer__1LU5g",onboardingWelcome:"_rules_onboardingWelcome__ijVs1",downloadPrincipal:"_rules_downloadPrincipal__2thE8",logosContainer:"_rules_logosContainer__2uaXe"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var a=n(2),o=n(16),r=n(19),i=n(11),s=n(502),l=n(505),c=n(41),u=n(6),d=n(79),_=n(8),b=n(493),E=n.n(b),m=n(10),O=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],j=E.a.NAME_FORM,T=E.a.TYPE_FORM;function h(e){var t=e,n=t.ariaLabel,b=t.ariaLabelledby,E=t.schema,h=t.onSubmit,f=t.children,p=t.warnings,N=t.isRequiredToast,C=t.isResetForm,M=Object(r.a)(t,O),A=Object(_.b)(),x=Object(s.e)({resolver:Object(l.a)(E)}),P=x.handleSubmit,g=x.setError,L=x.formState.errors,R=x.reset,v=Object.keys(L),I=i.b.useState(!1),S=Object(o.a)(I,2),y=S[0],B=S[1],F=i.b.useCallback((function(){N&&y&&A(d.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:u.w})),B(!1)}),[A,N,y]),k=i.b.useCallback((function(){R()}),[R]);return i.b.useEffect((function(){p&&Object.keys(p.data).map((function(e){var t=e.startsWith(u.Nb)?e.slice(u.fb):e;return g(t,{message:p.data[e]},{shouldFocus:!1}),null})),v.length>u.Sb&&F(),C&&k()}),[v.length,C,k,g,F,p]),Object(m.jsx)(s.b,Object(a.a)(Object(a.a)(Object(a.a)({},x),M),{},{children:Object(m.jsx)(c.a,{noValidate:!0,"aria-label":n,"aria-labelledby":b,name:j,tag:"form",type:T,onSubmit:P(h,(function(){return B(!y)})),children:f})}))}h.useContext=s.f,h.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var a=n(2),o=n(19),r=(n(11),n(41)),i=n(136),s=n(82),l=n(38),c=n(101),u=n(491),d=n.n(u),_={name:d.a.NAME_EXTERNAL_CONTAINER,type:d.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},b=n(492),E=n.n(b),m=n(10),O=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function j(e){var t=e,n=t["header-onBack"],u=t["header-title"],d=t.children,_=t.name,b=t.type,j=t.headerClassName,T=t.showLogo,h=Object(o.a)(t,O),f=Boolean(n||u),p=Object(r.c)(!u&&E.a.onlyRow,j),N=Object(r.c)(T&&E.a.step1Logo),C=Object(r.c)(T&&E.a.hasLogo);return Object(m.jsxs)(c.a,{children:[T&&Object(m.jsx)("div",{className:N,children:Object(m.jsx)(i.a,{alt:"logo",uuid:"logo150Login"})}),Object(m.jsx)(r.a,Object(a.a)(Object(a.a)({name:_,tag:"article",type:b},h),{},{children:Object(m.jsxs)("article",{className:C,children:[f&&Object(m.jsxs)("header",{className:p,children:[n&&Object(m.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),u&&Object(m.jsx)(l.b,{tag:"h5",uuid:u})]}),d]})}))]})}j.defaultProps=_},490:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),o=n(19),r=n(11),i=n(41),s=n(50),l=n(495),c=n.n(l),u=(n(496),n(38)),d=n(82),_=n(10),b=["ariaLabelledBy","id","children","title","onClose","hasCloseIcon"],E=c.a.TYPE_MODAL,m=c.a.NAME_MODAL;function O(e){var t=e,n=t.ariaLabelledBy,l=t.id,c=t.children,O=t.title,j=t.onClose,T=t.hasCloseIcon,h=Object(o.a)(t,b),f="modal-header-".concat(l||""),p="string"===typeof O?f:n,N="string"===typeof O?Object(_.jsx)(u.b,{id:f,tag:"h4",uuid:O}):O;return Object(_.jsx)(i.a,{name:m,tag:"div",type:E,children:Object(_.jsxs)(s.Modal,Object(a.a)(Object(a.a)({ariaLabelledBy:p,onClose:j},h),{},{children:[Object(_.jsx)(s.Modal.Header,{children:O&&Object(_.jsxs)(r.b.Fragment,{children:[N,T&&Object(_.jsx)(d.a,{icon:"close",kind:"icon",label:{uuid:"spa.a11y.buttons.close.modal"},onClick:j})]})}),c]}))})}O.defaultProps={ariaLabelledBy:"",closeOnBgTap:!0,hasCloseIcon:!0,initialFocusElementId:"",title:""},O.Body=function(e){var t=e.children;return Object(_.jsx)(s.Modal.Body,{children:t})},O.Footer=function(e){var t=e.children,n=e.className;return Object(_.jsx)(s.Modal.Footer,{className:n,children:t})}},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},495:function(e,t,n){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},496:function(e,t,n){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},503:function(e,t,n){"use strict";n.d(t,"a",(function(){return T}));var a=n(272),o=n(2),r=n(16),i=n(19),s=n(11),l=n(50),c=n(41),u=n(488),d=n(516),_=n.n(d),b=n(10),E=["id","name","methods","options","defaultOption","onSelectOption"],m=_.a.NAME_INPUT_SELECT,O=_.a.TYPE_INPUT_SELECT,j=s.b.memo((function(e){var t,n=e.id,a=e.name,u=e.methods,d=e.options,_=e.defaultOption,j=e.onSelectOption,T=Object(i.a)(e,E),h=u.register,f=u.formState,p=u.setValue,N=u.watch,C=f.errors,M="".concat(a),A=s.b.useState(_),x=Object(r.a)(A,2),P=x[0],g=x[1];N(M);var L=s.b.useRef(null),R=C[a];return s.b.useEffect((function(){null!==_&&void 0!==_&&_.value&&p(M,null===_||void 0===_?void 0:_.value,{shouldValidate:!0})}),[null===_||void 0===_?void 0:_.value,M,p]),s.b.useEffect((function(){L.current&&L.current.blur()}),[R]),s.b.useEffect((function(){P||g(_)}),[_,P]),Object(b.jsx)(c.a,{name:m,type:O,children:Object(b.jsx)(l.SelectField,Object(o.a)(Object(o.a)(Object(o.a)({defaultOption:P,id:n||a,options:d},h(M)),R&&{error:null===(t=R.message)||void 0===t?void 0:t.toString()}),{},{ref:L,onSelectOption:function(e){p(M,e.value,{shouldValidate:!0}),j&&j(e)}},T))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function T(e){var t=u.a.useContext(),n=e,r=Object.assign({},(Object(a.a)(n),n));return Object(b.jsx)(j,Object(o.a)({methods:t},r))}},515:function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var a=n(2),o=n(16),r=n(19),i=n(11),s=n(50),l=n(41),c=n(488),u=n(520),d=n.n(u),_=n(10),b=["id","name","methods","onChange","isChecked"],E=d.a.NAME_INPUT_CHECKBOX,m=d.a.TYPE_INPUT_CHECKBOX,O=i.b.memo((function(e){var t,n=e.id,c=e.name,u=e.methods,d=e.onChange,O=e.isChecked,j=Object(r.a)(e,b),T=i.b.useState(O),h=Object(o.a)(T,2),f=h[0],p=h[1],N=u.register,C=u.formState,M=u.setValue,A=u.clearErrors,x=C.errors,P="".concat(c);i.b.useEffect((function(){void 0!==O&&(p(O),M(P,O,{shouldValidate:!0}))}),[O,P,M]);var g=x[c];return Object(_.jsx)(l.a,{name:E,type:m,children:Object(_.jsx)(s.Checkbox,Object(a.a)(Object(a.a)(Object(a.a)({id:n||c},g&&{error:null===(t=g.message)||void 0===t?void 0:t.toString()}),N(P)),{},{isChecked:f,onChange:function(e){var t=!f;p(t),M(P,t),d&&d(e),A([P])}},j))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function j(e){var t=c.a.useContext();return Object(_.jsx)(O,Object(a.a)({methods:t},e))}j.displayName=E},516:function(e,t,n){e.exports={NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element"}},520:function(e,t,n){e.exports={NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=127.a0f0731b.chunk.js.map