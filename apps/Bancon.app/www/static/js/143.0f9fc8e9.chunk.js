(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[143,80,167,199,220,315],{307:function(e,t,n){"use strict";n.r(t),n.d(t,"KEY_PREFIX",(function(){return a})),n.d(t,"REQUIRED_FIELD",(function(){return r})),n.d(t,"BY_CODE",(function(){return o})),n.d(t,"BY_PIN",(function(){return i})),n.d(t,"RESEND_CHANNEL_MAIL",(function(){return c})),n.d(t,"RESEND_CHANNEL_SMS",(function(){return s}));var a="spa.recoverPassword",r="spa.generic.field.error.required",o="byCode",i="byPin",c="mail",s="sms"},369:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return P}));var a=n(0),r=n(5),o=n(11),i=n(39),c=n(187),s=n(8),u=n(138),E=n(6),l=n(38),d=n(82),_=n(494),b=n(488),T=n(489),N=n(79),m=n(99),O=n(535),f=n(433),j=n.n(f),h=n(307),M=n(10);function P(){var e=Object(s.b)(),t=Object(l.c)().textGet,n=Object(m.a)().getValueConfig,f=Object(s.c)(u.c.exchangeToken),P=Object(s.c)(u.c.mobileNumber)||E.D,R=Object(s.c)(u.c.fetching),p=Object(s.c)(u.c.warning),C=Object(O.a)(n),A=t({uuid:"spa.generic.field.error.required"}),g=i.e.object({verificationCode:Object(c.d)(i.e.string.required(),A)}),x=o.b.useCallback((function(){e(N.a.set({kind:"SUCCESS",text:{uuid:"".concat(h.KEY_PREFIX,".byCodeStep2.text1"),replace:P},duration:E.v})),e(u.a.cleanMobileNumber())}),[e,P]);o.b.useEffect((function(){P&&x()}),[x,P]);var I=t({uuid:"".concat(h.KEY_PREFIX,".byCodeStep2.code.label")});return Object(M.jsx)(T.a,{"header-onBack":function(){e(u.a.cleanRecoverBy())},"header-title":"".concat(h.KEY_PREFIX,".title"),children:Object(M.jsx)("section",{children:Object(M.jsxs)(b.a,{schema:g,warnings:p,onSubmit:function(e){return L.apply(this,arguments)},children:[Object(M.jsx)(l.b,{className:j.a.byCodeInvitationCode,uuid:"".concat(h.KEY_PREFIX,".byCodeStep2.text2")}),Object(M.jsx)("div",{className:j.a.alignInputs,children:Object(M.jsx)(_.a,{id:"verification",label:I,maxLength:C,name:"verificationCode"})}),Object(M.jsx)(d.a,{label:{className:j.a.textSubtitle,uuid:"spa.form.continue"},loading:R,type:"submit"}),Object(M.jsxs)("div",{className:j.a.alignInvitationCode,children:[Object(M.jsx)(l.b,{tag:"span",uuid:"spa.generic.byCode.notReceive.text"}),Object(M.jsx)(d.a,{className:j.a.haveCode,kind:"plain",label:{uuid:"spa.generic.byCode.resend.link"},onClick:function(){return v.apply(this,arguments)}})]})]})})});function L(){return(L=Object(r.a)(Object(a.a)().mark((function t(n){var r;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.verificationCode,t.next=3,e(u.b.byCodeStep2({exchangeToken:f,verificationCode:r}));case 3:e(u.a.setVerificationCode(r));case 4:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function v(){return(v=Object(r.a)(Object(a.a)().mark((function t(){return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e(u.b.resendCode({exchangeToken:f,resendChannel:h.RESEND_CHANNEL_SMS}));case 2:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},433:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",textSubtitle:"_rules_textSubtitle__1arob",byCodeInvitationCode:"_rules_byCodeInvitationCode__3ZLV8",textHeading:"_rules_textHeading__102RY",alignInputs:"_rules_alignInputs__H3-u1",alignInvitationCode:"_rules_alignInvitationCode__1O7BC",resendCode:"_rules_resendCode__2nnRn",textBody:"_rules_textBody__2yqjP",alignFooter:"_rules_alignFooter__3p45G"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var a=n(2),r=n(16),o=n(19),i=n(11),c=n(502),s=n(505),u=n(41),E=n(6),l=n(79),d=n(8),_=n(493),b=n.n(_),T=n(10),N=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],m=b.a.NAME_FORM,O=b.a.TYPE_FORM;function f(e){var t=e,n=t.ariaLabel,_=t.ariaLabelledby,b=t.schema,f=t.onSubmit,j=t.children,h=t.warnings,M=t.isRequiredToast,P=t.isResetForm,R=Object(o.a)(t,N),p=Object(d.b)(),C=Object(c.e)({resolver:Object(s.a)(b)}),A=C.handleSubmit,g=C.setError,x=C.formState.errors,I=C.reset,L=Object.keys(x),v=i.b.useState(!1),S=Object(r.a)(v,2),F=S[0],y=S[1],Y=i.b.useCallback((function(){M&&F&&p(l.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:E.w})),y(!1)}),[p,M,F]),k=i.b.useCallback((function(){I()}),[I]);return i.b.useEffect((function(){h&&Object.keys(h.data).map((function(e){var t=e.startsWith(E.Nb)?e.slice(E.fb):e;return g(t,{message:h.data[e]},{shouldFocus:!1}),null})),L.length>E.Sb&&Y(),P&&k()}),[L.length,P,k,g,Y,h]),Object(T.jsx)(c.b,Object(a.a)(Object(a.a)(Object(a.a)({},C),R),{},{children:Object(T.jsx)(u.a,{noValidate:!0,"aria-label":n,"aria-labelledby":_,name:m,tag:"form",type:O,onSubmit:A(f,(function(){return y(!F)})),children:j})}))}f.useContext=c.f,f.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var a=n(2),r=n(19),o=(n(11),n(41)),i=n(136),c=n(82),s=n(38),u=n(101),E=n(491),l=n.n(E),d={name:l.a.NAME_EXTERNAL_CONTAINER,type:l.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},_=n(492),b=n.n(_),T=n(10),N=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function m(e){var t=e,n=t["header-onBack"],E=t["header-title"],l=t.children,d=t.name,_=t.type,m=t.headerClassName,O=t.showLogo,f=Object(r.a)(t,N),j=Boolean(n||E),h=Object(o.c)(!E&&b.a.onlyRow,m),M=Object(o.c)(O&&b.a.step1Logo),P=Object(o.c)(O&&b.a.hasLogo);return Object(T.jsxs)(u.a,{children:[O&&Object(T.jsx)("div",{className:M,children:Object(T.jsx)(i.a,{alt:"logo",uuid:"logo150Login"})}),Object(T.jsx)(o.a,Object(a.a)(Object(a.a)({name:d,tag:"article",type:_},f),{},{children:Object(T.jsxs)("article",{className:P,children:[j&&Object(T.jsxs)("header",{className:h,children:[n&&Object(T.jsx)(c.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),E&&Object(T.jsx)(s.b,{tag:"h5",uuid:E})]}),l]})}))]})}m.defaultProps=d},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},494:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var a=n(2),r=n(19),o=n(16),i=n(11),c=n(50),s=n(41),u=n(488),E=n(498),l=n.n(E),d=n(10),_=["id","name","methods","defaultValue","pattern","withSuggestions","onChange","onBlur"],b=l.a.NAME_INPUT_FIELD,T=l.a.TYPE_INPUT_FIELD,N=i.b.memo((function(e){var t,n=i.b.useState(!1),u=Object(o.a)(n,2),E=u[0],l=u[1],N=e.id,m=e.name,O=e.methods,f=e.defaultValue,j=e.pattern,h=e.withSuggestions,M=void 0===h||h,P=e.onChange,R=e.onBlur,p=Object(r.a)(e,_),C=O.register,A=O.formState,g=O.setValue,x=O.clearErrors,I=A.errors,L="".concat(m),v=I[m];return i.b.useEffect((function(){f&&g(L,f),f||g(L,void 0),M&&l(!0)}),[f,L,g,M,l]),Object(d.jsx)(s.a,{name:b,type:T,children:Object(d.jsx)(c.TextField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({id:N||m},f&&{defaultValue:f}),v&&{error:null===(t=v.message)||void 0===t?void 0:t.toString()}),C(L,{onChange:function(e){P&&P(e);x([L])},onBlur:R})),p),{},{autoComplete:M?"on":"off",pattern:j,onKeyDown:function(e){e.target.value||E||l(!0)}}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function m(e){var t=u.a.useContext();return Object(d.jsx)(N,Object(a.a)({methods:t},e))}m.displayName=b},498:function(e,t,n){e.exports={NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element"}},535:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(6);function r(e){var t=Number(e("validationCodes.id.groups.length"));return Number(e("validationCodes.id.groupLength"))*t+t-a.fb}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=143.0f9fc8e9.chunk.js.map