(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[144,199,310],{346:function(e,t,r){"use strict";r.r(t),r.d(t,"KEY_PREFIX",(function(){return h})),r.d(t,"default",(function(){return j}));var a=r(0),n=r(5),o=(r(11),r(33)),s=r(8),c=r(489),i=r(530),u=r(99),l=r(82),d=r(488),_=r(50),b=r(517),E=r(38),m=r(6),O=r(39),p=r(432),f=r.n(p),T=r(10),h="spa.login";function j(){var e=Object(s.b)(),t=Object(E.c)().textGet,r=Object(u.a)().getValueConfig,p=Object(s.c)(o.e.exchangeToken)||m.D,j=Object(s.c)(o.e.fetching),N=Object(i.a)(t,r),g=O.e.object({password:N}),P=Object(s.c)(o.e.warning),A=t({uuid:"".concat(h,".stepExpiredPassword.password.label")});return Object(T.jsx)(c.a,{"header-onBack":function(){e(o.a.clean())},"header-title":"".concat(h,".stepExpiredPassword.title"),children:Object(T.jsx)("section",{children:Object(T.jsxs)(d.a,{schema:g,warnings:P,onSubmit:function(e){return M.apply(this,arguments)},children:[Object(T.jsx)("div",{className:f.a.expiredPassword,children:Object(T.jsx)(E.b,{color:"gray-dark",uuid:"".concat(h,".stepExpiredPassword.subtitle")})}),Object(T.jsx)("div",{className:f.a.alignInputs,children:Object(T.jsx)(b.a,{id:"password",label:A,name:"password",start:Object(T.jsx)(_.Icon,{name:"lockPadlock",size:"small"})})}),Object(T.jsx)(l.a,{label:{uuid:"".concat(h,".stepExpiredPassword.continue.button")},loading:j,type:"submit"})]})})});function M(){return(M=Object(n.a)(Object(a.a)().mark((function t(r){var n;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=r.password,t.next=3,e(o.b.changePasswordAfterExpiration({exchangeToken:p,password:n}));case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},432:function(e,t,r){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",containerStep3:"_rules_containerStep3__mxo8i",logoLogin:"_rules_logoLogin__2WuE9",utilTools:"_rules_utilTools__2Zjv6",separator:"_rules_separator__12F4a",bottomlessButton:"_rules_bottomlessButton__1JWkd",alignRecommendations:"_rules_alignRecommendations__34Flb",securitySeal:"_rules_securitySeal__2L_1d",greeting:"_rules_greeting__3hWQ2",selectOperation:"_rules_selectOperation__3c2XI",userRecovery:"_rules_userRecovery__2iD5o",passwordRecovery:"_rules_passwordRecovery__2HC26",biometrySession:"_rules_biometrySession__3vVQv",biometryAvailable:"_rules_biometryAvailable__xuCUu",captchaEnabled:"_rules_captchaEnabled__6FgGv",createToken:"_rules_createToken__x3jsC",environments:"_rules_environments__2zOXj",alignInputs:"_rules_alignInputs__1YLR9",expiredPassword:"_rules_expiredPassword__2sQxQ",stepBlockedUserByPassword:"_rules_stepBlockedUserByPassword__2bJu2",modalWelcome:"_rules_modalWelcome__2oZ6A",modalUList:"_rules_modalUList__33rmj",modalWelcomeButton:"_rules_modalWelcomeButton__3KlfQ",welcomeText:"_rules_welcomeText__17xiF",alignFooter:"_rules_alignFooter__5v5Mq",updateModal:"_rules_updateModal__ylzEn",footer:"_rules_footer__3mgfJ"}},488:function(e,t,r){"use strict";r.d(t,"a",(function(){return T}));var a=r(2),n=r(16),o=r(19),s=r(11),c=r(502),i=r(505),u=r(41),l=r(6),d=r(79),_=r(8),b=r(493),E=r.n(b),m=r(10),O=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],p=E.a.NAME_FORM,f=E.a.TYPE_FORM;function T(e){var t=e,r=t.ariaLabel,b=t.ariaLabelledby,E=t.schema,T=t.onSubmit,h=t.children,j=t.warnings,N=t.isRequiredToast,g=t.isResetForm,P=Object(o.a)(t,O),A=Object(_.b)(),M=Object(c.e)({resolver:Object(i.a)(E)}),R=M.handleSubmit,x=M.setError,w=M.formState.errors,L=M.reset,v=Object.keys(w),S=s.b.useState(!1),C=Object(n.a)(S,2),I=C[0],y=C[1],F=s.b.useCallback((function(){N&&I&&A(d.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:l.w})),y(!1)}),[A,N,I]),k=s.b.useCallback((function(){L()}),[L]);return s.b.useEffect((function(){j&&Object.keys(j.data).map((function(e){var t=e.startsWith(l.Nb)?e.slice(l.fb):e;return x(t,{message:j.data[e]},{shouldFocus:!1}),null})),v.length>l.Sb&&F(),g&&k()}),[v.length,g,k,x,F,j]),Object(m.jsx)(c.b,Object(a.a)(Object(a.a)(Object(a.a)({},M),P),{},{children:Object(m.jsx)(u.a,{noValidate:!0,"aria-label":r,"aria-labelledby":b,name:p,tag:"form",type:f,onSubmit:R(T,(function(){return y(!I)})),children:h})}))}T.useContext=c.f,T.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,r){"use strict";r.d(t,"a",(function(){return p}));var a=r(2),n=r(19),o=(r(11),r(41)),s=r(136),c=r(82),i=r(38),u=r(101),l=r(491),d=r.n(l),_={name:d.a.NAME_EXTERNAL_CONTAINER,type:d.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},b=r(492),E=r.n(b),m=r(10),O=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function p(e){var t=e,r=t["header-onBack"],l=t["header-title"],d=t.children,_=t.name,b=t.type,p=t.headerClassName,f=t.showLogo,T=Object(n.a)(t,O),h=Boolean(r||l),j=Object(o.c)(!l&&E.a.onlyRow,p),N=Object(o.c)(f&&E.a.step1Logo),g=Object(o.c)(f&&E.a.hasLogo);return Object(m.jsxs)(u.a,{children:[f&&Object(m.jsx)("div",{className:N,children:Object(m.jsx)(s.a,{alt:"logo",uuid:"logo150Login"})}),Object(m.jsx)(o.a,Object(a.a)(Object(a.a)({name:_,tag:"article",type:b},T),{},{children:Object(m.jsxs)("article",{className:g,children:[h&&Object(m.jsxs)("header",{className:j,children:[r&&Object(m.jsx)(c.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:r}),l&&Object(m.jsx)(i.b,{tag:"h5",uuid:l})]}),d]})}))]})}p.defaultProps=_},491:function(e,t,r){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,r){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,r){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},517:function(e,t,r){"use strict";r.d(t,"a",(function(){return p}));var a=r(2),n=r(19),o=r(11),s=r(50),c=r(41),i=r(488),u=r(529),l=r.n(u),d=r(10),_=["id","name","autoFocus","methods","withSuggestions","onChange"],b=l.a.NAME_INPUT_PASSWORD,E=l.a.TYPE_INPUT_PASSWORD,m={id:b},O=o.b.memo((function(e){var t,r=e.id,o=e.name,i=e.autoFocus,u=e.methods,l=e.withSuggestions,m=void 0===l||l,O=e.onChange,p=Object(n.a)(e,_),f=u.register,T=u.formState,h=u.clearErrors,j=T.errors,N="".concat(o),g=j[o];return Object(d.jsx)(c.a,{name:b,type:E,children:Object(d.jsx)(s.PasswordField,Object(a.a)(Object(a.a)(Object(a.a)({autoComplete:m?"on":"off",autoFocus:i,id:r||o},g&&{error:null===(t=g.message)||void 0===t?void 0:t.toString()}),f(N,{required:!0,onChange:function(e){O&&O(e);h([N])}})),p))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function p(e){var t=i.a.useContext();return Object(d.jsx)(O,Object(a.a)({methods:t},e))}p.displayName=b,p.defaultProps=m},522:function(e,t,r){"use strict";r.d(t,"a",(function(){return a})),r.d(t,"c",(function(){return n})),r.d(t,"e",(function(){return o})),r.d(t,"d",(function(){return s})),r.d(t,"f",(function(){return c})),r.d(t,"b",(function(){return i}));var a="AR1B",n=15,o=function(e){return e===a},s=function(e){return"AR1C"===e},c=function(e){return"0005"===e},i={"0005":n,AR1C:11,AR1B:11}},529:function(e,t,r){e.exports={NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element"}},530:function(e,t,r){"use strict";r.d(t,"a",(function(){return u}));var a=r(30),n=r(6),o=r(187),s=r(522),c=r(39),i=r(74);function u(e,t,r,u){var l=Object(i.a)(t("core.password.minLength")),d=Object(i.a)(t("core.password.maxLength")),_=e({uuid:"spa.generic.accessData.error.documentNumberInPassword"}),b=e({uuid:"spa.generic.accessData.error.userInPassword"}),E=e({uuid:"spa.password.error.tooSmall",replace:"".concat(l)}),m=e({uuid:"spa.password.error.tooBig",replace:"".concat(d)}),O=e({uuid:"spa.generic.field.error.required"}),p=Object(o.d)(c.e.string.required(),O),f=[Object(o.d)(c.e.string.ofLength(l),E),Object(o.d)(c.e.string.ofLength(n.fb,d),m),Object(c.b)("document number in password",(function(e){if(!r)return!0;var t=e;var a=r.number,o=r.type===s.a?(c=a,c.slice(n.Jb,n.ab)):a;var c;return!t.includes(o)||_})),Object(c.b)("username in password",(function(e){return!u||(!e.includes(u)||b)})),Object(c.b)("required chars",(function(r){if(r&&T("repeatedCharacters")){var a,o,s=r,c=Object(i.a)(t("spa.password.repeatedCharacters.maximum")),u=null===(a=s.match(/(\w)\1+/g))||void 0===a?void 0:a.find((function(e){return e.length>=c})),l=null===(o=s.match(/([0-9]{3,})/g))||void 0===o?void 0:o.some((function(e){return function(e,t){if(e.length===n.fb)return!1;for(var r=e.charCodeAt(n.Sb),a=n.Sb,o=n.Sb,s=n.fb;s<e.length;s++){var c=e.charCodeAt(s);a>=n.Sb&&(r===n.cb&&c===n.Tb||r+n.fb===c)?a++:a<=n.Sb&&(r===n.Tb&&c===n.cb||r-n.fb===c)?a--:(o=Math.max(Math.abs(a)+n.fb,o),a=n.Sb),r=c}return Math.max(Math.abs(a)+n.fb,o)>=t}(e,c)}));return u?e({uuid:"spa.password.error.repeatedCharacters",replace:"".concat(c)}):!l||e({uuid:"spa.password.error.consecutiveNumbers",replace:"".concat(c)})}return p}))].concat(Object(a.a)(["atLeastOneDigit","atLeastOneLowercaseChar","atLeastOneUppercaseChar"].filter(T).map((function(r){var a=Object(i.a)(t("spa.password.".concat(r,".regex"))),n=e({uuid:"spa.password.error.".concat(r)});return Object(o.d)(c.e.string.match(new RegExp(a)),n)}))));return Object(c.c)((function(e){var t=f.find((function(t){return!Object(c.d)(e,t)}));return e&&t?t:p}));function T(e){return Object(i.a)(t("spa.password.".concat(e,".enabled")))}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=144.d407127f.chunk.js.map