(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[240],{147:function(e,n,t){"use strict";t.d(n,"a",(function(){return f})),t.d(n,"c",(function(){return O})),t.d(n,"b",(function(){return v})),t.d(n,"d",(function(){return k}));var r=t(9),a=t(6),i="signup",o={fetching:!1,error:void 0,warning:void 0,documentTypes:[],documentNumber:void 0,defaultDocumentType:void 0,signupType:void 0,exchangeToken:a.D},c=t(2),u=t(1),s=t(12),d=t(95),f=Object(u.b)(i,["clean","setDocumentNumber"]),b=t(0),l=t(5),p=t(118),m=t(8),v=Object(u.c)(i,{getDocumentTypes:function(e,n){return Object(l.a)(Object(b.a)().mark((function e(){var t,r;return Object(b.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.rejectWithValue,e.next=3,Object(d.b)();case 3:if(r=e.sent){e.next=6;break}return e.abrupt("return",null);case 6:if(!Object(d.e)(r)){e.next=8;break}return e.abrupt("return",t(Object(c.a)(Object(c.a)({},r),d.c[r.code])));case 8:return e.abrupt("return",r);case 9:case"end":return e.stop()}}),e)})))()},choosePath:function(e,n){return Object(l.a)(Object(b.a)().mark((function t(){var r,a;return Object(b.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=n.rejectWithValue,e){t.next=3;break}return t.abrupt("return",null);case 3:return t.next=5,Object(d.a)(Object(c.a)(Object(c.a)({},e),{},{_captcha:e.captcha}));case 5:if(a=t.sent){t.next=8;break}return t.abrupt("return",null);case 8:if(!Object(d.e)(a)){t.next=10;break}return t.abrupt("return",r(Object(c.a)(Object(c.a)({},a),d.c[a.code])));case 10:return m.a.dispatch(p.a.setExchangeToken(a.data._exchangeToken)),t.abrupt("return",a);case 12:case"end":return t.stop()}}),t)})))()}}),j=t(3),g=Object(u.d)(o,(function(e){var n=e.addCase,t=e.addMatcher;n(f.clean,(function(){return Object(c.a)({},o)})),n(f.setDocumentNumber,(function(e,n){var t=n.payload;t&&(e.documentNumber=t)})),n(v.getDocumentTypes.fulfilled,(function(e,n){var t=n.payload;if(e.fetching=!1,e.error=o.error,e.warning=o.warning,t){var r=t.data,a=r.documentTypes,i=r.defaultDocumentType;e.documentTypes=a,e.defaultDocumentType=i}})),n(v.choosePath.fulfilled,(function(e,n){var t=n.payload;if(e.fetching=!1,e.error=o.error,e.warning=o.warning,t){var r=t.data,a=r._exchangeToken,i=r.signupType;e.exchangeToken=a,e.signupType=i}})),t((function(e){return Object(s.b)(e,i)}),(function(e){e.fetching=!0,e.error=o.error,e.warning=o.warning})),t((function(e){return Object(s.c)(e,i)}),(function(e,n){var t=n.payload;e.fetching=!1,Object(j.x)(d.c,t.code)?e.warning=t:e.error=t}))}));function O(e){return e[i]}O.fetching=Object(u.e)(O,(function(e){return e.fetching})),O.error=Object(u.e)(O,(function(e){return e.error})),O.warning=Object(u.e)(O,(function(e){return e.warning})),O.documentTypes=Object(u.e)(O,(function(e){return e.documentTypes})),O.documentNumber=Object(u.e)(O,(function(e){return e.documentNumber})),O.defaultDocumentType=Object(u.e)(O,(function(e){return e.defaultDocumentType})),O.signupType=Object(u.e)(O,(function(e){return e.signupType})),O.exchangeToken=Object(u.e)(O,(function(e){return e.exchangeToken}));var k=Object(r.a)({},i,g)},174:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return b}));var r=t(9),a="stepper",i={currentStep:1},o=t(2),c=t(1),u=t(6),s=Object(c.b)(a,["cleanStepper","nextStep","previousStep"]),d=Object(c.d)(i,(function(e){var n=e.addCase;n(s.cleanStepper,(function(e){return Object(o.a)(Object(o.a)({},e),i)})),n(s.nextStep,(function(e){return Object(o.a)(Object(o.a)({},e),{},{currentStep:e.currentStep+u.fb})})),n(s.previousStep,(function(e){return Object(o.a)(Object(o.a)({},e),{},{currentStep:e.currentStep>u.fb?e.currentStep-u.fb:u.fb})}))}));function f(e){return e[a]}f.currentStep=Object(c.e)(f,(function(e){return e.currentStep}));var b=Object(r.a)({},a,d)},29:function(e,n,t){"use strict";t.d(n,"b",(function(){return a})),t.d(n,"a",(function(){return i}));var r=t(6),a="session",i={fetching:!1,token:r.D,username:r.D,fullName:r.D,firstName:r.D,documentNumber:r.D,documentType:r.D,environmentName:r.D,notAvailableFeatures:[],isCorporateEnvironment:!1,lastLogin:r.D,permissions:[],securitySeal:r.D,exchangeToken:r.D,environments:{},environmentColor:r.n,environment:void 0,error:void 0,warning:void 0,loginFinger:!1,fingerPrintSessionExpired:!1,isExtendedSession:!1,existSessionWithFingerPrint:!1,timeValidationFinger:!1,isSubmitted:!1,showCaptcha:!1,idTracker:r.D,passwordExpired:!1,changedExpiredPassword:!1,blockedUserByPassword:!1,isEnvironmentUserSigning:!1,migratedFeatures:{},environmentExpired:r.D,oncePerSessionModal:!1,activeEnvironmentTokenType:r.D,showChatModal:!1,showLogoutConfirmation:!1,isSigningOff:!1,linkedSoftTokenUser:!1,linkedDeviceModel:!1,fetchingEnvironment:!1,creationDate:r.D,isHomeModalActive:!1,secondsToExpire:r.Sb,corporateDocument:r.D,termsAndConditions:void 0}},33:function(e,n,t){"use strict";t.d(n,"c",(function(){return a.b})),t.d(n,"a",(function(){return s.a})),t.d(n,"e",(function(){return S.a})),t.d(n,"d",(function(){return T})),t.d(n,"b",(function(){return h})),t.d(n,"g",(function(){return N})),t.d(n,"f",(function(){return M})),t.d(n,"h",(function(){return P})),t.d(n,"i",(function(){return A}));var r=t(9),a=t(29),i=t(2),o=t(1),c=t(12),u=t(6),s=t(53),d=t(19),f=t(0),b=t(5),l=t(44),p=t(106),m=t(48),v=t(108),j=t(81),g=t(8),O=t(288),k=["accessToken","fingerPrintDeviceInfo","fingerprintHash","randomSeed"],h=Object(o.c)(a.b,{firstStep:function(e,n){return Object(b.a)(Object(f.a)().mark((function t(){var r,a,o;return Object(f.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.rejectWithValue,a=e.username,t.next=4,Object(l.i)({user:a,_secondFactor:u.D});case 4:if(o=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(!Object(m.b)(o)){t.next=9;break}return t.abrupt("return",r(Object(i.a)(Object(i.a)({},o),l.e[o.code])));case 9:return t.abrupt("return",o);case 10:case"end":return t.stop()}}),t)})))()},secondStep:function(e,n){return Object(b.a)(Object(f.a)().mark((function t(){var r,a,o,c,u,s,d,b;return Object(f.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.rejectWithValue,a=e.username,o=e.password,c=e.captcha,u=e.isVUEnabled,s=e.url,d=e.timeout,t.next=4,Object(l.k)({_captcha:c,_password:o,_username:a});case 4:if(b=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(!Object(m.b)(b)){t.next=9;break}return t.abrupt("return",r(Object(i.a)(Object(i.a)({},b),l.e[b.code])));case 9:return u&&g.a.dispatch(j.b.sendLoginVu({captcha:c,password:o,username:a,exchangeToken:b.data._exchangeToken,url:s,timeout:d})),t.abrupt("return",b);case 11:case"end":return t.stop()}}),t)})))()},changePasswordAfterExpiration:function(e,n){return Object(b.a)(Object(f.a)().mark((function t(){var r,a,o,c;return Object(f.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.rejectWithValue,a=e.exchangeToken,o=e.password,t.next=4,Object(l.g)({_exchangeToken:a,_password:o});case 4:if(c=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(!Object(m.b)(c)){t.next=9;break}return t.abrupt("return",r(Object(i.a)(Object(i.a)({},c),l.e[c.code])));case 9:return t.abrupt("return",c);case 10:case"end":return t.stop()}}),t)})))()},thirdStep:function(e,n){return Object(b.a)(Object(f.a)().mark((function t(){var r,a,o,c,s,d,b;return Object(f.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.rejectWithValue,a=e.environments,o=e.exchangeToken,c=e.deviceModel,s=e.uniqueDeviceId,d=e.seedUser,t.next=4,Object(l.l)({accountLinkingToken:u.D,environment:a,isFromSPA:!0,_exchangeToken:o,deviceModel:c,uniqueDeviceId:s,seedUser:d});case 4:if(b=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(!Object(m.b)(b)){t.next=9;break}return t.abrupt("return",r(Object(i.a)(Object(i.a)({},b),l.e[b.code])));case 9:return t.abrupt("return",b);case 10:case"end":return t.stop()}}),t)})))()},changeEnvironment:function(e,n){return Object(b.a)(Object(f.a)().mark((function t(){var r,a,o,c,u,s,d;return Object(f.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.rejectWithValue,a=e.idEnvironmentToChange,o=e.setAsDefault,c=e.accessToken,u=e.deviceModel,s=e.seedUser,t.next=4,Object(l.a)({idEnvironmentToChange:a,setAsDefault:o,_accessToken:c,deviceModel:u,seedUser:s});case 4:if(d=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(!Object(m.b)(d)){t.next=9;break}return t.abrupt("return",r(Object(i.a)(Object(i.a)({},d),l.e[d.code])));case 9:return t.abrupt("return",d);case 10:case"end":return t.stop()}}),t)})))()},extendSession:function(e,n){return Object(b.a)(Object(f.a)().mark((function e(){var t,r;return Object(f.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.rejectWithValue,e.next=3,Object(l.h)();case 3:if(r=e.sent){e.next=6;break}return e.abrupt("return",null);case 6:if(!Object(m.b)(r)){e.next=8;break}return e.abrupt("return",t(Object(i.a)(Object(i.a)({},r),l.e[r.code])));case 8:return e.abrupt("return",r);case 9:case"end":return e.stop()}}),e)})))()},loginFingerprint:function(e,n){return Object(b.a)(Object(f.a)().mark((function t(){var r,a,o,c,u,s,b;return Object(f.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.rejectWithValue,a=e.accessToken,o=e.fingerPrintDeviceInfo,c=e.fingerprintHash,u=e.randomSeed,s=Object(d.a)(e,k),t.next=4,Object(p.b)(Object(i.a)({_accessToken:a,_fingerprint:c,_deviceFingerprintData:o,_randomSeed:u},s));case 4:if(b=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(!Object(m.b)(b)){t.next=9;break}return t.abrupt("return",r(Object(i.a)(Object(i.a)({},b),l.e[b.code])));case 9:return t.abrupt("return",b);case 10:case"end":return t.stop()}}),t)})))()},logout:function(){return Object(b.a)(Object(f.a)().mark((function e(){return Object(f.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return g.a.dispatch(v.a.setJustLoggedOut(!0)),e.next=3,Object(O.a)();case 3:case"end":return e.stop()}}),e)})))()},sessionExists:function(e){return Object(b.a)(Object(f.a)().mark((function n(){var t,r;return Object(f.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t=e.accessToken,n.next=3,Object(p.c)({accessToken:t});case 3:return r=n.sent,n.abrupt("return",r);case 5:case"end":return n.stop()}}),n)})))()},getCreationDate:function(e,n){return Object(b.a)(Object(f.a)().mark((function t(){var r,a,o;return Object(f.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.rejectWithValue,a=e.token,t.next=4,Object(l.c)(a);case 4:if(o=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(!Object(m.b)(o)){t.next=9;break}return t.abrupt("return",r(Object(i.a)(Object(i.a)({},o),l.e[o.code])));case 9:return t.abrupt("return",o);case 10:case"end":return t.stop()}}),t)})))()},setAcceptTermsAndConditions:function(e,n){return Object(b.a)(Object(f.a)().mark((function t(){var r,a,o;return Object(f.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.rejectWithValue,a=e.token,t.next=4,Object(l.f)(a);case 4:if(o=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(!Object(m.b)(o)){t.next=9;break}return t.abrupt("return",r(Object(i.a)(Object(i.a)({},o),l.e[o.code])));case 9:return t.abrupt("return",o);case 10:case"end":return t.stop()}}),t)})))()},getAcceptTermsAndConditions:function(e,n){return Object(b.a)(Object(f.a)().mark((function t(){var r,a,o;return Object(f.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.rejectWithValue,a=e.token,t.next=4,Object(l.d)(a);case 4:if(o=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(!Object(m.b)(o)){t.next=9;break}return t.abrupt("return",r(Object(i.a)(Object(i.a)({},o),l.e[o.code])));case 9:return t.abrupt("return",o);case 10:case"end":return t.stop()}}),t)})))()},checkSessionStatus:function(e,n){return Object(b.a)(Object(f.a)().mark((function e(){var t,r;return Object(f.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.rejectWithValue,e.next=3,Object(l.b)();case 3:if(r=e.sent){e.next=6;break}return e.abrupt("return",null);case 6:if(!Object(m.b)(r)){e.next=8;break}return e.abrupt("return",t(Object(i.a)(Object(i.a)({},r),l.e[r.code])));case 8:return e.abrupt("return",r);case 9:case"end":return e.stop()}}),e)})))()}}),x=t(3),T=Object(o.d)(a.a,(function(e){var n=e.addCase,t=e.addMatcher;n(s.a.clean,(function(){return Object(i.a)({},a.a)})),n(s.a.setLinkedSoftTokenUser,(function(e,n){var t=n.payload;e.linkedSoftTokenUser=t})),n(s.a.setLinkedDeviceModel,(function(e,n){var t=n.payload;e.linkedDeviceModel=t})),n(s.a.cleanLinkedSoftTokenUser,(function(e){e.linkedSoftTokenUser=a.a.linkedSoftTokenUser,e.linkedDeviceModel=a.a.linkedDeviceModel})),n(h.firstStep.fulfilled,(function(e,n){var t=n.payload;e.fetching=!1,e.error=a.a.error,e.securitySeal=null===t||void 0===t?void 0:t.data._securitySeal,e.username=null===t||void 0===t?void 0:t.data._userFullName,e.showCaptcha=null===t||void 0===t?void 0:t.data.showCaptcha,e.changedExpiredPassword=a.a.changedExpiredPassword})),n(h.secondStep.fulfilled,(function(e,n){var t=n.payload;if(e.fetching=!1,e.error=a.a.error,t){var r=t.data,i=r._exchangeToken,o=r.environments,c=r.documentNumber,u=r.documentType;e.documentNumber=c,e.documentType=u,e.exchangeToken=i,e.environments=o}})),n(h.changePasswordAfterExpiration.fulfilled,(function(e){e.fetching=!1,e.error=a.a.error,e.username=a.a.username,e.token=a.a.token,e.exchangeToken=a.a.exchangeToken,e.passwordExpired=a.a.passwordExpired,e.changedExpiredPassword=!0})),n(h.thirdStep.fulfilled,(function(e,n){var t=n.payload;if(e.fetching=!1,e.error=a.a.error,t){var r=t.data;e.token=r._accessToken,e.email=r.email,e.fullName=r.userFullName,e.firstName=r.userFirstName,e.lastLogin=r.lastLogin,e.notAvailableFeatures=r.notAvailableFeatures,e.isCorporateEnvironment=r.activeEnvironmentType===u.f,e.permissions=r.permissions,e.idTracker=r.idTracker,e.environment=r.activeIdEnvironment,e.environmentName=r.activeEnvironmentName,e.isEnvironmentUserSigning=r.isEnvironmentUserSigning,e.migratedFeatures=r.migratedFeatures,e.environmentExpired=r.environmentExpired,e.activeEnvironmentTokenType=r.activeEnvironmentTokenType,e.linkedSoftTokenUser=r.linkedSofttokenUser,e.linkedDeviceModel=r.linkedDeviceModel,e.oncePerSessionModal=a.a.oncePerSessionModal,e.secondsToExpire=Number(r.secondsToExpire),e.corporateDocument=r.corporateDocument}})),n(h.changeEnvironment.pending,(function(e){e.fetchingEnvironment=!0,e.fetching=!0,e.error=a.a.error,e.warning=a.a.warning})),n(h.changeEnvironment.fulfilled,(function(e,n){var t=n.payload;if(e.fetching=!1,e.fetchingEnvironment=!1,e.error=a.a.error,t){var r=t.data;e.token=r._accessToken,e.email=r.email,e.fullName=r.userFullName,e.firstName=r.userFirstName,e.lastLogin=r.lastLogin,e.documentNumber=r.documentNumber,e.corporateDocument=r.corporateDocument,e.documentType=r.documentType,e.notAvailableFeatures=r.notAvailableFeatures,e.isCorporateEnvironment=r.activeEnvironmentType===u.f,e.permissions=r.permissions,e.idTracker=r.idTracker,e.environment=r.activeIdEnvironment,e.environmentName=r.activeEnvironmentName,e.isEnvironmentUserSigning=r.isEnvironmentUserSigning,e.migratedFeatures=r.migratedFeatures,e.environmentExpired=r.environmentExpired,e.activeEnvironmentTokenType=r.activeEnvironmentTokenType,e.linkedSoftTokenUser=r.linkedSofttokenUser,e.linkedDeviceModel=r.linkedDeviceModel}})),n(h.logout.fulfilled,(function(){return Object(i.a)({},a.a)})),n(h.extendSession.fulfilled,(function(e,n){var t=n.payload;e.fetching=!1,e.isExtendedSession=!0,t&&(e.secondsToExpire=(Number(t.data.secondsToExpire)-u.fb)*u.xb)})),n(h.checkSessionStatus.fulfilled,(function(e,n){var t=n.payload;e.fetching=!1,e.error=a.a.error,t&&(e.secondsToExpire=(Number(t.data.secondsToExpire)-u.fb)*u.xb)})),n(s.a.setUserName,(function(e,n){var t=n.payload;e.username=t})),n(s.a.setEnvironmentColor,(function(e,n){var t=n.payload;e.environmentColor=t})),n(s.a.setOncePerSessionModal,(function(e,n){var t=n.payload;e.oncePerSessionModal=t})),n(s.a.setEnvironment,(function(e,n){var t=n.payload;e.environment=t})),n(s.a.cleanUser,(function(e){e.username=a.a.username})),n(s.a.cleanStep3,(function(e){e.exchangeToken=a.a.exchangeToken,e.environments=a.a.environments})),n(s.a.isSubmitted,(function(e){e.isSubmitted=!0})),n(s.a.updateSecuritySeal,(function(e,n){var t=n.payload;e.securitySeal=t})),n(s.a.showChatModal,(function(e,n){var t=n.payload;e.showChatModal=t})),n(s.a.showLogoutConfirmation,(function(e,n){var t=n.payload;e.showLogoutConfirmation=t})),n(s.a.setSigningOff,(function(e){e.isSigningOff=!0})),n(h.loginFingerprint.fulfilled,(function(e,n){var t=n.meta.arg.accessToken,r=n.payload;if(e.fetching=!1,e.error=a.a.error,r){var i=r.data.fingerPrintSessionExpired;e.fingerPrintSessionExpired=i,e.loginFinger=!0;var o=r.data,c=o.userFullName,s=o.lastLogin,d=o.notAvailableFeatures,f=o.activeEnvironmentType,b=o.permissions,l=o.idTracker,p=o.activeIdEnvironment,m=o.activeEnvironmentName,v=o.isEnvironmentUserSigning,j=o.environments,g=o.userFirstName,O=o._cuit,k=o.securitySeal,h=o.migratedFeatures,x=o.email,T=o.linkedSofttokenUser,S=o.linkedDeviceModel,E=o.activeEnvironmentTokenType;e.token=t,e.email=x,e.fullName=c,e.firstName=g,e.documentNumber=O,e.documentType="AR1B",e.lastLogin=s,e.notAvailableFeatures=d,e.isCorporateEnvironment=f===u.f,e.permissions=b,e.idTracker=l,e.environment=p,e.environmentName=m,e.environments=j,e.isEnvironmentUserSigning=v,e.securitySeal=k,e.migratedFeatures=h,e.linkedSoftTokenUser=T,e.linkedDeviceModel=S,e.activeEnvironmentTokenType=E,e.oncePerSessionModal=a.a.oncePerSessionModal}})),n(h.sessionExists.fulfilled,(function(e,n){var t=n.payload;if(!Object(l.j)(t)&&t){var r=t.data,a=r.existSessionWithFingerPrint,i=r.timeValidationFinger;e.existSessionWithFingerPrint=a,e.timeValidationFinger=i}})),n(h.getCreationDate.fulfilled,(function(e,n){var t=n.payload;e.fetching=!1,t&&(e.creationDate=t.data.creationDate)})),n(h.setAcceptTermsAndConditions.fulfilled,(function(e){e.fetching=!1,e.termsAndConditions=!0})),n(h.getAcceptTermsAndConditions.fulfilled,(function(e,n){var t=n.payload;e.fetching=!1,t&&(e.termsAndConditions=t.data.termsAndConditions)})),n(h.thirdStep.rejected,(function(){return Object(i.a)({},a.a)})),n(h.changeEnvironment.rejected,(function(){return Object(i.a)({},a.a)})),n(s.a.setTimerInBackground,(function(e,n){var t=n.payload;e.timerInBackground=t})),n(s.a.setIsHomeModalActive,(function(e,n){var t=n.payload;e.isHomeModalActive=t})),t((function(e){return Object(c.b)(e,a.b)}),(function(e){e.fetching=!0,e.error=a.a.error,e.warning=a.a.warning})),t((function(e){return Object(c.c)(e,a.b)}),(function(e,n){var t=n.payload;if(e.fetching=!1,e.fetchingEnvironment=!1,Object(x.x)(l.e,t.code))e.warning=t;else switch(t.code){case x.d:e.blockedUserByPassword=!0;break;case x.l:e.exchangeToken=t.data._exchangeToken,e.passwordExpired=!0;break;case x.e:e.showCaptcha=!0;break;default:e.error=t}}))})),S=t(93),E=t(16),w=t(11),y=t(89),D="ALL",F="NONE",C="visibilityState"in document;function N(e){var n=w.b.useState(!1),t=Object(E.a)(n,2),r=t[0],a=t[1],i=Object(g.c)(S.a.notAvailableFeatures);return w.b.useEffect((function(){null!==i&&void 0!==i&&i.includes(D)?a(!1):null!==i&&void 0!==i&&i.includes(F)?a(!0):a(!(null!==i&&void 0!==i&&i.includes(e)))}),[e,i]),r}function M(e){var n=w.b.useState(!1),t=Object(E.a)(n,2),r=t[0],a=t[1],i=Object(g.c)(S.a.migratedFeatures),o=Object(g.c)(y.e.legacyFeatures);return w.b.useEffect((function(){if(null!==i&&void 0!==i&&i[e]){var n=i[e].availableFeature;a(n)}else if(null!==o&&void 0!==o&&o[e]){var t=o[e].availableFeature;a(t)}}),[e,i,o]),r}function P(e){var n=w.b.useState(!1),t=Object(E.a)(n,2),r=t[0],a=t[1],i=Object(g.c)(S.a.migratedFeatures),o=Object(g.c)(y.e.legacyFeatures);return w.b.useEffect((function(){if(null!==i&&void 0!==i&&i[e]){var n=i[e].hasPermission;a(n)}else if(null!==o&&void 0!==o&&o[e]){var t=o[e].hasPermission;a(t)}}),[e,i,o]),r}function A(){var e=w.b.useState(a()),n=Object(E.a)(e,2),t=n[0],r=n[1];function a(){return!C||"visible"===document.visibilityState}return w.b.useEffect((function(){if(C){var e=function(){return r(a())};return document.addEventListener("visibilitychange",e),function(){document.removeEventListener("visibilitychange",e)}}}),[r]),t}Object(r.a)({},a.b,T)},53:function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));var r=t(1),a=t(29),i=Object(r.b)(a.b,["setUserName","clean","cleanUser","cleanStep3","isSubmitted","setSigningOff","setEnvironmentColor","setEnvironment","setOncePerSessionModal","updateSecuritySeal","showChatModal","showLogoutConfirmation","cleanLinkedSoftTokenUser","setLinkedSoftTokenUser","setLinkedDeviceModel","getCreationDate","getAcceptTermsAndConditions","setTimerInBackground","setIsHomeModalActive"])},93:function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));var r=t(16),a=t(1),i=t(90),o=t(6),c=t(29);function u(e){return e[c.b]}u.exchangeToken=Object(a.e)(u,(function(e){return e.exchangeToken})),u.warning=Object(a.e)(u,(function(e){return e.warning})),u.error=Object(a.e)(u,(function(e){return e.error})),u.token=Object(a.e)(u,(function(e){return e.token})),u.fetching=Object(a.e)(u,(function(e){return e.fetching})),u.fetchingEnvironment=Object(a.e)(u,(function(e){return e.fetchingEnvironment})),u.isSubmitted=Object(a.e)(u,(function(e){return e.isSubmitted})),u.username=Object(a.e)(u,(function(e){return e.username})),u.documentNumber=Object(a.e)(u,(function(e){return e.documentNumber})),u.documentType=Object(a.e)(u,(function(e){return e.documentType})),u.environmentColor=Object(a.e)(u,(function(e){return e.environmentColor})),u.environment=Object(a.e)(u,(function(e){return e.environment})),u.environmentName=Object(a.e)(u,(function(e){return e.environmentName})),u.email=Object(a.e)(u,(function(e){return e.email})),u.userFullName=Object(a.e)(u,(function(e){return e.fullName})),u.userFirstName=Object(a.e)(u,(function(e){var n,t=(null===(n=e.firstName)||void 0===n?void 0:n.split(" "))||[],a=Object(r.a)(t,2),i=a[0],c=void 0===i?o.D:i,u=a[1],s=void 0===u?o.D:u;return"".concat(c," ").concat(s).trim()})),u.lastLogin=Object(a.e)(u,(function(e){return e.lastLogin})),u.loginFinger=Object(a.e)(u,(function(e){return e.loginFinger})),u.notAvailableFeatures=Object(a.e)(u,(function(e){return e.notAvailableFeatures})),u.isCorporateEnvironment=Object(a.e)(u,(function(e){return e.isCorporateEnvironment})),u.permissions=Object(a.e)(u,(function(e){return e.permissions})),u.securitySeal=Object(a.e)(u,(function(e){return e.securitySeal})),u.environments=Object(a.e)(u,(function(e){return e.environments})),u.environmentsForSelect=Object(a.e)(u,(function(e){var n=function(e,n){return e[1].localeCompare(n[1])},t=Object.entries(e.environments),r=[];t.forEach((function(e){var n=e[1].toLocaleLowerCase().replace("empresa","").trim();r.push([e[0],n])}));var a=Object(i.b)(r.filter((function(e){return e[1].includes("@retail")})).sort(n)),o=Object(i.b)(r.filter((function(e){return e[1].includes("@corporate")})).sort(n));return a.concat(o)})),u.fingerPrintSessionExpired=Object(a.e)(u,(function(e){return e.fingerPrintSessionExpired})),u.existSessionWithFingerPrint=Object(a.e)(u,(function(e){return e.existSessionWithFingerPrint})),u.timeValidationFinger=Object(a.e)(u,(function(e){return e.timeValidationFinger})),u.showCaptcha=Object(a.e)(u,(function(e){return e.showCaptcha})),u.isChangedExpiredPassword=Object(a.e)(u,(function(e){return e.changedExpiredPassword})),u.isStep1=Object(a.e)(u,(function(e){var n=[!e.username,!e.token];return n.length===n.filter(Boolean).length})),u.isStep2=Object(a.e)(u,(function(e){var n=[!e.token,e.username,!Object.keys(e.environments).length,!e.exchangeToken,!e.blockedUserByPassword];return n.length===n.filter(Boolean).length})),u.isStepExpiredPassword=Object(a.e)(u,(function(e){var n=[!e.token,e.username,e.passwordExpired,!e.blockedUserByPassword];return n.length===n.filter(Boolean).length})),u.isStepUserBlockedByPassword=Object(a.e)(u,(function(e){return!0===e.blockedUserByPassword})),u.isStep3=Object(a.e)(u,(function(e){var n=[!e.token,e.username,Object.keys(e.environments).length,e.exchangeToken,!e.passwordExpired];return n.length===n.filter(Boolean).length})),u.isSessionActive=Object(a.e)(u,(function(e){var n=[e.token,e.username,Object.keys(e.environments).length,e.exchangeToken];return n.length===n.filter(Boolean).length})),u.idTracker=Object(a.e)(u,(function(e){return e.idTracker})),u.isEnvironmentUserSigning=Object(a.e)(u,(function(e){return e.isEnvironmentUserSigning})),u.migratedFeatures=Object(a.e)(u,(function(e){return e.migratedFeatures})),u.environmentExpired=Object(a.e)(u,(function(e){return e.environmentExpired})),u.isExtendedSession=Object(a.e)(u,(function(e){return e.isExtendedSession})),u.oncePerSessionModal=Object(a.e)(u,(function(e){return e.oncePerSessionModal})),u.activeEnvironmentTokenType=Object(a.e)(u,(function(e){return e.activeEnvironmentTokenType})),u.showChatModal=Object(a.e)(u,(function(e){return e.showChatModal})),u.showLogoutConfirmation=Object(a.e)(u,(function(e){return e.showLogoutConfirmation})),u.linkedSoftTokenUser=Object(a.e)(u,(function(e){return e.linkedSoftTokenUser})),u.linkedDeviceModel=Object(a.e)(u,(function(e){return e.linkedDeviceModel})),u.creationDate=Object(a.e)(u,(function(e){return e.creationDate})),u.hasAcceptTermsAndConditions=Object(a.e)(u,(function(e){return e.termsAndConditions})),u.timerInBackground=Object(a.e)(u,(function(e){return e.timerInBackground})),u.isHomeModalActive=Object(a.e)(u,(function(e){return e.isHomeModalActive})),u.secondsToExpire=Object(a.e)(u,(function(e){return e.secondsToExpire})),u.isSigningOff=Object(a.e)(u,(function(e){return e.isSigningOff})),u.corporateDocument=Object(a.e)(u,(function(e){return e.corporateDocument}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=main~9532a72a.cd299240.chunk.js.map