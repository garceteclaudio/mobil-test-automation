(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[96,299],{244:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return g}));var a=n(16),s=n(11),r=n(51),o=n(39),c=n(187),i=n(152),l=n(33),u=n(8),d=n(488),b=n(82),m=n(270),_=n(38),E=n(497),O=n(90),j=n(515),p=n(50),T=n(490),M=n(570),h=n.n(M),f=n(10);function A(e){var t=e,n=t.showModal,a=t.setShowModal;return Object(f.jsx)(T.a,{className:h.a.termsAndConditions,closeOnBgTap:!1,open:n,title:"spa.suppliers.termsAndConditions.title",onClose:s,children:Object(f.jsxs)(T.a.Body,{children:[Object(f.jsx)(_.b,{tag:"h5",uuid:"spa.suppliers.termsAndConditions.subtitle"}),Object(f.jsx)(_.b,{tag:"h5",uuid:"spa.suppliers.termsAndConditions.title"}),Object(f.jsx)(_.b,{uuid:"spa.suppliers.termsAndConditions.description"}),Object(f.jsx)(b.a,{label:{uuid:"spa.form.continue"},type:"submit",onClick:s})]})});function s(){a(!1)}}A.defaultProps={};function P(e){var t=e,n=t.showModal,a=t.setShowModal,s=Object(u.b)(),r=Object(_.c)().textGet,o=Object(u.c)(l.e.corporateDocument),c=Object(u.c)(l.e.token),m=d.a.useContext().getValues,E=r({uuid:"spa.suppliers.acceptAgreement.cuit"}),O=r({uuid:"spa.suppliers.acceptAgreement.description",replace:["<strong>".concat(E,"</strong>"),"<strong>".concat(o,"</strong>")]});return Object(f.jsxs)(T.a,{className:h.a.AcceptAgreement,closeOnBgTap:!1,open:n,title:"spa.suppliers.acceptAgreement.title",onClose:function(){a(!1)},children:[Object(f.jsx)(T.a.Body,{children:Object(f.jsx)(_.b,{children:Object(f.jsx)("span",{dangerouslySetInnerHTML:{__html:O}})})}),Object(f.jsx)(T.a.Footer,{children:Object(f.jsx)(b.a,{label:{uuid:"spa.form.continue"},type:"submit",onClick:function(){if(!c)return;if(!m().adhered)return;a(!1),s(i.b.adheredAgreement({token:c}))}})})]})}P.defaultProps={};var C=n(450),x=n.n(C);function g(){var e=Object(r.qb)(),t=Object(u.b)(),n=Object(r.sb)(r.V),T=Object(_.c)().textGet,M=s.b.useState(),h=Object(a.a)(M,2),C=h[0],g=h[1],N=s.b.useState(),R=Object(a.a)(N,2),v=R[0],S=R[1],B=s.b.useState(!1),F=Object(a.a)(B,2),k=F[0],w=F[1],H=Object(u.c)(l.e.token),I=Object(u.c)(i.c.fetchedContractId),U=Object(u.c)(i.c.warning),y=Object(u.c)(i.c.isAdhered),D=Object(u.c)(i.c.adhereTransactionId),L=T({uuid:"spa.paymentSuppliers.termsAndConditionsError"}),Y=o.e.object({adhered:Object(c.d)(o.e.boolean.equals(!0),L)}),X=Object(r.sb)(r.U);return s.b.useEffect((function(){return function(){t(i.a.cleanFetchers())}}),[t]),s.b.useEffect((function(){H&&t(i.b.contractId({token:H}))}),[t,H]),s.b.useEffect((function(){y&&e(n,{replace:!0})}),[t,y,e,n]),s.b.useEffect((function(){D&&e(X)}),[D,t,e,X]),y||!I?Object(f.jsx)(m.a,{}):Object(f.jsxs)(E.a,{withoutBox:!0,className:x.a.agreement,"header-onBack":G,children:[Object(f.jsx)("header",{children:Object(f.jsx)(_.b,{className:x.a.agreementTitle,tag:"h5",uuid:"spa.suppliers.agreement.title"})}),Object(f.jsx)(p.Card,{className:x.a.cardContainer,children:Object(f.jsxs)(d.a,{schema:Y,warnings:U,children:[Object(f.jsx)(_.b,{className:x.a.agreementDescription,tag:"p",uuid:"spa.suppliers.agreement.description"}),Object(f.jsx)(j.a,{label:function(){var e=T({uuid:"spa.suppliers.agreement.accept"});return Object(f.jsxs)("div",{className:x.a.labelAgreement,children:[Object(f.jsx)(_.b,{tag:"span",children:Object(O.a)(e)}),Object(f.jsx)(b.a,{kind:"plain",label:{uuid:"spa.suppliers.agreement.terms.and.conditions"},type:"button",onClick:V})]})}(),name:"adhered",onChange:function(){w(!k)}}),Object(f.jsxs)("footer",{children:[Object(f.jsx)(b.a,{label:{uuid:"spa.form.cancel"},variant:"outlined",onClick:G}),Object(f.jsx)(b.a,{label:{uuid:"spa.form.accept"},type:"submit",onClick:K})]}),Object(f.jsx)(P,{setShowModal:S,showModal:v})]})}),Object(f.jsx)(A,{setShowModal:g,showModal:C})]});function V(){g(!C)}function K(){k&&S(!v)}function G(){e(r.a)}}},450:function(e,t,n){e.exports={NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",consultPayments:"_rules_consultPayments__wwEGk",agreement:"_rules_agreement__AjqF1",cardContainer:"_rules_cardContainer__1KBPl",subtitleDate:"_rules_subtitleDate__2nfSU",agreementTitle:"_rules_agreementTitle__2ntc8",agreementDescription:"_rules_agreementDescription__TLXMi",labelAgreement:"_rules_labelAgreement__3bnWF",detail:"_rules_detail__T6QVd"}},515:function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var a=n(2),s=n(16),r=n(19),o=n(11),c=n(50),i=n(41),l=n(488),u=n(520),d=n.n(u),b=n(10),m=["id","name","methods","onChange","isChecked"],_=d.a.NAME_INPUT_CHECKBOX,E=d.a.TYPE_INPUT_CHECKBOX,O=o.b.memo((function(e){var t,n=e.id,l=e.name,u=e.methods,d=e.onChange,O=e.isChecked,j=Object(r.a)(e,m),p=o.b.useState(O),T=Object(s.a)(p,2),M=T[0],h=T[1],f=u.register,A=u.formState,P=u.setValue,C=u.clearErrors,x=A.errors,g="".concat(l);o.b.useEffect((function(){void 0!==O&&(h(O),P(g,O,{shouldValidate:!0}))}),[O,g,P]);var N=x[l];return Object(b.jsx)(i.a,{name:_,type:E,children:Object(b.jsx)(c.Checkbox,Object(a.a)(Object(a.a)(Object(a.a)({id:n||l},N&&{error:null===(t=N.message)||void 0===t?void 0:t.toString()}),f(g)),{},{isChecked:M,onChange:function(e){var t=!M;h(t),P(g,t),d&&d(e),C([g])}},j))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function j(e){var t=l.a.useContext();return Object(b.jsx)(O,Object(a.a)({methods:t},e))}j.displayName=_},520:function(e,t,n){e.exports={NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element"}},570:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",voidPaymentModal:"_rules_voidPaymentModal__252im",footer:"_rules_footer__12oQD",termsAndConditions:"_rules_termsAndConditions__h5pv6",downloadAll:"_rules_downloadAll__3a9nR",downloadMultiple:"_rules_downloadMultiple__2-5O9"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=96.23ed239c.chunk.js.map