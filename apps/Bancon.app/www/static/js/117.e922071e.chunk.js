(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[117,312],{228:function(e,t,c){"use strict";c.r(t),c.d(t,"default",(function(){return U}));var n=c(2),a=c(9),i=c(11),u=c(39),o=c(80),r=c(99),s=c(8),E=c(147),b=c(33),d=c(6),O=c(84),T=c(95),p=c(118),l=c(150),j=c(149),_=c(488),N=c(38),h=c(82),m=c(513),P=c(640),A=c(608),M=c(522),R=c(489),x=c(187),C=c(74),f=c(51),g=c(36),k=c(120),I=c(79),L=c(69),D=c(480),S=c.n(D),y=c(10);function U(){var e=Object(s.b)(),t=Object(o.g)(),c=Object(N.c)().textGet,D=Object(r.a)().getValueConfig,U=Object(g.i)().isDesktop,w=Object(C.a)(D("core.auth.captcha.google.siteKey")),Y=Object(C.a)(D("core.auth.captcha.enabled"))&&U,v=Object(C.a)(D("signup.checkCuit.link")),F=Object(f.sb)(f.O),B=Object(f.sb)(f.K),H=Object(f.sb)(f.N),q=Object(f.sb)(f.M),X=Object(s.c)(E.c.fetching),G=Object(s.c)(E.c.warning),V=Object(s.c)(E.c.error),K=Object(s.c)(E.c.exchangeToken),J=Object(s.c)(E.c.documentTypes),W=Object(s.c)(E.c.signupType),Q=c({uuid:"spa.documentType.error.cuit"}),Z=c({uuid:"spa.documentType.error.cdi"}),z=c({uuid:"spa.documentType.error.passport"}),$=c({uuid:"spa.generic.field.error.required"}),ee=c({uuid:"spa.signup.checkCuit.question"}),te=c({uuid:"spa.signup.checkCuit.link"}),ce=Object(k.e)(d.G.ONBOARDING),ne=Object(C.a)(D("onboarding.ios.disable")),ae=Object(s.c)(L.c.isIoS),ie=Object(A.b)({textErrorCuit:Q,textErrorCdi:Z,textErrorPassport:z,textErrorRequired:$}),ue=Object(u.a)(Object(A.b)({textErrorCuit:Q,textErrorCdi:Z,textErrorPassport:z,textErrorRequired:$}),u.e.object({captcha:Object(x.d)(u.e.string.required(),$)}));i.b.useEffect((function(){return window.onpopstate=function(){e(E.a.clean()),e(I.a.clean())},function(){window.onpopstate=function(){}}}),[e]),i.b.useEffect((function(){J.length||e(E.b.getDocumentTypes(null))}),[e,K,J]);var oe=i.b.useCallback((function(t){e(I.a.set({kind:"ERROR",text:t,duration:d.w}))}),[e]);return i.b.useEffect((function(){var n;void 0!==W&&(n={},Object(a.a)(n,T.d.ENROLLMENT_RETAIL,(function(){e(p.b.chooseRetailMethod({exchangeToken:K})),t(H)})),Object(a.a)(n,T.d.ENROLLMENT_CORPORATE,(function(){e(p.a.setIsCorporate()),t(q)})),Object(a.a)(n,T.d.ONBOARDING,(function(){ae&&ne?e(I.a.set({kind:"INFO",text:{uuid:"spa.onboarding.ios.disable.message"},duration:d.w})):ce?(e(j.a.clean()),e(l.b.clean()),e(j.a.showPresentation()),t(B)):e(I.a.set({kind:"ERROR",text:{uuid:"spa.onboarding.unavailable"},duration:d.w}))})),Object(a.a)(n,T.d.ALREADY_USER,(function(){Object(O.a)(),t(F)})),Object(a.a)(n,T.d.EXCEEDED_ATTEMPTS,(function(){Object(O.a)(),oe(c({uuid:"spa.onboarding.documentValidate.maxAttempts"}))})),Object(a.a)(n,T.d.INDETERMINATE,(function(){return Object(O.a)()})),n)[W]()}),[e,K,ce,t,q,H,F,B,W,oe,c,ae,ne]),Object(y.jsx)(R.a,{"header-onBack":function(){Object(O.a)(),e(b.a.setUserName(d.D)),t(F)},"header-title":"spa.signup.title",children:Object(y.jsx)("section",{children:Object(y.jsxs)(_.a,{schema:Y?ue:ie,warnings:G,onSubmit:function(t){var c=t.documentNumber,a=t.documentType;e(E.a.setDocumentNumber({number:c,type:a})),e(E.b.choosePath(Object(n.a)(Object(n.a)({},t),{},{exchangeToken:K})))},children:[Object(y.jsx)(N.b,{className:S.a.textSubtitle,uuid:"spa.signup.subtitle"}),Object(y.jsx)(A.a,{documentTypeDefValue:M.a,documentTypeList:J,isCaptchaEnabled:Y}),Object(y.jsxs)("div",{className:S.a.checkCuit,children:[Object(y.jsx)(N.b,{"aria-hidden":!0,tag:"span",uuid:"spa.signup.checkCuit.question"}),Object(y.jsx)(m.a,{ariaLabel:"".concat(ee," ").concat(te),to:v,children:Object(y.jsx)(N.b,{className:S.a.checkCuitLink,tag:"span",uuid:"spa.signup.checkCuit.link"})})]}),Object(y.jsx)(P.a,{hasError:Boolean(V||G),isEnabled:Y,name:"captcha",sitekey:w}),Object(y.jsx)(h.a,{label:{uuid:"spa.form.continue"},loading:X,type:"submit"})]})})})}},480:function(e,t,c){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_CAPTCHA:"Captcha",TYPE_CAPTCHA:"Element",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",checkCuit:"_rules_checkCuit__1MyZE",checkCuitLink:"_rules_checkCuitLink__2v7QB",textSubtitle:"_rules_textSubtitle__2dLxe"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=117.e922071e.chunk.js.map