(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[17],{499:function(e,t,n){"use strict";n.d(t,"a",(function(){return b}));var a=n(0),i=n(5);function c(e){var t=e.filename,n=e.path,a=e.flags;return new Promise((function(e,i){var c;function o(e){i(e)}(c=window.cordova.file[n],new Promise((function(e,t){window.resolveLocalFileSystemURL(c,(function(t){e(t)}),(function(e){t(e)}))}))).then((function(n){var i=n;i.getFile(t,a,(function(t){var n=new FileReader;t.createWriter((function(a){e({fileEntry:t,dirEntry:i,fileReader:n,fileWriter:a,fileWrite:function(e){return new Promise((function(t,n){a.onwriteend=function(){return t(a)},a.onerror=function(e){return n(e)},a.write(e)}))},fileRemove:function(){return new Promise((function(e,n){t.remove((function(){return e(!0)}),(function(e){return n(e)}))}))}})}),o)}),o)}))}))}var o=n(36),r=n(26),s=n(28);function l(){return u.apply(this,arguments)}function u(){return(u=Object(i.a)(Object(a.a)().mark((function e(){var t;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(r.c)();case 2:if(e.sent&&cordova.plugins){e.next=5;break}throw r.a.CORDOVA_UNAVAILABLE;case 5:if(t=cordova.plugins.fileOpener2){e.next=8;break}throw r.a.PLUGIN_UNAVAILABLE;case 8:return e.abrupt("return",t);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function _(e){return p.apply(this,arguments)}function p(){return p=Object(i.a)(Object(a.a)().mark((function e(t){var n,i,c,o,u;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.contentType,i=t.fileName,c=t.withDialog,e.next=3,Object(r.c)();case 3:if(e.sent){e.next=6;break}throw r.a.CORDOVA_UNAVAILABLE;case 6:return e.next=8,l();case 8:return o=e.sent,u=c?o.open:o.showOpenWithDialog,e.abrupt("return",new Promise((function(e,t){try{u(i,n,{success:function(){e({code:s.a.SUCCESS,value:!0})},error:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){t("boolean"===typeof e?new s.b(s.a.ERROR,o.open.name,s.c):new s.b(s.a.ERROR,o.open.name,e.message))}))})}catch(a){t(new s.b(s.a.ERROR_UNKNOWN,o.open.name,s.c))}})));case 11:case"end":return e.stop()}}),e)}))),p.apply(this,arguments)}function b(){var e=Object(o.i)(),t=e.isDesktop,n=e.isUnknown,r=e.platform;function s(e){var t=e.split(".").pop();return"png"===t||"jpg"===t||"gif"===t||"bmp"===t?"image/".concat(t):"pdf"===t?"application/".concat(t):"doc"===t||"docx"===t?"application/msword":"ppt"===t||"pptx"===t?"application/vnd.ms-powerpoint":"xls"===t||"xlsx"===t?"application/vnd.ms-excel":"xlsm"===t?"application/vnd.ms-excel.sheet.macroEnabled.12":"txt"===t?"text/plain":"zip"===t?"application/zip":void 0}return function(){var e=Object(i.a)(Object(a.a)().mark((function e(i,l){var u,p,b,d,f,E,O;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(u=r===o.b.CORDOVA_ANDROID,!(p=s(i))){e.next=19;break}if(!t&&!n){e.next=9;break}return(b=document.createElement("a")).href=window.URL.createObjectURL(l),b.download=i,b.click(),e.abrupt("return");case 9:return e.next=11,c({filename:i,path:u?"externalApplicationStorageDirectory":"dataDirectory",flags:{create:!0,exclusive:!1}});case 11:return d=e.sent,f=d.fileWrite,E=d.fileEntry,e.next=16,f(l);case 16:return O={contentType:p,fileName:E.nativeURL,withDialog:!0},e.next=19,_(O);case 19:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}()}},501:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var a=512,i=0;function c(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a,c=window.atob(e),o=[],r=i;r<c.length;r+=n){for(var s=c.slice(r,r+n),l=new Array(s.length),u=i;u<s.length;u++)l[u]=s.charCodeAt(u);o.push(new Uint8Array(l))}return new Blob(o,{type:t})}},508:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(6);function i(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"pdf";if("string"===typeof e&&e.trim()){var n=e.trim().toLowerCase().replace(/[^a-zA-Z0-9]/g,a.Nb);return"".concat(n,".").concat(t)}var i=new Date,c=i.getMonth()+a.fb,o=(c<a.Fb?a.Ub:a.D)+c,r=i.getDate(),s=(r<a.Fb?a.Ub:a.D)+r;return"".concat(i.getFullYear(),"_").concat(o,"_").concat(s,".").concat(t)}},532:function(e,t,n){"use strict";n.d(t,"a",(function(){return M}));var a=n(16),i=n(11),c=n(41),o=n(36),r=n(50),s=n(6),l=n(8),u=n(33),_=n(271),p=n(501),b=n(154),d=n(499),f=n(38),E=n(82),O=n(533),j=n.n(O),T=n(534),m=n.n(T),v=n(508),h=n(270),x=n(10),N=m.a.NAME_TICKET,g=m.a.TYPE_TICKET,k={hasModoLogo:!1,isDownloadable:!1,isShareable:!1,navigateButton:{},responseDescription:s.D};function M(e){var t=e,n=t.idTransaction,s=t.buttonText,O=t.children,T=t.className,m=t.transactionStatus,k=t.responseTitle,M=t.responseDescription,w=t.navigateButton,A=t.hasModoLogo,I=t.titleText,P=t.handleButton,R=t.isDownloadable,D=t.isShareable,L=Object(l.b)(),S=Object(d.a)(),C=Object(o.i)().isDesktop,F=i.b.useState(!1),y=Object(a.a)(F,2),U=y[0],Y=y[1],B=i.b.useState(!1),H=Object(a.a)(B,2),K=H[0],V=H[1],z=Object(l.c)(u.e.token),G=Object(l.c)(b.c.fetching),W=Object(l.c)(b.c.fetchedFile),X=Object(l.c)(b.c.filename),q=Object(l.c)(b.c.content),J=R||D,Q=Object(v.a)(X),Z="string"===typeof I;i.b.useEffect((function(){L(b.a.clean())}),[L]),i.b.useEffect((function(){(K||U)&&z&&(W||X||q?(X&&q&&(U&&(S(Q,Object(p.a)(q)),Y(!1)),K&&(Object(_.a)({options:{message:X,subject:X},files:[{fileName:Q,base64File:q}]}),V(!1))),L(b.a.setFetchedFile(!1))):L(b.b.generatePdf({token:z,idTransaction:n})))}),[q,L,U,W,X,Q,S,n,K,z]);var $={FINISHED:Object(x.jsx)(r.Icon,{name:"success",size:"large",stroke:"success"}),PROCESSING:Object(x.jsx)(r.Icon,{name:"clock",size:"large",stroke:"info"}),PENDING:Object(x.jsx)(r.Icon,{name:"clock",size:"large",stroke:"info"}),FAILED:Object(x.jsx)(r.Icon,{name:"error",size:"large",stroke:"error"}),ANNULED:Object(x.jsx)(r.Icon,{name:"warning",size:"large",stroke:"warning"}),RETURNED:Object(x.jsx)(r.Icon,{name:"warning",size:"large",stroke:"warning"})};return G?Object(x.jsx)(h.a,{}):Object(x.jsxs)(c.a,{className:T,name:N,tag:"section",type:g,children:[Object(x.jsx)("header",{children:Z?Object(x.jsx)(f.b,{className:j.a.title,fallback:I,tag:"h1",uuid:I}):I}),Object(x.jsxs)("section",{children:[J&&Object(x.jsxs)("div",{className:j.a.actions,children:[D&&!C&&Object(x.jsx)(E.a,{icon:"share",kind:"icon",label:{uuid:"spa.a11y.buttons.share"},size:"small",variant:"text",onClick:function(){V(!0)}}),R&&Object(x.jsx)(E.a,{icon:"download",kind:"icon",label:{uuid:"spa.a11y.buttons.download"},size:"small",variant:"text",onClick:function(){Y(!0)}})]}),Object(x.jsx)("div",{className:j.a.responseIcon,children:$[m]}),Object(x.jsx)(f.b,{className:j.a.responseTitle,fallback:k,tag:"h2",uuid:k}),M&&Object(x.jsx)(f.b,{className:j.a.responseDescription,tag:"h3",uuid:M}),(null===w||void 0===w?void 0:w.label)&&(null===w||void 0===w?void 0:w.handleClick)&&Object(x.jsx)(E.a,{className:j.a.navigateButton,kind:"plain",label:w.label,type:"button",onClick:w.handleClick}),O,A&&Object(x.jsx)("div",{className:j.a.responseIcon,children:Object(x.jsx)(r.Icon,{name:"modo"})})]}),Object(x.jsx)("footer",{children:Object(x.jsx)(E.a,{label:{uuid:s},onClick:P})})]})}M.defaultProps=k},533:function(e,t,n){e.exports={NAME_TICKET:"Ticket",TYPE_TICKET:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",title:"_rules_title__1SNPA",actions:"_rules_actions__30efJ",responseIcon:"_rules_responseIcon__1McyH",responseTitle:"_rules_responseTitle__3H3Id",responseDescription:"_rules_responseDescription__1NvkT",navigateButton:"_rules_navigateButton__Dlve9"}},534:function(e,t,n){e.exports={NAME_TICKET:"Ticket",TYPE_TICKET:"Section"}},555:function(e,t,n){e.exports={NAME_SECURITY_SECTION:"SecuritySection",TYPE_SECURITY_SECTION:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",gap:"_rules_gap__2e5pE",alert:"_rules_alert__3kD6C",alertIcon:"_rules_alertIcon__2DEAq",bancorKey:"_rules_bancorKey__11IqG",info:"_rules_info__8L3rd",icon:"_rules_icon__3dwmO",contentModal:"_rules_contentModal__1CZKE",buttonSoftToken:"_rules_buttonSoftToken__2iQ5i",row:"_rules_row__1VWmU",label:"_rules_label__1-_4D",title:"_rules_title__1pmQf",device:"_rules_device__uL0Yc",transactionCode:"_rules_transactionCode__2cX6c",stepList:"_rules_stepList__3M6K9",linkOtpTitle:"_rules_linkOtpTitle__2aCjL",linkOtpDescription:"_rules_linkOtpDescription__3bv4-",linkOtpList:"_rules_linkOtpList__pwrDp",linkOtpIcon:"_rules_linkOtpIcon__gZ38i",linkOtpFooter:"_rules_linkOtpFooter__2ohVu",footer:"_rules_footer__1QsIY"}},678:function(e,t,n){"use strict";n.d(t,"a",(function(){return T}));var a=n(11),i=n(8),c=n(87),o=n(38),r=n(532),s=n(504),l=n(100),u=n(6),_=n(153),p=n(33),b=n(270),d=n(51),f=n(17),E=n(555),O=n.n(E),j=n(10);function T(){var e=Object(i.b)(),t=Object(d.qb)(),n=Object(i.c)(p.e.token),E=Object(i.c)(c.c.idTransaction),T=Object(i.c)(_.c.transaction),m=Object(i.c)(_.c.transactionsFetching),v=Object(d.sb)(d.n),h=null===T||void 0===T?void 0:T.data,x=null===h||void 0===h?void 0:h.validationType,N=E.substring(u.Sb,u.Bb),g=x===f.j.OTPMOBILE,k=g?"spa.otpconfiguration.otp.ticket.title":"spa.otpconfiguration.sms.ticket.title",M=a.b.useCallback((function(){e(_.a.clean())}),[e]);return a.b.useEffect((function(){if(n&&E)return e(_.b.readTransaction({accessToken:n,idTransaction:E})),function(){return M()}}),[e,n,E,M]),m||!T?Object(j.jsx)(b.a,{}):Object(j.jsx)(r.a,{isDownloadable:!0,isShareable:!0,buttonText:"spa.otpconfiguration.otp.ticket.button",handleButton:function(){e(c.a.setViewedTicket()),t(v)},idTransaction:E,responseDescription:"spa.otpconfiguration.otp.ticket.subtitle",responseTitle:"spa.otpconfiguration.otp.ticket.".concat(x),titleText:k,transactionStatus:null===T||void 0===T?void 0:T.idTransactionStatus,children:Object(j.jsxs)("div",{children:[Object(j.jsxs)("div",{className:O.a.row,children:[Object(j.jsx)(o.b,{className:O.a.label,uuid:"spa.modo.link.cards.ticket.transaction.code"}),Object(j.jsx)(o.b,{className:O.a.transactionCode,children:N})]}),Object(j.jsxs)("div",{className:O.a.row,children:[Object(j.jsx)(o.b,{className:O.a.label,uuid:"spa.modo.link.cards.ticket.status"}),Object(j.jsx)(o.b,{uuid:"spa.otpconfiguration.otp.ticket.finished"})]}),Object(j.jsxs)("div",{className:O.a.row,children:[Object(j.jsx)(o.b,{className:O.a.label,uuid:"spa.modo.link.cards.ticket.date"}),Object(j.jsx)(s.a,{date:new Date,formatParams:{format:l.a.MEDIUM}})]}),g&&Object(j.jsxs)(a.b.Fragment,{children:[Object(j.jsx)("div",{className:O.a.row,children:Object(j.jsx)(o.b,{uuid:"spa.otpconfiguration.success.info"})}),Object(j.jsx)("div",{className:O.a.row,children:Object(j.jsx)(o.b,{uuid:"spa.otpconfiguration.softoken.FINISHED.message"})})]})]})})}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=17.4ebfc5cb.chunk.js.map