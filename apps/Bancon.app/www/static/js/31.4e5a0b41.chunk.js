(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[31],{636:function(e,t,n){"use strict";function a(e){var t=e.split("@"),n="",a="";return t.length>9?(n=t[8],a=t[10]):(n=t[3],a=t[0]),{gender:n,order:a}}n.d(t,"a",(function(){return a}))},803:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",title:"_rules_title__3cBPT"}},804:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var a=n(11),c=n(99),i=n(8),r=n(87),o=n(38),s=n(82),u=n(513),l=n(74),b=n(555),p=n.n(b),j=n(10);function d(){var e=Object(c.a)().getValueConfig,t=Object(i.b)(),n=Object(l.a)(e("otpconfiguration.select.validation.token.activation.bancorKey.explanation.link.url")),b=Object(l.a)(e("second.factor.selfie.enabled"));return Object(j.jsxs)(a.b.Fragment,{children:[Object(j.jsxs)("div",{className:p.a.gap,children:[Object(j.jsx)(o.b,{align:"center",tag:"h4",uuid:"spa.otpconfiguration.otp.link.title"}),Object(j.jsx)(o.b,{className:p.a.info,tag:"h6",uuid:"spa.otpconfiguration.select.validation.token.explanation.question"}),Object(j.jsx)(o.b,{className:p.a.info,uuid:"spa.otpconfiguration.select.validation.token.explanation.answer"}),Object(j.jsx)(o.b,{className:p.a.info,uuid:"spa.otpconfiguration.select.validation.token.activation"}),Object(j.jsx)(o.b,{tag:"h6",uuid:"spa.otpconfiguration.select.validation.token.activation.bancorKey.title"}),Object(j.jsx)(o.b,{uuid:"spa.otpconfiguration.select.validation.token.activation.bancorKey.explanation"}),Object(j.jsx)(u.a,{className:p.a.bancorKey,to:n,children:Object(j.jsx)(o.b,{uuid:"spa.otpconfiguration.select.validation.token.activation.bancorKey.explanation.link.label"})}),b&&Object(j.jsxs)(a.b.Fragment,{children:[Object(j.jsxs)("div",{className:p.a.info,children:[Object(j.jsx)(o.b,{tag:"h6",uuid:"spa.otpconfiguration.select.validation.token.activation.renaper.title"}),Object(j.jsx)(o.b,{uuid:"spa.otpconfiguration.select.validation.token.activation.renaper.explanation"})]}),Object(j.jsx)(o.b,{uuid:"spa.otpconfiguration.select.validation.token.activation.selectionPhrase"})]})]}),Object(j.jsxs)("div",{className:p.a.footer,children:[Object(j.jsx)(s.a,{label:{uuid:"spa.otpconfiguration.select.validation.token.activation.bancorKey.button"},type:"button",onClick:function(){t(r.a.setBancorPasswordStep())}}),b&&Object(j.jsx)(s.a,{label:{uuid:"spa.otpconfiguration.select.validation.token.activation.renaper.button"},type:"button",onClick:function(){t(r.a.setSelfieStep())}})]})]})}},805:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var a=n(11),c=n(50),i=n(38),r=n(82),o=n(87),s=n(8),u=n(555),l=n.n(u),b=n(10);function p(){var e=Object(s.b)();return Object(b.jsxs)(a.b.Fragment,{children:[Object(b.jsx)(i.b,{align:"center",className:l.a.linkOtpTitle,tag:"h1",uuid:"spa.link.otp.title"}),Object(b.jsx)(i.b,{className:l.a.linkOtpDescription,tag:"h2",uuid:"spa.link.otp.two.steps"}),Object(b.jsxs)("ul",{className:l.a.linkOtpList,children:[Object(b.jsx)("li",{children:Object(b.jsx)(i.b,{uuid:"spa.link.otp.first.step"})}),Object(b.jsx)("li",{children:Object(b.jsx)(i.b,{uuid:"spa.link.otp.second.step"})})]}),Object(b.jsx)(c.Separator,{}),Object(b.jsx)(c.Icon,{className:l.a.linkOtpIcon,name:"rocketEmoji",size:"large"}),Object(b.jsx)(i.b,{className:l.a.linkOtpFooter,uuid:"spa.link.otp.benefits"}),Object(b.jsx)(i.b,{className:l.a.linkOtpFooter,uuid:"spa.link.otp.more.comfortable.and.practical"}),Object(b.jsx)("div",{className:l.a.buttonSoftToken,children:Object(b.jsx)(r.a,{label:{uuid:"spa.key.bancor.validation.button"},type:"button",onClick:function(){e(o.a.setEnabledTokenNow())}})})]})}},842:function(e,t,n){"use strict";n.d(t,"a",(function(){return S}));var a=n(0),c=n(5),i=n(16),r=n(11),o=n(524),s=n(99),u=n(270),l=n(606),b=n(74),p=n(636),j=n(10);function d(e){var t=r.b.useState(!1),n=Object(i.a)(t,2),o=n[0],d=n[1],f=Object(s.a)().getValueConfig,O=Object(b.a)(f("spa.onboarding.vu.color")),v=r.b.useCallback(Object(c.a)(Object(a.a)().mark((function t(){var n,c,i,r,s,u,b,j,f,v;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!o){t.next=2;break}return t.abrupt("return");case 2:return n=e.callbackSuccess,c=e.callbackFailure,t.prev=3,d(!0),t.next=7,Object(l.b)({color:O});case 7:return i=t.sent,r=i.value,s=r.document,u=r.imageBase64,s.gender&&s.order||(b=Object(p.a)(s.rawValue),j=b.gender,f=b.order,s.gender=j,s.order=f),v=JSON.stringify(s),t.next=13,n({documentData:v,documentToSave:u});case 13:t.next=19;break;case 15:return t.prev=15,t.t0=t.catch(3),t.next=19,c(t.t0);case 19:return t.prev=19,d(!1),t.finish(19);case 22:case"end":return t.stop()}}),t,null,[[3,15,19,22]])}))),[o,d,e,O]);return r.b.useEffect((function(){v()}),[v]),Object(j.jsx)(u.a,{})}function f(e){var t=r.b.useState(!1),n=Object(i.a)(t,2),o=n[0],p=n[1],d=Object(s.a)().getValueConfig,f=Object(b.a)(d("spa.onboarding.vu.color")),O=r.b.useCallback(Object(c.a)(Object(a.a)().mark((function t(){var n,c,i,r;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!o){t.next=2;break}return t.abrupt("return");case 2:return n=e.callbackSuccess,c=e.callbackFailure,t.prev=3,p(!0),t.next=7,Object(l.a)({color:f});case 7:return i=t.sent,r=i.value.imageBase64,t.next=11,n({documentToSave:r});case 11:t.next=17;break;case 13:return t.prev=13,t.t0=t.catch(3),t.next=17,c(t.t0);case 17:return t.prev=17,p(!1),t.finish(17);case 20:case"end":return t.stop()}}),t,null,[[3,13,17,20]])}))),[o,p,e,f]);return r.b.useEffect((function(){O()}),[O]),Object(j.jsx)(u.a,{})}function O(e){var t=r.b.useState(!1),n=Object(i.a)(t,2),o=n[0],p=n[1],d=Object(s.a)().getValueConfig,f=Object(b.a)(d("spa.onboarding.vu.color")),O=Object(b.a)(d("spa.onboarding.vu.gesturesAmount")),v=Object(b.a)(d("spa.onboarding.vu.disableFaceMoveGesture")),k=Object(b.a)(d("spa.onboarding.vu.smileMinSeconds")),x=Object(b.a)(d("spa.onboarding.vu.smileMaxSeconds")),m=Object(b.a)(d("spa.onboarding.vu.winkMinSeconds")),g=Object(b.a)(d("spa.onboarding.vu.winkMaxSeconds")),h=Object(b.a)(d("spa.onboarding.vu.eyesClosedMinSeconds")),S=Object(b.a)(d("spa.onboarding.vu.eyesClosedMaxSeconds")),M=Object(b.a)(d("spa.onboarding.vu.smileMinimumScore")),E=Object(b.a)(d("spa.onboarding.vu.winkMinimumScore")),w=Object(b.a)(d("spa.onboarding.vu.eyesClosedMinimumScore")),y=Object(b.a)(d("spa.onboarding.vu.minimumValidGestures")),C=r.b.useMemo((function(){return{color:f,gesturesAmount:O,disableFaceMoveGesture:v,smileMinSeconds:k,smileMaxSeconds:x,winkMinSeconds:m,winkMaxSeconds:g,eyesClosedMinSeconds:h,eyesClosedMaxSeconds:S,smileMinimumScore:M,winkMinimumScore:E,eyesClosedMinimumScore:w,minimumValidGestures:y}}),[f,O,v,k,x,m,g,h,S,M,E,w,y]),T=r.b.useCallback(Object(c.a)(Object(a.a)().mark((function t(){var n,c,i,r,s;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!o){t.next=2;break}return t.abrupt("return");case 2:return n=e.callbackSuccess,c=e.callbackFailure,t.prev=3,p(!0),t.next=7,Object(l.c)(C);case 7:return i=t.sent,r=i.value.selfieList,s=JSON.stringify(r),t.next=12,n(s);case 12:t.next=18;break;case 14:return t.prev=14,t.t0=t.catch(3),t.next=18,c(t.t0);case 18:return t.prev=18,p(!1),t.finish(18);case 21:case"end":return t.stop()}}),t,null,[[3,14,18,21]])}))),[p,o,e,C]);return r.b.useEffect((function(){T()}),[T]),Object(j.jsx)(u.a,{})}var v=n(82),k=n(38),x=n(803),m=n.n(x);function g(e){var t=e.handleReCapture;return Object(j.jsxs)("section",{children:[Object(j.jsx)(k.b,{className:m.a.title,uuid:"spa.onboarding.step6.error.client"}),Object(j.jsx)(v.a,{label:{uuid:"spa.otpconfiguration.otp.renaper.recapture"},onClick:t})]})}var h=function(e){return e[e.front=0]="front",e[e.back=1]="back",e[e.selfie=2]="selfie",e[e.finished=3]="finished",e}(h||{});function S(e){var t=e.onMount,n=e.onUnmount,s=e.callbackBack,u=e.callbackFront,l=e.callbackSelfie,b=!u||!s,p=r.b.useState(!1),v=Object(i.a)(p,2),k=v[0],x=v[1],m=r.b.useState(b?h.selfie:h.front),S=Object(i.a)(m,2),M=S[0],E=S[1],w=r.b.useCallback((function(){return x(!0)}),[x]),y=r.b.useCallback((function(){return x(!1)}),[x]);r.b.useEffect((function(){return t&&t(),n}),[t,n]),r.b.useEffect((function(){return t&&t(),n}),[t,n]);var C={front:{condition:!k&&M===h.front,component:d,props:{callbackSuccess:function(e){return N.apply(this,arguments)},callbackFailure:w}},back:{condition:!k&&M===h.back,component:f,props:{callbackSuccess:function(e){return F.apply(this,arguments)},callbackFailure:w}},selfie:{condition:!k&&M===h.selfie,component:O,props:{callbackSuccess:function(e){return T.apply(this,arguments)},callbackFailure:w}},error:{condition:k,component:g,props:{handleReCapture:y}}};return Object(j.jsx)(o.b,{steps:C});function T(){return(T=Object(c.a)(Object(a.a)().mark((function e(t){return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,l(t);case 3:E(h.finished),e.next=9;break;case 6:e.prev=6,e.t0=e.catch(0),x(!0);case 9:case"end":return e.stop()}}),e,null,[[0,6]])})))).apply(this,arguments)}function N(){return(N=Object(c.a)(Object(a.a)().mark((function e(t){return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!u){e.next=10;break}return e.prev=1,e.next=4,u(t);case 4:E(h.back),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(1),x(!0);case 10:case"end":return e.stop()}}),e,null,[[1,7]])})))).apply(this,arguments)}function F(){return(F=Object(c.a)(Object(a.a)().mark((function e(t){return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!s){e.next=10;break}return e.prev=1,e.next=4,s(t);case 4:E(h.selfie),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(1),x(!0);case 10:case"end":return e.stop()}}),e,null,[[1,7]])})))).apply(this,arguments)}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=31.4e5a0b41.chunk.js.map