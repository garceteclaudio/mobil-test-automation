(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[173,300],{395:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return A}));var n=a(16),s=a(11),i=a(152),c=a(33),r=a(122),l=a(8),o=a(51),u=a(569),d=a(6),p=a(100),b=a(500),m=a(38),j=a(504),_=a(497),O=a(499),f=a(501),T=a(271),E=a(451),h=a.n(E),x=a(10);function A(){var e=s.b.useState(!1),t=Object(n.a)(e,2),a=t[0],E=t[1],A=s.b.useState(!1),v=Object(n.a)(A,2),N=v[0],g=v[1],M=Object(O.a)(),P=Object(o.qb)(),R=Object(l.b)(),y=Object(l.c)(i.c.selectedRow),D=Object(l.c)(c.e.token),w=Object(l.c)(i.c.contractId),B=Object(l.c)(i.c.conceptPay),I=Object(l.c)(i.c.fileContent),S=Object(l.c)(i.c.fileName),k=Object(l.c)(c.e.environmentName),U=Object(l.c)(c.e.token),C={label:"spa.suppliers.consultPayments.ticket.title",dataValue:d.D},F=new Date;return s.b.useEffect((function(){return function(){R(i.a.cleanDownload())}}),[R]),s.b.useEffect((function(){y||P(o.a)}),[P,y]),s.b.useEffect((function(){(N||a)&&U&&S&&I&&(a&&(M(S,Object(f.a)(I)),E(!1)),N&&(Object(T.a)({options:{message:S,subject:S},files:[{fileName:S,base64File:I}]}),g(!1)))}),[R,a,M,N,U,I,S]),Object(x.jsx)(_.a,{withoutBox:!0,className:h.a.detail,"header-onBack":L,children:Object(x.jsx)(u.a,{isDownloadable:!0,isShareable:!0,finishButtonText:"spa.form.back",handleDownload:function(){if(!D||!y)return;E(!0),R(i.b.downloadMultiple({token:D,lastBatch:d.Ub,contractId:w,paymentIdIndividual:y.paymentBatchPayId,paymentIds:[],requestDateFrom:y.paymentBatchProgrammedDate,requestDateTo:y.paymentBatchDate,paymentReference:y.paymentBatchReference||d.D,paymentFilename:y.paymentBatchFile||d.D,conceptPay:B,format:"pdf"}))},handleFinish:L,handleShare:function(){if(!D||!y)return;g(!0),R(i.b.downloadMultiple({token:D,lastBatch:d.Ub,contractId:w,paymentIdIndividual:y.paymentBatchPayId,paymentIds:[],requestDateFrom:y.paymentBatchProgrammedDate,requestDateTo:y.paymentBatchDate,paymentReference:y.paymentBatchReference||d.D,paymentFilename:y.paymentBatchFile||d.D,conceptPay:B,format:"pdf"}))},title:C,transactionDate:(null===y||void 0===y?void 0:y.paymentBatchDate)||F,transactionStatus:r.b.STATUS_IMPUTED,children:Object(x.jsxs)("ul",{className:h.a.content,children:[Object(x.jsxs)("li",{children:[Object(x.jsx)(m.b,{tag:"span",uuid:"spa.suppliers.detail.payment.date"}),Object(x.jsx)(j.a,{date:(null===y||void 0===y?void 0:y.paymentBatchProgrammedDate)||F,formatParams:{format:p.a.SHORT}})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(m.b,{tag:"span",uuid:"spa.supplier.transfer.date"}),Object(x.jsx)(j.a,{date:(null===y||void 0===y?void 0:y.paymentBatchDate)||F,formatParams:{format:p.a.SHORT}})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(m.b,{tag:"span",uuid:"spa.suppliers.detail.payment.method"}),Object(x.jsx)(m.b,{tag:"span",uuid:"spa.transaction.ticket.status.imputed"})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(m.b,{tag:"span",uuid:"spa.suppliers.detail.payment.reference"}),Object(x.jsx)(m.b,{tag:"span",children:null===y||void 0===y?void 0:y.paymentBatchReference})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(m.b,{tag:"span",uuid:"spa.suppliers.detail.payment.amount"}),Object(x.jsx)(b.a,{amount:null===y||void 0===y?void 0:y.paymentBatchTotalAmount})]}),Object(x.jsx)("li",{children:Object(x.jsx)(m.b,{tag:"h3",uuid:"spa.suppliers.detail.origin"})}),Object(x.jsxs)("li",{children:[Object(x.jsx)(m.b,{tag:"span",uuid:"spa.suppliers.detail.name"}),Object(x.jsx)(m.b,{tag:"span",children:k})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(m.b,{tag:"span",uuid:"spa.suppliers.detail.document"}),Object(x.jsx)(m.b,{tag:"span",children:null===y||void 0===y?void 0:y.paymentBatchDocNumber})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(m.b,{tag:"span",uuid:"spa.suppliers.detail.cbu.origin"}),Object(x.jsx)(m.b,{tag:"span",children:null===y||void 0===y?void 0:y.paymentBatchBankAccountCBU})]}),Object(x.jsx)("li",{children:Object(x.jsx)(m.b,{tag:"h3",uuid:"spa.suppliers.detail.destination"})}),Object(x.jsxs)("li",{children:[Object(x.jsx)(m.b,{tag:"span",uuid:"spa.suppliers.detail.name.destination"}),Object(x.jsx)(m.b,{tag:"span",children:null===y||void 0===y?void 0:y.paymentBatchBankBusinessNameReceiver})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(m.b,{tag:"span",uuid:"spa.suppliers.detail.document"}),Object(x.jsx)(m.b,{tag:"span",children:null===y||void 0===y?void 0:y.paymentBatchDocumentIdReceiver})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)(m.b,{tag:"span",uuid:"spa.suppliers.detail.cbu.destination"}),Object(x.jsx)(m.b,{tag:"span",children:null===y||void 0===y?void 0:y.paymentBatchBankAccountCBUReceiver})]})]})})});function L(){P(o.a)}}},451:function(e,t,a){e.exports={NAME_BASEINTERNAL_CONTAINER:"BaseInternalContainer",TYPE_BASEINTERNAL_CONTAINER:"Container",NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",consultPayments:"_rules_consultPayments__3wAw5",agreement:"_rules_agreement__2Lo-n",cardContainer:"_rules_cardContainer__182Ku",subtitleDate:"_rules_subtitleDate__3dVup",agreementTitle:"_rules_agreementTitle__7neCu",agreementDescription:"_rules_agreementDescription__18QQh",labelAgreement:"_rules_labelAgreement__1fiR7",detail:"_rules_detail__6HUKH",loading:"_rules_loading__9VIE-"}},499:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var n=a(0),s=a(5);function i(e){var t=e.filename,a=e.path,n=e.flags;return new Promise((function(e,s){var i;function c(e){s(e)}(i=window.cordova.file[a],new Promise((function(e,t){window.resolveLocalFileSystemURL(i,(function(t){e(t)}),(function(e){t(e)}))}))).then((function(a){var s=a;s.getFile(t,n,(function(t){var a=new FileReader;t.createWriter((function(n){e({fileEntry:t,dirEntry:s,fileReader:a,fileWriter:n,fileWrite:function(e){return new Promise((function(t,a){n.onwriteend=function(){return t(n)},n.onerror=function(e){return a(e)},n.write(e)}))},fileRemove:function(){return new Promise((function(e,a){t.remove((function(){return e(!0)}),(function(e){return a(e)}))}))}})}),c)}),c)}))}))}var c=a(36),r=a(26),l=a(28);function o(){return u.apply(this,arguments)}function u(){return(u=Object(s.a)(Object(n.a)().mark((function e(){var t;return Object(n.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(r.c)();case 2:if(e.sent&&cordova.plugins){e.next=5;break}throw r.a.CORDOVA_UNAVAILABLE;case 5:if(t=cordova.plugins.fileOpener2){e.next=8;break}throw r.a.PLUGIN_UNAVAILABLE;case 8:return e.abrupt("return",t);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function d(e){return p.apply(this,arguments)}function p(){return p=Object(s.a)(Object(n.a)().mark((function e(t){var a,s,i,c,u;return Object(n.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.contentType,s=t.fileName,i=t.withDialog,e.next=3,Object(r.c)();case 3:if(e.sent){e.next=6;break}throw r.a.CORDOVA_UNAVAILABLE;case 6:return e.next=8,o();case 8:return c=e.sent,u=i?c.open:c.showOpenWithDialog,e.abrupt("return",new Promise((function(e,t){try{u(s,a,{success:function(){e({code:l.a.SUCCESS,value:!0})},error:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){t("boolean"===typeof e?new l.b(l.a.ERROR,c.open.name,l.c):new l.b(l.a.ERROR,c.open.name,e.message))}))})}catch(n){t(new l.b(l.a.ERROR_UNKNOWN,c.open.name,l.c))}})));case 11:case"end":return e.stop()}}),e)}))),p.apply(this,arguments)}function b(){var e=Object(c.i)(),t=e.isDesktop,a=e.isUnknown,r=e.platform;function l(e){var t=e.split(".").pop();return"png"===t||"jpg"===t||"gif"===t||"bmp"===t?"image/".concat(t):"pdf"===t?"application/".concat(t):"doc"===t||"docx"===t?"application/msword":"ppt"===t||"pptx"===t?"application/vnd.ms-powerpoint":"xls"===t||"xlsx"===t?"application/vnd.ms-excel":"xlsm"===t?"application/vnd.ms-excel.sheet.macroEnabled.12":"txt"===t?"text/plain":"zip"===t?"application/zip":void 0}return function(){var e=Object(s.a)(Object(n.a)().mark((function e(s,o){var u,p,b,m,j,_,O;return Object(n.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(u=r===c.b.CORDOVA_ANDROID,!(p=l(s))){e.next=19;break}if(!t&&!a){e.next=9;break}return(b=document.createElement("a")).href=window.URL.createObjectURL(o),b.download=s,b.click(),e.abrupt("return");case 9:return e.next=11,i({filename:s,path:u?"externalApplicationStorageDirectory":"dataDirectory",flags:{create:!0,exclusive:!1}});case 11:return m=e.sent,j=m.fileWrite,_=m.fileEntry,e.next=16,j(o);case 16:return O={contentType:p,fileName:_.nativeURL,withDialog:!0},e.next=19,d(O);case 19:case"end":return e.stop()}}),e)})));return function(t,a){return e.apply(this,arguments)}}()}},501:function(e,t,a){"use strict";a.d(t,"a",(function(){return i}));var n=512,s=0;function i(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:n,i=window.atob(e),c=[],r=s;r<i.length;r+=a){for(var l=i.slice(r,r+a),o=new Array(l.length),u=s;u<l.length;u++)o[u]=l.charCodeAt(u);c.push(new Uint8Array(o))}return new Blob(c,{type:t})}},569:function(e,t,a){"use strict";a.d(t,"a",(function(){return x}));var n=a(2),s=(a(11),a(41)),i=a(36),c=a(50),r=a(83),l=a(100),o=a(6),u=a(38),d=a(82),p=a(504),b=a(581),m=a.n(b),j=a(587),_=a.n(j),O=a(10),f=_.a.NAME_TICKET,T=_.a.TYPE_TICKET,E={cancelButtonText:o.D,statusCustomMessage:o.D,isDownloadable:!1,isShareable:!1},h="spa.transaction.ticket";function x(e){var t=e,a=t.transactionDate,o=t.transactionStatus,b=t.statusCustomMessage,j=t.finishButtonText,_=t.cancelButtonText,E=t.children,x=t.className,A=t.isDownloadable,v=t.isShareable,N=t.title,g=t.subtitle,M=t.handleCancel,P=t.handleFinish,R=t.handleDownload,y=t.handleShare,D=Object(i.i)().isDesktop,w=Object(u.c)().textGet,B=A||v,I=function(){switch(o){case r.e.STATUS_AUTHORIZED:return{variant:"success",title:"".concat(h,".status.authorized")};case r.e.STATUS_FINISHED:return{variant:"success",title:"".concat(h,".status.finished")};case r.e.STATUS_IMPUTED:return{variant:"success",title:"".concat(h,".status.imputed")};case r.e.STATUS_PENDING_SIGNATURE:return{variant:"info",title:"".concat(h,".status.pending.signature")};case r.e.STATUS_PENDING:return{variant:"info",title:"".concat(h,".status.pending")};default:return{variant:"error",title:"".concat(h,".status.error")}}}(),S=w({uuid:b||I.title,fallback:b||I.title});return Object(O.jsx)(s.a,{className:x,name:f,tag:"section",type:T,children:Object(O.jsxs)(c.Card,{className:m.a.wrapperTicket,children:[Object(O.jsxs)("header",{children:[Object(O.jsx)(c.Tag,{className:m.a.status,variant:I.variant,children:S}),a&&Object(O.jsx)(p.a,{className:m.a.date,date:a,formatParams:{format:l.a.FULL}}),Object(O.jsxs)("div",{className:m.a.titles,children:[Object(O.jsx)(u.b,{className:m.a.label,fallback:N.label,tag:"h4",uuid:N.label}),Object(O.jsx)(u.b,{className:m.a.value,tag:"span",children:N.dataValue})]}),g&&Object(O.jsxs)("div",{className:m.a.subtitles,children:[Object(O.jsx)(u.b,{className:m.a.label,fallback:g.label,tag:"h6",uuid:g.label}),Object(O.jsx)(u.b,{className:m.a.value,tag:"h6",children:g.dataValue})]})]}),Object(O.jsx)(c.Separator,{}),Object(O.jsxs)("section",{children:[E,B&&Object(O.jsxs)("div",{className:m.a.actions,children:[v&&!D&&Object(O.jsxs)(d.a,{kind:"plain",label:{uuid:"spa.a11y.buttons.share"},type:"button",variant:"text",onClick:y,children:[Object(O.jsx)(c.Icon,{name:"share",size:"small"}),Object(O.jsx)(u.b,{tag:"span",uuid:"spa.a11y.buttons.share"})]}),A&&D&&Object(O.jsxs)(d.a,{kind:"plain",label:{uuid:"spa.a11y.buttons.download"},type:"button",variant:"text",onClick:R,children:[Object(O.jsx)(c.Icon,{name:"download",size:"small"}),Object(O.jsx)(u.b,{tag:"span",uuid:"spa.a11y.buttons.download"})]})]})]}),Object(O.jsxs)("footer",{children:[Object(O.jsx)(d.a,Object(n.a)(Object(n.a)({},D&&{inline:!0}),{},{label:{uuid:j,fallback:j},onClick:P})),_&&Object(O.jsx)(d.a,Object(n.a)(Object(n.a)({},D&&{inline:!0}),{},{label:{uuid:_,fallback:_},variant:"text",onClick:M})),Object(O.jsx)(u.b,{className:m.a.message,tag:"span",uuid:"".concat(h,".footer.message")})]})]})})}x.defaultProps=E},581:function(e,t,a){e.exports={NAME_TICKET:"Ticket",TYPE_TICKET:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",wrapperTicket:"_rules_wrapperTicket__3BmjV",titles:"_rules_titles__2byR7",label:"_rules_label__3_S5E",value:"_rules_value__2g2mZ",subtitles:"_rules_subtitles__2PJAr",status:"_rules_status__19e7z",date:"_rules_date__27-j3",actions:"_rules_actions__240vJ",message:"_rules_message__7JekD",signatureInfo:"_rules_signatureInfo__2WEDU",signatureTitle:"_rules_signatureTitle__wqjUV"}},587:function(e,t,a){e.exports={NAME_TICKET:"Ticket",TYPE_TICKET:"Section"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=173.33c0d585.chunk.js.map