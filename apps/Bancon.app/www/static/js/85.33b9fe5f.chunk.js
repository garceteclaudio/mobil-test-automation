(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[85,322],{239:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return _}));var a=n(11),c=n(532),r=n(497),i=n(38),o=n(504),s=n(100),l=n(6),u=n(8),b=n(87),f=n(153),p=n(270),d=n(80),j=n(51),O=n(33),E=n(486),m=n.n(E),T=n(10);function _(){var e=Object(u.b)(),t=Object(d.g)(),n=Object(u.c)(O.e.token),E=Object(u.c)(b.c.idTransaction),_=Object(u.c)(f.c.transaction),h=Object(u.c)(f.c.transactionsFetching),x=a.b.useCallback((function(){e(f.a.clean())}),[e]);a.b.useEffect((function(){if(n&&E)return e(f.b.readTransaction({accessToken:n,idTransaction:E})),function(){return x()}}),[e,n,E,x]);var v=Object(j.sb)(j.n),g=E.substring(l.Sb,l.Bb);return h?Object(T.jsx)(p.a,{}):Object(T.jsx)(r.a,{children:Object(T.jsx)(c.a,{isDownloadable:!0,isShareable:!0,buttonText:"spa.otpconfiguration.otp.ticket.unlink.button",className:m.a.info,handleButton:function(){e(b.a.setViewedTicket()),t(v)},idTransaction:E,responseDescription:"spa.otpconfiguration.otp.ticket.unlink.subtitle",responseTitle:"spa.otpconfiguration.otp.ticket.token.unlink",transactionStatus:null===_||void 0===_?void 0:_.idTransactionStatus,children:Object(T.jsxs)("div",{children:[Object(T.jsxs)("div",{className:m.a.row,children:[Object(T.jsx)(i.b,{className:m.a.label,uuid:"spa.modo.link.cards.ticket.transaction.code"}),Object(T.jsx)(i.b,{className:m.a.transactionCode,children:g})]}),Object(T.jsxs)("div",{className:m.a.row,children:[Object(T.jsx)(i.b,{className:m.a.label,uuid:"spa.modo.link.cards.ticket.status"}),Object(T.jsx)(i.b,{uuid:"spa.otpconfiguration.otp.ticket.finished"})]}),Object(T.jsxs)("div",{className:m.a.row,children:[Object(T.jsx)(i.b,{className:m.a.label,uuid:"spa.modo.link.cards.ticket.date"}),Object(T.jsx)(o.a,{date:new Date,formatParams:{format:s.a.MEDIUM}})]})]})})})}},486:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",info:"_rules_info__1bBc_",row:"_rules_row__1hn6z",label:"_rules_label__BVqrx",transactionCode:"_rules_transactionCode__1_P10"}},499:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var a=n(0),c=n(5);function r(e){var t=e.filename,n=e.path,a=e.flags;return new Promise((function(e,c){var r;function i(e){c(e)}(r=window.cordova.file[n],new Promise((function(e,t){window.resolveLocalFileSystemURL(r,(function(t){e(t)}),(function(e){t(e)}))}))).then((function(n){var c=n;c.getFile(t,a,(function(t){var n=new FileReader;t.createWriter((function(a){e({fileEntry:t,dirEntry:c,fileReader:n,fileWriter:a,fileWrite:function(e){return new Promise((function(t,n){a.onwriteend=function(){return t(a)},a.onerror=function(e){return n(e)},a.write(e)}))},fileRemove:function(){return new Promise((function(e,n){t.remove((function(){return e(!0)}),(function(e){return n(e)}))}))}})}),i)}),i)}))}))}var i=n(36),o=n(26),s=n(28);function l(){return u.apply(this,arguments)}function u(){return(u=Object(c.a)(Object(a.a)().mark((function e(){var t;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(o.c)();case 2:if(e.sent&&cordova.plugins){e.next=5;break}throw o.a.CORDOVA_UNAVAILABLE;case 5:if(t=cordova.plugins.fileOpener2){e.next=8;break}throw o.a.PLUGIN_UNAVAILABLE;case 8:return e.abrupt("return",t);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function b(e){return f.apply(this,arguments)}function f(){return f=Object(c.a)(Object(a.a)().mark((function e(t){var n,c,r,i,u;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.contentType,c=t.fileName,r=t.withDialog,e.next=3,Object(o.c)();case 3:if(e.sent){e.next=6;break}throw o.a.CORDOVA_UNAVAILABLE;case 6:return e.next=8,l();case 8:return i=e.sent,u=r?i.open:i.showOpenWithDialog,e.abrupt("return",new Promise((function(e,t){try{u(c,n,{success:function(){e({code:s.a.SUCCESS,value:!0})},error:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){t("boolean"===typeof e?new s.b(s.a.ERROR,i.open.name,s.c):new s.b(s.a.ERROR,i.open.name,e.message))}))})}catch(a){t(new s.b(s.a.ERROR_UNKNOWN,i.open.name,s.c))}})));case 11:case"end":return e.stop()}}),e)}))),f.apply(this,arguments)}function p(){var e=Object(i.i)(),t=e.isDesktop,n=e.isUnknown,o=e.platform;function s(e){var t=e.split(".").pop();return"png"===t||"jpg"===t||"gif"===t||"bmp"===t?"image/".concat(t):"pdf"===t?"application/".concat(t):"doc"===t||"docx"===t?"application/msword":"ppt"===t||"pptx"===t?"application/vnd.ms-powerpoint":"xls"===t||"xlsx"===t?"application/vnd.ms-excel":"xlsm"===t?"application/vnd.ms-excel.sheet.macroEnabled.12":"txt"===t?"text/plain":"zip"===t?"application/zip":void 0}return function(){var e=Object(c.a)(Object(a.a)().mark((function e(c,l){var u,f,p,d,j,O,E;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(u=o===i.b.CORDOVA_ANDROID,!(f=s(c))){e.next=19;break}if(!t&&!n){e.next=9;break}return(p=document.createElement("a")).href=window.URL.createObjectURL(l),p.download=c,p.click(),e.abrupt("return");case 9:return e.next=11,r({filename:c,path:u?"externalApplicationStorageDirectory":"dataDirectory",flags:{create:!0,exclusive:!1}});case 11:return d=e.sent,j=d.fileWrite,O=d.fileEntry,e.next=16,j(l);case 16:return E={contentType:f,fileName:O.nativeURL,withDialog:!0},e.next=19,b(E);case 19:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}()}},501:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=512,c=0;function r(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a,r=window.atob(e),i=[],o=c;o<r.length;o+=n){for(var s=r.slice(o,o+n),l=new Array(s.length),u=c;u<s.length;u++)l[u]=s.charCodeAt(u);i.push(new Uint8Array(l))}return new Blob(i,{type:t})}},508:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var a=n(6);function c(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"pdf";if("string"===typeof e&&e.trim()){var n=e.trim().toLowerCase().replace(/[^a-zA-Z0-9]/g,a.Nb);return"".concat(n,".").concat(t)}var c=new Date,r=c.getMonth()+a.fb,i=(r<a.Fb?a.Ub:a.D)+r,o=c.getDate(),s=(o<a.Fb?a.Ub:a.D)+o;return"".concat(c.getFullYear(),"_").concat(i,"_").concat(s,".").concat(t)}},532:function(e,t,n){"use strict";n.d(t,"a",(function(){return k}));var a=n(16),c=n(11),r=n(41),i=n(36),o=n(50),s=n(6),l=n(8),u=n(33),b=n(271),f=n(501),p=n(154),d=n(499),j=n(38),O=n(82),E=n(533),m=n.n(E),T=n(534),_=n.n(T),h=n(508),x=n(270),v=n(10),g=_.a.NAME_TICKET,N=_.a.TYPE_TICKET,w={hasModoLogo:!1,isDownloadable:!1,isShareable:!1,navigateButton:{},responseDescription:s.D};function k(e){var t=e,n=t.idTransaction,s=t.buttonText,E=t.children,T=t.className,_=t.transactionStatus,w=t.responseTitle,k=t.responseDescription,M=t.navigateButton,A=t.hasModoLogo,P=t.titleText,R=t.handleButton,D=t.isDownloadable,I=t.isShareable,C=Object(l.b)(),L=Object(d.a)(),S=Object(i.i)().isDesktop,y=c.b.useState(!1),F=Object(a.a)(y,2),U=F[0],B=F[1],H=c.b.useState(!1),Y=Object(a.a)(H,2),z=Y[0],V=Y[1],K=Object(l.c)(u.e.token),G=Object(l.c)(p.c.fetching),W=Object(l.c)(p.c.fetchedFile),J=Object(l.c)(p.c.filename),X=Object(l.c)(p.c.content),q=D||I,Z=Object(h.a)(J),Q="string"===typeof P;c.b.useEffect((function(){C(p.a.clean())}),[C]),c.b.useEffect((function(){(z||U)&&K&&(W||J||X?(J&&X&&(U&&(L(Z,Object(f.a)(X)),B(!1)),z&&(Object(b.a)({options:{message:J,subject:J},files:[{fileName:Z,base64File:X}]}),V(!1))),C(p.a.setFetchedFile(!1))):C(p.b.generatePdf({token:K,idTransaction:n})))}),[X,C,U,W,J,Z,L,n,z,K]);var $={FINISHED:Object(v.jsx)(o.Icon,{name:"success",size:"large",stroke:"success"}),PROCESSING:Object(v.jsx)(o.Icon,{name:"clock",size:"large",stroke:"info"}),PENDING:Object(v.jsx)(o.Icon,{name:"clock",size:"large",stroke:"info"}),FAILED:Object(v.jsx)(o.Icon,{name:"error",size:"large",stroke:"error"}),ANNULED:Object(v.jsx)(o.Icon,{name:"warning",size:"large",stroke:"warning"}),RETURNED:Object(v.jsx)(o.Icon,{name:"warning",size:"large",stroke:"warning"})};return G?Object(v.jsx)(x.a,{}):Object(v.jsxs)(r.a,{className:T,name:g,tag:"section",type:N,children:[Object(v.jsx)("header",{children:Q?Object(v.jsx)(j.b,{className:m.a.title,fallback:P,tag:"h1",uuid:P}):P}),Object(v.jsxs)("section",{children:[q&&Object(v.jsxs)("div",{className:m.a.actions,children:[I&&!S&&Object(v.jsx)(O.a,{icon:"share",kind:"icon",label:{uuid:"spa.a11y.buttons.share"},size:"small",variant:"text",onClick:function(){V(!0)}}),D&&Object(v.jsx)(O.a,{icon:"download",kind:"icon",label:{uuid:"spa.a11y.buttons.download"},size:"small",variant:"text",onClick:function(){B(!0)}})]}),Object(v.jsx)("div",{className:m.a.responseIcon,children:$[_]}),Object(v.jsx)(j.b,{className:m.a.responseTitle,fallback:w,tag:"h2",uuid:w}),k&&Object(v.jsx)(j.b,{className:m.a.responseDescription,tag:"h3",uuid:k}),(null===M||void 0===M?void 0:M.label)&&(null===M||void 0===M?void 0:M.handleClick)&&Object(v.jsx)(O.a,{className:m.a.navigateButton,kind:"plain",label:M.label,type:"button",onClick:M.handleClick}),E,A&&Object(v.jsx)("div",{className:m.a.responseIcon,children:Object(v.jsx)(o.Icon,{name:"modo"})})]}),Object(v.jsx)("footer",{children:Object(v.jsx)(O.a,{label:{uuid:s},onClick:R})})]})}k.defaultProps=w},533:function(e,t,n){e.exports={NAME_TICKET:"Ticket",TYPE_TICKET:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",title:"_rules_title__1SNPA",actions:"_rules_actions__30efJ",responseIcon:"_rules_responseIcon__1McyH",responseTitle:"_rules_responseTitle__3H3Id",responseDescription:"_rules_responseDescription__1NvkT",navigateButton:"_rules_navigateButton__Dlve9"}},534:function(e,t,n){e.exports={NAME_TICKET:"Ticket",TYPE_TICKET:"Section"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=85.33b9fe5f.chunk.js.map