(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[22],{506:function(e,t,n){"use strict";n.d(t,"a",(function(){return x}));var o=n(2),r=n(19),a=n(11),i=n(50),c=n(41),s=n(488),u=n(509),l=n.n(u),d=n(10),m=["id","name","children","methods","value","onChange"],b=l.a.NAME_RADIO_GROUP,T=l.a.TYPE_RADIO_GROUP,f={id:b},p=a.b.memo((function(e){var t=e.id,n=e.name,s=e.children,u=e.methods,l=e.value,f=e.onChange,p=Object(r.a)(e,m),x=u.formState,h=u.setValue,E=x.errors[n];return a.b.useEffect((function(){l&&h(n,l,{shouldValidate:!0})}),[l,n,h]),Object(d.jsx)(c.a,{name:b,type:T,children:Object(d.jsx)(i.RadioGroup,Object(o.a)(Object(o.a)(Object(o.a)({id:t,name:n,value:l,onChange:function(e){h(n,e.target.value),f&&f(e)}},E&&{error:String(E.message)}),p),{},{children:s}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function x(e){var t=s.a.useContext();return Object(d.jsx)(p,Object(o.a)({methods:t},e))}x.defaultProps=f},507:function(e,t,n){"use strict";n.d(t,"a",(function(){return x}));var o=n(2),r=n(19),a=n(11),i=n(50),c=n(41),s=n(488),u=n(510),l=n.n(u),d=(n(511),n(10)),m=["id","name","methods","onChange"],b=l.a.NAME_INPUT_RADIO,T=l.a.TYPE_INPUT_RADIO,f={id:b},p=a.b.memo((function(e){var t=e.id,n=e.name,a=e.methods,s=e.onChange,u=Object(r.a)(e,m),l=a.register,f=a.formState,p=a.clearErrors,x=f.errors,h="".concat(n),E=x[n];return Object(d.jsx)(c.a,{name:b,type:T,children:Object(d.jsx)(i.Radio,Object(o.a)(Object(o.a)(Object(o.a)({id:t},E&&{error:String(E.message)}),l(h)),{},{name:n,onChange:function(e){s&&s(e),p([h])}},u))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function x(e){var t=s.a.useContext();return Object(d.jsx)(p,Object(o.a)({methods:t},e))}x.defaultProps=f},509:function(e,t,n){e.exports={NAME_RADIO_GROUP:"RadioGroup",TYPE_RADIO_GROUP:"Element"}},510:function(e,t,n){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element"}},511:function(e,t,n){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider"}},522:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"c",(function(){return r})),n.d(t,"e",(function(){return a})),n.d(t,"d",(function(){return i})),n.d(t,"f",(function(){return c})),n.d(t,"b",(function(){return s}));var o="AR1B",r=15,a=function(e){return e===o},i=function(e){return"AR1C"===e},c=function(e){return"0005"===e},s={"0005":r,AR1C:11,AR1B:11}},524:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return l}));var o=n(2),r=n(16),a=n(11),i=n(531),c=n.n(i),s=n(10),u=c.a.NAME_STEPPER;c.a.TYPE_STEPPER;function l(e){var t=e,n=t.steps,i=t.handleFallback,c=t.handleChangeStep,u=Object.entries(n).filter((function(e){return Boolean(e[1].condition)})).map((function(e){var t=Object(r.a)(e,2),n=t[0],a=t[1],i=a.component;return Object(s.jsx)(i,Object(o.a)({},a.props||{}),n)}),{}).shift(),l=a.b.useState(null===u||void 0===u?void 0:u.key),d=Object(r.a)(l,2),m=d[0],b=d[1];return a.b.useEffect((function(){!u&&i&&i()}),[i,u]),a.b.useEffect((function(){m!==(null===u||void 0===u?void 0:u.key)&&c&&c(),b(null===u||void 0===u?void 0:u.key)}),[m,c,null===u||void 0===u?void 0:u.key]),u||null}l.displayName=u,l.defaultProps={handleChangeStep:function(){},handleFallback:function(){}}},531:function(e,t,n){e.exports={NAME_STEPPER:"Stepper",TYPE_STEPPER:"Element"}},568:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var o=n(2),r=n(19),a=(n(11),n(41)),i=n(50),c=n(6),s=n(604),u=n.n(s),l=n(605),d=n.n(l),m=n(488),b=n(38),T=n(10),f=["buttonLabel","modalTitle","name","options","selectedAvatar","uuidError","uuidLabel"],p=d.a.NAME_SECURITY_SEAL,x=d.a.TYPE_SECURITY_SEAL;function h(e){var t=e,n=t.buttonLabel,s=t.modalTitle,l=t.name,d=t.options,h=t.selectedAvatar,E=t.uuidError,O=t.uuidLabel,v=Object(r.a)(t,f),w=m.a.useContext(),R=Object(b.c)().textGet,A=w.register,g=w.formState,C=w.setValue,S=g.errors,P="".concat(l),j=Object.values(d),I=S[l]&&!h,M=R({uuid:E});return Object(T.jsxs)(a.a,{name:p,type:x,children:[Object(T.jsx)(i.SecurityImage,Object(o.a)(Object(o.a)(Object(o.a)({},v),{},{buttonLabel:n,modalTitle:s,options:j,onChooseImage:function(e){var t=d.findIndex((function(t){return t.src===e})),n=t!==c.ab?t+c.fb:t;C(P,n||void 0)},onClose:function(){var e=d.findIndex((function(e){return e.src===h})),t=e!==c.ab?e+c.fb:e;C(P,t||void 0)}},A(P)),{},{children:Object(T.jsx)(i.Badge,{color:"primary",name:"camera",placement:"br",size:"small",children:Object(T.jsx)(i.Avatar,{alt:R({uuid:"login.step2.imageAlt"}),color:"dark-green",name:h?void 0:"user",size:"large",src:h})})})),!I&&Object(T.jsx)(b.b,{uuid:O}),I&&Object(T.jsx)(i.Legend,{className:u.a.errorSecurityImage,variant:"error",children:M})]})}h.defaultProps={}},604:function(e,t,n){e.exports={NAME_SECURITY_SEAL:"SecuritySeal",TYPE_SECURITY_SEAL:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",errorSecurityImage:"_rules_errorSecurityImage__3LvFw"}},605:function(e,t,n){e.exports={NAME_SECURITY_SEAL:"SecuritySeal",TYPE_SECURITY_SEAL:"Element"}},606:function(e,t,n){"use strict";n.d(t,"c",(function(){return m})),n.d(t,"b",(function(){return T})),n.d(t,"a",(function(){return p}));var o=n(0),r=n(2),a=n(5),i=n(26),c=n(28),s={maxInactivitySeconds:60,maxResetsBeforeBlock:20,smileText:"Sonria",closeEyesText:"Cierre sus ojos",winkEyeText:"Cierre un ojo",moveFaceToLeftText:"Mire su hombro Izquierdo",moveFaceToRightText:"Mire su hombro Derecho",minimumAngle:20,maxAngleJumpAllowed:30,showTutorial:1,tutorialTitle:"Siga las instrucciones",tutorialDescription:"Preste atencion para realizar una validacion correcta",tutorialNextButtonText:"Siguiente",closeText:"Cerrar",buttonCloseEnabled:!1,buttonTutorialCloseEnabled:!1,faceCenterText:"Ubic\xe1 tu rostro",hideCircleProgressBar:!1,hideGestureInstructionAnimation:!1,backgroundColor:"",textColor:"",returnAnalysisSelfies:!0,textStepsMoveToBottom:!1,progressBarColor:"",progressCirclesColor:"",validateFrames:!0,clearBackgroundRecommendation:"",lightEnvironmentRecommendation:"",clearFaceRecommendation:"",centerMobileRecommendation:"",resultsTitle:"",resultsSubtitle:"",resultsContinueButtonText:"",watchRecommendationsAgain:"",smileHelpText:"",winkHelpText:"",closeEyesHelpText:"",moveFaceHelpText:"",placeFaceInSilhouette:"",keepMobileFirm:"",avoidMobileMoves:"",clearBackgroundProcessRecommendation:"",cameraNotAvailableTitle:"",cameraNotAvailableDescription:"",understoodText:"",processingText:"",showRoundedTopBar:!1,topBarTitle:"",hideInstructionsText:!1,hideSoundButton:!1,showCloseButtonBorders:!1,showStageIndicator:!1,stageIndicatorColor:"",beginWithoutPreview:!1,centerInstructionGif:!1,showLargeSoundIndicator:!1,soundIndicatorInstructions:"",disableWinkGesture:!1,disableEyesClosedGesture:!1,disableSmileGesture:!1,showResultInFailure:!0,showFullScreenLoader:!1,validatingText:"",middleInstructionGif:!1,welcomeText:"",showFinalMessage:!1,finalSuccessMessage:"",finalFailMessage:"",resultsCompactVersion:!1,showCenterProgressCircle:!1,centerProgressCircleColor:"",disableWelcomeAudio:!1,disableInstructionsAudios:!1,showLeftInstructionGif:!1,showHorizontalProgress:!1,showBottomTip:!1,bottomTipText:"",showBottomCloseText:!1,bottomCloseTextColor:"",bottomCloseText:"",enableScreenRecording:!1,videoQualityLevel:3,permissionDeniedTitle:"",cameraAccessText:"",enableText:"",exitText:"",enableStartupDarkEffect:!1},u={title:"Frente del Documento",instructions:"Ubique el documento dentro de la pantalla. Sostenga firmemente y tomaremos la foto por usted.",scanCountry:1,showTutorial:1,tutorialTitle:"",tutorialDescription:"",faceDetectionMaximumWait:1e4,tutorialNextButtonText:"Continuar",showPreview:1,previewConfirmationText:"",buttonCloseTutorialEnabled:0,focusOnTouch:!1,noDocumentFound:"",faceNotFound:"",previewConfirmationTitle:"",yesPreviewText:"",noPreviewText:"",noDocumentFoundTitle:"",faceNotFoundTitle:"",okText:"",enableAudio:!1,showCustomBackground:!1,enableScreenRecording:!1,videoQualityLevel:3,permissionDeniedTitle:"",cameraAccessText:"",enableText:"",exitText:"",enableBlur:!1,blurThreshold:0,blurNotTakePhoto:!1,imageBlurredTitle:"",imageBlurredMessage:"",returnExtraImages:!1,extraImagesAmount:0},l={title:"Dorso del Documento",instructions:"Ubique el documento dentro de la pantalla. Sostenga firmemente y tomaremos la foto por usted.",scanCountry:1,barcodeDetectionMaximumWait:1e4,showTutorial:1,tutorialTitle:"",tutorialDescription:"",tutorialNextButtonText:"Continuar",showPreview:1,previewConfirmationText:"",buttonCloseTutorialEnabled:0,focusOnTouch:!1,documentNotDetected:"",codeNotRead:"",yesText:"",noText:"",documentPictureNotDetected:"",previewConfirmationTitle:"",yesPreviewText:"",noPreviewText:"",enableAudio:!1,showCustomBackground:!1,enableScreenRecording:!1,videoQualityLevel:3,permissionDeniedTitle:"",cameraAccessText:"",enableText:"",exitText:"",enableBlur:!1,blurThreshold:0,blurNotTakePhoto:!1,imageBlurredTitle:"",imageBlurredMessage:"",returnExtraImages:!1,extraImagesAmount:0},d="onboarding";function m(e){return b.apply(this,arguments)}function b(){return(b=Object(a.a)(Object(o.a)().mark((function e(t){var n;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(i.c)();case 2:if(e.sent){e.next=5;break}throw i.a.CORDOVA_UNAVAILABLE;case 5:return n=Object(r.a)(Object(r.a)({},s),t),e.abrupt("return",new Promise((function(e,t){try{window.serviceOnBoardingSDK.captureSelfie(n.gesturesAmount,n.disableFaceMoveGesture,n.maxInactivitySeconds,n.maxResetsBeforeBlock,n.smileText,n.closeEyesText,n.winkEyeText,n.moveFaceToLeftText,n.moveFaceToRightText,n.smileMinSeconds,n.smileMaxSeconds,n.winkMinSeconds,n.winkMaxSeconds,n.eyesClosedMinSeconds,n.eyesClosedMaxSeconds,n.minimumAngle,n.maxAngleJumpAllowed,n.showTutorial,n.tutorialTitle,n.tutorialDescription,n.tutorialNextButtonText,n.color,n.closeText,n.buttonCloseEnabled,n.buttonTutorialCloseEnabled,n.faceCenterText,n.smileMinimumScore,n.winkMinimumScore,n.eyesClosedMinimumScore,n.minimumValidGestures,n.hideCircleProgressBar,n.hideGestureInstructionAnimation,n.backgroundColor,n.textColor,n.returnAnalysisSelfies,n.textStepsMoveToBottom,n.progressBarColor,n.progressCirclesColor,n.validateFrames,n.clearBackgroundRecommendation,n.lightEnvironmentRecommendation,n.clearFaceRecommendation,n.centerMobileRecommendation,n.resultsTitle,n.resultsSubtitle,n.resultsContinueButtonText,n.watchRecommendationsAgain,n.smileHelpText,n.winkHelpText,n.closeEyesHelpText,n.moveFaceHelpText,n.placeFaceInSilhouette,n.keepMobileFirm,n.avoidMobileMoves,n.clearBackgroundProcessRecommendation,n.cameraNotAvailableTitle,n.cameraNotAvailableDescription,n.understoodText,n.processingText,n.showRoundedTopBar,n.topBarTitle,n.hideInstructionsText,n.hideSoundButton,n.showCloseButtonBorders,n.showStageIndicator,n.stageIndicatorColor,n.beginWithoutPreview,n.centerInstructionGif,n.showLargeSoundIndicator,n.soundIndicatorInstructions,n.disableWinkGesture,n.disableEyesClosedGesture,n.disableSmileGesture,n.showResultInFailure,n.showFullScreenLoader,n.validatingText,n.middleInstructionGif,n.welcomeText,n.showFinalMessage,n.finalSuccessMessage,n.finalFailMessage,n.resultsCompactVersion,n.showCenterProgressCircle,n.centerProgressCircleColor,n.disableWelcomeAudio,n.disableInstructionsAudios,n.showLeftInstructionGif,n.showHorizontalProgress,n.showBottomTip,n.bottomTipText,n.showBottomCloseText,n.bottomCloseTextColor,n.bottomCloseText,n.enableScreenRecording,n.videoQualityLevel,n.permissionDeniedTitle,n.cameraAccessText,n.enableText,n.exitText,n.enableStartupDarkEffect,(function(t){if(!t||"string"===typeof t)throw t;e({code:c.a.SUCCESS,value:t})}),(function(e){t(new c.b(c.a.ERROR,d,e))}))}catch(o){t(new c.b(c.a.ERROR_UNKNOWN,d,c.c))}})));case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function T(e){return f.apply(this,arguments)}function f(){return(f=Object(a.a)(Object(o.a)().mark((function e(t){var n;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(i.c)();case 2:if(e.sent&&window.serviceOnBoardingSDK){e.next=5;break}throw i.a.CORDOVA_UNAVAILABLE;case 5:return n=Object(r.a)(Object(r.a)({},u),t),e.abrupt("return",new Promise((function(e,t){try{window.serviceOnBoardingSDK.captureFront(n.title,n.instructions,n.scanCountry,n.showTutorial,n.tutorialTitle,n.tutorialDescription,n.faceDetectionMaximumWait,n.tutorialNextButtonText,n.showPreview,n.previewConfirmationText,n.color,n.buttonCloseTutorialEnabled,n.focusOnTouch,n.noDocumentFound,n.faceNotFound,n.previewConfirmationTitle,n.yesPreviewText,n.noPreviewText,n.noDocumentFoundTitle,n.faceNotFoundTitle,n.okText,n.enableAudio,n.showCustomBackground,n.enableScreenRecording,n.videoQualityLevel,n.permissionDeniedTitle,n.cameraAccessText,n.enableText,n.exitText,n.enableBlur,n.blurThreshold,n.blurNotTakePhoto,n.imageBlurredTitle,n.imageBlurredMessage,n.returnExtraImages,n.extraImagesAmount,(function(t){if(!t||"string"===typeof t)throw t;e({code:c.a.SUCCESS,value:t})}),(function(e){t(new c.b(c.a.ERROR,d,e))}))}catch(o){t(new c.b(c.a.ERROR_UNKNOWN,d,c.c))}})));case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function p(e){return x.apply(this,arguments)}function x(){return(x=Object(a.a)(Object(o.a)().mark((function e(t){var n;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(i.c)();case 2:if(e.sent&&window.serviceOnBoardingSDK){e.next=5;break}throw i.a.CORDOVA_UNAVAILABLE;case 5:return n=Object(r.a)(Object(r.a)({},l),t),e.abrupt("return",new Promise((function(e,t){try{window.serviceOnBoardingSDK.captureBack(n.title,n.instructions,n.scanCountry,n.barcodeDetectionMaximumWait,n.showTutorial,n.tutorialTitle,n.tutorialDescription,n.tutorialNextButtonText,n.showPreview,n.previewConfirmationText,n.color,n.buttonCloseTutorialEnabled,n.focusOnTouch,n.documentNotDetected,n.codeNotRead,n.yesText,n.noText,n.documentPictureNotDetected,n.previewConfirmationTitle,n.yesPreviewText,n.noPreviewText,n.enableAudio,n.showCustomBackground,n.enableScreenRecording,n.videoQualityLevel,n.permissionDeniedTitle,n.cameraAccessText,n.enableText,n.exitText,n.enableBlur,n.blurThreshold,n.blurNotTakePhoto,n.imageBlurredTitle,n.imageBlurredMessage,n.returnExtraImages,n.extraImagesAmount,(function(t){if(!t||"string"===typeof t)throw t;e({code:c.a.SUCCESS,value:t})}),(function(e){t(new c.b(c.a.ERROR,d,e))}))}catch(o){t(new c.b(c.a.ERROR_UNKNOWN,d,c.c))}})));case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}},635:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var o=n(0),r=n(5),a=n(26),i=n(28);function c(){return s.apply(this,arguments)}function s(){return(s=Object(r.a)(Object(o.a)().mark((function e(){var t;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(a.c)();case 2:if(e.sent&&cordova.plugins){e.next=5;break}throw a.a.CORDOVA_UNAVAILABLE;case 5:if(t=cordova.plugins.settings){e.next=8;break}throw a.a.PLUGIN_UNAVAILABLE;case 8:return e.abrupt("return",t);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function u(e){return l.apply(this,arguments)}function l(){return(l=Object(r.a)(Object(o.a)().mark((function e(t){var n;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(a.c)();case 2:if(e.sent){e.next=5;break}throw a.a.CORDOVA_UNAVAILABLE;case 5:return e.next=7,c();case 7:return n=e.sent,e.abrupt("return",new Promise((function(e,o){try{n.open(t,(function(t){e({code:i.a.SUCCESS,value:t})}),(function(e){o(new i.b(i.a.ERROR,n.open.name,e))}))}catch(r){o(new i.b(i.a.ERROR_UNKNOWN,n.open.name,i.c))}})));case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}},811:function(e,t,n){"use strict";n.d(t,"b",(function(){return u})),n.d(t,"a",(function(){return d}));var o=n(0),r=n(5),a=n(26),i=n(28);function c(){return s.apply(this,arguments)}function s(){return(s=Object(r.a)(Object(o.a)().mark((function e(){var t;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(a.c)();case 2:if(e.sent&&cordova.plugins){e.next=5;break}throw a.a.CORDOVA_UNAVAILABLE;case 5:if(t=cordova.plugins.SMSRetriever){e.next=8;break}throw a.a.PLUGIN_UNAVAILABLE;case 8:return e.abrupt("return",t);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function u(){return l.apply(this,arguments)}function l(){return(l=Object(r.a)(Object(o.a)().mark((function e(){var t;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(a.c)();case 2:if(e.sent){e.next=5;break}throw a.a.CORDOVA_UNAVAILABLE;case 5:return e.next=7,c();case 7:return t=e.sent,e.abrupt("return",new Promise((function(e,n){try{t.startWatch((function(t){e({code:i.a.SUCCESS,value:t})}),(function(e){n(new i.b(i.a.ERROR,t.startWatch.name,e||i.c))}))}catch(o){n(new i.b(i.a.ERROR,t.startWatch.name,i.c))}})));case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function d(){return m.apply(this,arguments)}function m(){return(m=Object(r.a)(Object(o.a)().mark((function e(){var t;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(a.c)();case 2:if(e.sent){e.next=5;break}throw a.a.CORDOVA_UNAVAILABLE;case 5:return e.next=7,c();case 7:return t=e.sent,e.abrupt("return",new Promise((function(e,n){try{t.getHashString((function(t){e({code:i.a.SUCCESS,value:t})}),(function(e){n(new i.b(i.a.ERROR,t.startWatch.name,e||i.c))}))}catch(o){n(new i.b(i.a.ERROR,t.startWatch.name,i.c))}})));case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=22.be972669.chunk.js.map