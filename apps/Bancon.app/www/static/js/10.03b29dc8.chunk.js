(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[10],{611:function(e,t,n){e.exports={NAME_BASEINTERNAL_CONTAINER:"BaseInternalContainer",TYPE_BASEINTERNAL_CONTAINER:"Container",NAME_BASEINTERNAL_CONTAINERMENU:"BaseInternalContainerMenu",NAME_BASEINTERNAL_CONTAINERMENU_LIST:"BaseInternalContainerMenuList",NAME_BASEINTERNAL_CONTAINERMENU_NAV:"BaseInternalContainerMenuNav",NAME_BASEINTERNAL_CONTAINERMENU_GRID:"BaseInternalContainerMenuGrid",TYPE_BASEINTERNAL_CONTAINERMENU:"Section",TYPE_BASEINTERNAL_CONTAINERMENU_LIST:"Section",TYPE_BASEINTERNAL_CONTAINERMENU_NAV:"Section",TYPE_BASEINTERNAL_CONTAINERMENU_GRID:"Section"}},612:function(e,t,n){e.exports={NAME_BASEINTERNAL_CONTAINER:"BaseInternalContainer",TYPE_BASEINTERNAL_CONTAINER:"Container",NAME_BASEINTERNAL_CONTAINERMENU:"BaseInternalContainerMenu",NAME_BASEINTERNAL_CONTAINERMENU_LIST:"BaseInternalContainerMenuList",NAME_BASEINTERNAL_CONTAINERMENU_NAV:"BaseInternalContainerMenuNav",NAME_BASEINTERNAL_CONTAINERMENU_GRID:"BaseInternalContainerMenuGrid",TYPE_BASEINTERNAL_CONTAINERMENU:"Section",TYPE_BASEINTERNAL_CONTAINERMENU_LIST:"Section",TYPE_BASEINTERNAL_CONTAINERMENU_NAV:"Section",TYPE_BASEINTERNAL_CONTAINERMENU_GRID:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",logo150:"_rules_logo150__a7BgO",chatModal:"_rules_chatModal__2Grjr",version:"_rules_version__3ysF6",active:"_rules_active__1vjVP",retailCustomerSupport:"_rules_retailCustomerSupport__2i-sb",corporateCustomerSupport:"_rules_corporateCustomerSupport__16w0O"}},644:function(e,t,n){"use strict";n.d(t,"a",(function(){return A})),n.d(t,"c",(function(){return j})),n.d(t,"b",(function(){return d}));n(11);var a=n(41),i=n(50),o=n(513),c=n(38),r=n(611),s=n.n(r),N=n(6),E=n(612),l=n.n(E),u=n(10),A=s.a.NAME_BASEINTERNAL_CONTAINERMENU_NAV,j=s.a.TYPE_BASEINTERNAL_CONTAINERMENU_NAV;function d(e){var t=e,n=t.items,r=t.className,s=t.onClickMenuItem;return Object(u.jsx)(a.a,{className:r,name:A,tag:"section",type:j,children:Object(u.jsx)("ul",{role:"menu",children:n.map((function(e){var t=e.href,n=e.icon,a=e.text,r=e.active;return Object(u.jsx)("li",{className:r?l.a.active:N.D,role:"none",children:Object(u.jsxs)(o.a,{role:"menuitem",to:t,onClick:s,children:[Object(u.jsx)(i.Icon,{name:n,size:"small",stroke:r?"primary":"gray-600"}),Object(u.jsx)(c.b,{tag:"span",uuid:a})]})},t)}))})})}d.defaultProps={}},683:function(e,t,n){"use strict";n.d(t,"a",(function(){return B}));var a=n(2),i=n(16),o=n(19),c=n(11),r=n(22),s=n(41),N=n(50),E=n(8),l=n(33),u=n(6),A=n(187),j=n(62),d=n(39),O=n(158),_=n(36),b=n(583),T=n(488),m=n(684),I=n(38),M=n(82),p=n(689),R=n.n(p),h=n(690),f=n.n(h),x=n(10),C=["environmentName","items","header-onBack","notificationsPage","hasNotifications","hasHomeIcon","homePage"],S=R.a.NAME_BASEINTERNAL_CONTAINERHEADER,v=R.a.TYPE_BASEINTERNAL_CONTAINERHEADER;function B(e){var t=e,n=t.environmentName,p=t.items,R=t["header-onBack"],h=t.notificationsPage,B=t.hasNotifications,P=t.hasHomeIcon,L=t.homePage,g=Object(o.a)(t,C),U=c.b.useState(!1),k=Object(i.a)(U,2),Y=k[0],D=k[1],y=Object(E.c)(l.e.token),w=Object(E.b)(),G=Object(r.j)(),H=Object(I.c)().textGet,F=Object(E.c)(l.e.environment),V=Object(E.c)(l.e.environmentsForSelect),z=Object(E.c)(l.e.environmentColor),K=H({uuid:"spa.generic.field.error.required"}),X=H({uuid:"spa.searchfield.label"});Object(N.useKeyPress)(u.Q.ESCAPE,(function(){if(!Y)return;D(!1)}));var q=d.e.object({environment:Object(A.d)(d.e.string.required(),K)}),J=V.length>u.fb,W=Object(s.c)(f.a.actions,R&&f.a.actionsWithBackHandler),Q=Object(s.c)(f.a.greeter,P&&f.a.maxWidth);c.b.useEffect((function(){y&&Y&&w(O.b.getNotifications({accessToken:y}))}),[w,y,Y]),c.b.useEffect((function(){}),[P]);var Z,$=Object(_.i)().isDesktop,ee=Object(x.jsx)(M.a,Object(a.a)(Object(a.a)({white:!0},P&&{className:f.a.dropdownButton}),{},{icon:"down",kind:"icon",label:{uuid:"spa.a11y.buttons.expand"},size:"medium",title:{uuid:"spa.a11y.buttons.title.expandEnvironmentSelector"}}));return Object(x.jsxs)(s.a,Object(a.a)(Object(a.a)({},g),{},{name:S,tag:"header",type:v,children:[R&&Object(x.jsxs)("div",{className:f.a.navigationButtons,children:[Object(x.jsx)(M.a,{white:!0,icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},onClick:R}),P&&Object(x.jsx)(M.a,{white:!0,icon:"home",kind:"icon",label:{uuid:"spa.a11y.buttons.home"},onClick:function(){G(L)}})]}),Object(x.jsxs)("div",{className:W,children:[J?Object(x.jsx)(T.a,{schema:q,onSubmit:ne,children:Object(x.jsx)(b.a,{defaultOption:(Z=F,Z?V.find((function(e){return e.value===Z.toString()?e:null})):void 0),dropdownButton:ee,environments:V,name:"environment",searchFieldLabel:X,onSelectOption:function(e){ne({environment:e.value.toString()})}})}):Object(x.jsxs)("div",{className:Q,children:[Object(x.jsx)(N.Avatar,{alt:n||u.D,color:z,name:"user",size:"small"}),Object(x.jsx)(I.b,{children:n})]}),B&&Object(x.jsxs)("div",{className:f.a.notifications,children:[p.map((function(e){var t=e.id,n=e.badge,a=e.icon;return Object(x.jsx)(N.Badge,{className:n?u.D:f.a.emptyBadge,content:String(n),max:u.eb.MAX_BADGE,size:"small",children:Object(x.jsx)(M.a,{white:!0,icon:a,kind:"icon",label:{uuid:"spa.a11y.notifications.open.panel",replace:"".concat(n)},size:"medium",variant:"text",onClick:te})},t)})),Object(x.jsx)(m.a,{handleNotificationsPanel:te,hasNotificationsPanel:Y,notificationsPage:h})]})]})]}));function te(){$?D(!Y):(w(O.a.setNotificationsActive(j.f.all)),G(h))}function ne(e){w(l.a.setEnvironment(parseInt(e.environment,u.Fb)))}}B.defaultProps={hasHomeIcon:!1,hasNotifications:!0}},845:function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));var a=n(2),i=n(19),o=n(11),c=n(50),r=n(38),s=n(136),N=n(513),E=n(644),l=n(41),u=n(611),A=n.n(u),j=n(6),d=n(612),O=n.n(d),_=n(10),b=A.a.NAME_BASEINTERNAL_CONTAINERMENU_LIST,T=A.a.TYPE_BASEINTERNAL_CONTAINERMENU_LIST;function m(e){var t=e,n=t.title,a=t.items,i=t.onClickMenuItem;return Object(_.jsxs)(l.a,{name:b,tag:"section",type:T,children:[Object(_.jsx)(r.b,{tag:"h3",uuid:n}),Object(_.jsx)("ul",{role:"menu",children:a.map((function(e){var t=e.href,n=e.text,a=e.active;return Object(_.jsx)("li",{className:a?O.a.active:j.D,role:"none",children:Object(_.jsx)(N.a,{role:"menuitem","text-tag":"span","text-uuid":n,to:t,type:"text",onClick:i})},t)}))})]})}m.defaultProps={};var I=n(33),M=n(8),p=n(82),R=A.a.NAME_BASEINTERNAL_CONTAINERMENU_GRID,h=A.a.TYPE_BASEINTERNAL_CONTAINERMENU_GRID;function f(e){var t=e,n=t.title,a=t.items,i=Object(M.b)(),o=Object(M.c)(I.e.isCorporateEnvironment)?O.a.corporateCustomerSupport:O.a.retailCustomerSupport;return Object(_.jsxs)(l.a,{name:R,tag:"section",type:h,children:[Object(_.jsx)(r.b,{tag:"h3",uuid:n}),Object(_.jsx)("ul",{className:o,role:"menu",children:a.map((function(e){var t=e.modal,n=e.text,a=e.icon,i=e.href;return t?Object(_.jsx)("li",{className:O.a.chatModal,role:"none",children:Object(_.jsxs)(p.a,{kind:"plain",label:{uuid:n},role:"menuitem",onClick:s,children:[Object(_.jsx)("div",{children:Object(_.jsx)(c.Icon,{name:a,size:"small"})}),Object(_.jsx)(r.b,{color:"gray-dark",tag:"span",uuid:n})]})},i):Object(_.jsx)("li",{role:"none",children:Object(_.jsxs)(N.a,{role:"menuitem",to:i,children:[Object(_.jsx)("div",{children:Object(_.jsx)(c.Icon,{name:a,size:"small"})}),Object(_.jsx)(r.b,{tag:"span",uuid:n})]})},i)}))})]});function s(){i(I.a.showChatModal(!0))}}f.defaultProps={};var x=["isMenuActive","isCorporate","children","direction","position","productDropOutLink"],C=A.a.NAME_BASEINTERNAL_CONTAINERMENU,S=A.a.TYPE_BASEINTERNAL_CONTAINERMENU,v=o.b.forwardRef((function(e,t){var n=e,l=n.isMenuActive,u=n.isCorporate,A=n.children,j=n.direction,d=void 0===j?"left":j,b=n.position,T=n.productDropOutLink,I=Object(i.a)(n,x);return Object(_.jsxs)(c.Menu,Object(a.a)(Object(a.a)({},I),{},{ref:t,"data-name":C,"data-type":S,direction:d,isEnabled:l,position:b,children:[Object(_.jsxs)("header",{children:[Object(_.jsx)(s.a,{uuid:"logoMenu"}),Object(_.jsx)(s.a,{alt:"logo",className:O.a.logo150,uuid:"logo150Menu"})]}),A({Nav:E.b,List:m,Grid:f}),Object(_.jsxs)("footer",{children:[Object(_.jsx)("section",{children:!u&&Object(_.jsxs)(o.b.Fragment,{children:[Object(_.jsx)(r.b,{tag:"span",uuid:"spa.menu.lowProduct.label"}),Object(_.jsx)(N.a,{to:T,children:Object(_.jsx)(r.b,{tag:"span",uuid:"spa.menu.lowProduct.button"})})]})}),Object(_.jsx)(r.b,{className:O.a.version,tag:"span",children:"2.3.6"})]})]}))}));v.defaultProps={}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=10.03b29dc8.chunk.js.map