(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[37,283],{375:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return M}));var a=n(9),r=n(16),o=n(2),i=n(30),c=n(11),l=n(6),u=n(50),s=n(99),_=n(8),p=n(151),d=n(504),m=n(100),b=n(582),f=n(38),O=n(33),E=n(499),A=n(501),T=n(74),N=n(519),P=n(437),j=n.n(P),w=n(10),D=[{id:"quota",label:"spa.loan.detail.tableHead.quota",numeric:!1},{id:"state",label:"spa.loan.detail.tableHead.state",numeric:!1,align:"center"},{id:"amount",label:"spa.loan.detail.tableHead.amount",numeric:!1,align:"center",width:l.Gb},{id:"expiration",label:"spa.loan.detail.tableHead.expiration",numeric:!1,align:"center"}],R=[{id:"actions",label:l.D,numeric:!1,align:"right",width:l.J}],v={PAID:"Pagada",PENDING:"Pendiente",UNPAID:"Impaga"};function M(){var e,t,n=Object(f.c)().textGet,P=new Date,M=Object(_.b)(),h=Object(E.a)(),x=Object(s.a)().getValueConfig,g=Object(O.h)("legacy.menu.products.loanbt.downloadReceipt"),I=Object(_.c)(p.c.loanInstallments),C=Object(T.a)(x("spa.loanbt.detail.concepts.mapping")),L=JSON.parse(C),y=[].concat(D,Object(i.a)((e=L,Object.entries(e).map((function(e){var t=Object(r.a)(e,2);return{id:t[0],label:t[1],numeric:!1,align:"center"}})))),R).map((function(e){return Object(o.a)(Object(o.a)({},e),{},{label:e.label===l.D?l.D:n({uuid:e.label})})})),S=(null!==(t=I)&&void 0!==t?t:[]).map((function(e){var t,n,r=e.loanInstallmentNumber,i=e.loanInstallmentState,c=e.loanInstallmentAmount,l=e.loanInstallmentDueDate,u=e.conceptList;return Object(o.a)(Object(o.a)({id:r,quota:r,expiration:Object(w.jsx)(d.a,{date:l||P,formatParams:{format:m.a.SHORT}}),amount:B(c)},function(e,t){return Object.keys(t).reduce((function(t,n){var r;return Object(o.a)(Object(a.a)({},n,B(null===(r=e.find((function(e){return e.loanInstallmentConceptName===n})))||void 0===r?void 0:r.loanInstallmentConceptAmount)),t)}),{})}(u,L)),{},{state:W(i),actions:i===v.PAID&&g?Object(w.jsx)(b.a,{options:(t=r,n=l,[{label:"spa.loans.options.downolad.voucher",onOptionClick:function(){return H&&U&&M(p.b.downloadInstallment({token:H,idLoan:U,installmentNumber:t,installmentDueDate:n}))}}])}):null})})),U=Object(_.c)(p.c.loanId),H=Object(_.c)(O.e.token),k=Object(_.c)(p.c.filename),F=Object(_.c)(p.c.content);return c.b.useEffect((function(){H&&k&&F&&(h(k,Object(A.a)(F)),M(p.a.cleanReceipt()))}),[F,M,k,h,H]),Object(w.jsx)(u.BasicTable,{className:j.a.table,classNameContainer:j.a.tableContainer,headData:y,id:"loanDetail",rowsData:S});function B(e){return Object(N.a)(e||l.Sb,{minimumFractionDigits:l.Jb})}function W(e){var t="info";switch(e){case v.PAID:t="success";break;case v.PENDING:t="warning"}return Object(w.jsx)(u.Tag,{className:j.a.tag,variant:t,children:e})}}},437:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",internalContainer:"_rules_internalContainer__2_bHW",title:"_rules_title__3lbJU",subtitle:"_rules_subtitle__3oo1s",cardsLoan:"_rules_cardsLoan__1eE2M",table:"_rules_table__1qIEY",tableContainer:"_rules_tableContainer__3XHPJ",tenureHeader:"_rules_tenureHeader__rIwBt",loanDetail:"_rules_loanDetail__3x6Nw",cardsDetail:"_rules_cardsDetail__3z-n2",amount:"_rules_amount__3zCU5",sectionAccordion:"_rules_sectionAccordion__1e8x1",contentAccordion:"_rules_contentAccordion__3xTRR",cardLoanAmount:"_rules_cardLoanAmount__2xM2V",tab:"_rules_tab__Af0jH",contentInfo:"_rules_contentInfo__Jppi2",value:"_rules_value__khzS9",accordionSummary:"_rules_accordionSummary__39l_v",titleQuotas:"_rules_titleQuotas__1Aw1N",tagQuotas:"_rules_tagQuotas__2K_5V",accordionDetails:"_rules_accordionDetails__16TUv",contentQuotas:"_rules_contentQuotas__2Yur7",tabsHeader:"_rules_tabsHeader__2oxaX",tag:"_rules_tag__3zWev",pictureName:"_rules_pictureName__2t_6i",modalInstallments:"_rules_modalInstallments__2dcN-",modalBody:"_rules_modalBody__3C3m2",modalFooter:"_rules_modalFooter__2_W5d"}},499:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var a=n(0),r=n(5);function o(e){var t=e.filename,n=e.path,a=e.flags;return new Promise((function(e,r){var o;function i(e){r(e)}(o=window.cordova.file[n],new Promise((function(e,t){window.resolveLocalFileSystemURL(o,(function(t){e(t)}),(function(e){t(e)}))}))).then((function(n){var r=n;r.getFile(t,a,(function(t){var n=new FileReader;t.createWriter((function(a){e({fileEntry:t,dirEntry:r,fileReader:n,fileWriter:a,fileWrite:function(e){return new Promise((function(t,n){a.onwriteend=function(){return t(a)},a.onerror=function(e){return n(e)},a.write(e)}))},fileRemove:function(){return new Promise((function(e,n){t.remove((function(){return e(!0)}),(function(e){return n(e)}))}))}})}),i)}),i)}))}))}var i=n(36),c=n(26),l=n(28);function u(){return s.apply(this,arguments)}function s(){return(s=Object(r.a)(Object(a.a)().mark((function e(){var t;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(c.c)();case 2:if(e.sent&&cordova.plugins){e.next=5;break}throw c.a.CORDOVA_UNAVAILABLE;case 5:if(t=cordova.plugins.fileOpener2){e.next=8;break}throw c.a.PLUGIN_UNAVAILABLE;case 8:return e.abrupt("return",t);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function _(e){return p.apply(this,arguments)}function p(){return p=Object(r.a)(Object(a.a)().mark((function e(t){var n,r,o,i,s;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.contentType,r=t.fileName,o=t.withDialog,e.next=3,Object(c.c)();case 3:if(e.sent){e.next=6;break}throw c.a.CORDOVA_UNAVAILABLE;case 6:return e.next=8,u();case 8:return i=e.sent,s=o?i.open:i.showOpenWithDialog,e.abrupt("return",new Promise((function(e,t){try{s(r,n,{success:function(){e({code:l.a.SUCCESS,value:!0})},error:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(e){t("boolean"===typeof e?new l.b(l.a.ERROR,i.open.name,l.c):new l.b(l.a.ERROR,i.open.name,e.message))}))})}catch(a){t(new l.b(l.a.ERROR_UNKNOWN,i.open.name,l.c))}})));case 11:case"end":return e.stop()}}),e)}))),p.apply(this,arguments)}function d(){var e=Object(i.i)(),t=e.isDesktop,n=e.isUnknown,c=e.platform;function l(e){var t=e.split(".").pop();return"png"===t||"jpg"===t||"gif"===t||"bmp"===t?"image/".concat(t):"pdf"===t?"application/".concat(t):"doc"===t||"docx"===t?"application/msword":"ppt"===t||"pptx"===t?"application/vnd.ms-powerpoint":"xls"===t||"xlsx"===t?"application/vnd.ms-excel":"xlsm"===t?"application/vnd.ms-excel.sheet.macroEnabled.12":"txt"===t?"text/plain":"zip"===t?"application/zip":void 0}return function(){var e=Object(r.a)(Object(a.a)().mark((function e(r,u){var s,p,d,m,b,f,O;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(s=c===i.b.CORDOVA_ANDROID,!(p=l(r))){e.next=19;break}if(!t&&!n){e.next=9;break}return(d=document.createElement("a")).href=window.URL.createObjectURL(u),d.download=r,d.click(),e.abrupt("return");case 9:return e.next=11,o({filename:r,path:s?"externalApplicationStorageDirectory":"dataDirectory",flags:{create:!0,exclusive:!1}});case 11:return m=e.sent,b=m.fileWrite,f=m.fileEntry,e.next=16,b(u);case 16:return O={contentType:p,fileName:f.nativeURL,withDialog:!0},e.next=19,_(O);case 19:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}()}},501:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var a=512,r=0;function o(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a,o=window.atob(e),i=[],c=r;c<o.length;c+=n){for(var l=o.slice(c,c+n),u=new Array(l.length),s=r;s<l.length;s++)u[s]=l.charCodeAt(s);i.push(new Uint8Array(u))}return new Blob(i,{type:t})}},582:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var a=n(2),r=(n(11),n(41)),o=n(50),i=n(82),c=n(598),l=n.n(c),u=n(599),s=n.n(u),_=n(10),p=l.a.NAME_DROPDOWNBASIC,d=l.a.TYPE_DROPDOWNBASIC;function m(e){var t=e,n=t.color,c=t.iconName,l=t.options,u=Object(_.jsx)(i.a,{ariaLabel:{uuid:"spa.a11y.buttons.options"},kind:"plain",label:{uuid:"spa.a11y.buttons.options"},children:Object(_.jsx)(o.Icon,{name:c,size:"small"})});return Object(_.jsx)(r.a,Object(a.a)(Object(a.a)({},e),{},{name:p,type:d,children:Object(_.jsx)(o.Dropdown,{className:s.a.dropdown,color:n,label:u,children:l.map((function(e){var t=e.label,n=e.onOptionClick;if(t)return Object(_.jsx)(o.Dropdown.Item,{children:Object(_.jsx)(i.a,{className:s.a.dropdownItem,kind:"plain",label:{uuid:t},onClick:n})},t)}))})}))}m.defaultProps={color:"primary",iconName:"verticalKebab"}},598:function(e,t,n){e.exports={NAME_DROPDOWNBASIC:"DropdownBasic",TYPE_DROPDOWNBASIC:"Element"}},599:function(e,t,n){e.exports={NAME_DROPDOWNBASIC:"DropdownBasic",TYPE_DROPDOWNBASIC:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",dropdown:"_rules_dropdown__2aUF4"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=37.bcebe5b2.chunk.js.map