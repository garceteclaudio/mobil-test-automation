(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[145,97],{488:function(e,t,a){"use strict";a.d(t,"a",(function(){return p}));var n=a(2),o=a(16),r=a(19),c=a(11),s=a(502),i=a(505),l=a(41),u=a(6),d=a(79),b=a(8),O=a(493),m=a.n(O),f=a(10),j=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],E=m.a.NAME_FORM,h=m.a.TYPE_FORM;function p(e){var t=e,a=t.ariaLabel,O=t.ariaLabelledby,m=t.schema,p=t.onSubmit,M=t.children,T=t.warnings,A=t.isRequiredToast,v=t.isResetForm,_=Object(r.a)(t,j),x=Object(b.b)(),S=Object(s.e)({resolver:Object(i.a)(m)}),R=S.handleSubmit,y=S.setError,F=S.formState.errors,N=S.reset,g=Object.keys(F),L=c.b.useState(!1),P=Object(o.a)(L,2),C=P[0],k=P[1],U=c.b.useCallback((function(){A&&C&&x(d.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:u.w})),k(!1)}),[x,A,C]),Y=c.b.useCallback((function(){N()}),[N]);return c.b.useEffect((function(){T&&Object.keys(T.data).map((function(e){var t=e.startsWith(u.Nb)?e.slice(u.fb):e;return y(t,{message:T.data[e]},{shouldFocus:!1}),null})),g.length>u.Sb&&U(),v&&Y()}),[g.length,v,Y,y,U,T]),Object(f.jsx)(s.b,Object(n.a)(Object(n.a)(Object(n.a)({},S),_),{},{children:Object(f.jsx)(l.a,{noValidate:!0,"aria-label":a,"aria-labelledby":O,name:E,tag:"form",type:h,onSubmit:R(p,(function(){return k(!C)})),children:M})}))}p.useContext=s.f,p.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},490:function(e,t,a){"use strict";a.d(t,"a",(function(){return j}));var n=a(2),o=a(19),r=a(11),c=a(41),s=a(50),i=a(495),l=a.n(i),u=(a(496),a(38)),d=a(82),b=a(10),O=["ariaLabelledBy","id","children","title","onClose","hasCloseIcon"],m=l.a.TYPE_MODAL,f=l.a.NAME_MODAL;function j(e){var t=e,a=t.ariaLabelledBy,i=t.id,l=t.children,j=t.title,E=t.onClose,h=t.hasCloseIcon,p=Object(o.a)(t,O),M="modal-header-".concat(i||""),T="string"===typeof j?M:a,A="string"===typeof j?Object(b.jsx)(u.b,{id:M,tag:"h4",uuid:j}):j;return Object(b.jsx)(c.a,{name:f,tag:"div",type:m,children:Object(b.jsxs)(s.Modal,Object(n.a)(Object(n.a)({ariaLabelledBy:T,onClose:E},p),{},{children:[Object(b.jsx)(s.Modal.Header,{children:j&&Object(b.jsxs)(r.b.Fragment,{children:[A,h&&Object(b.jsx)(d.a,{icon:"close",kind:"icon",label:{uuid:"spa.a11y.buttons.close.modal"},onClick:E})]})}),l]}))})}j.defaultProps={ariaLabelledBy:"",closeOnBgTap:!0,hasCloseIcon:!0,initialFocusElementId:"",title:""},j.Body=function(e){var t=e.children;return Object(b.jsx)(s.Modal.Body,{children:t})},j.Footer=function(e){var t=e.children,a=e.className;return Object(b.jsx)(s.Modal.Footer,{className:a,children:t})}},493:function(e,t,a){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},495:function(e,t,a){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},496:function(e,t,a){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},500:function(e,t,a){"use strict";a.d(t,"a",(function(){return E}));var n=a(2),o=a(19),r=(a(11),a(41)),c=a(50),s=(a(536),a(6)),i=a(38),l=a(537),u=a.n(l),d=a(10),b=["amount","coverSymbol","isMasked"],O=3,m=u.a.NAME_AMOUNT_FORMATTER,f=u.a.TYPE_AMOUNT_FORMATTER,j={coverSymbol:s.s,currency:s.b,isMasked:!1};function E(e){var t=e,a=t.amount,l=t.coverSymbol,u=t.isMasked,j=Object(o.a)(t,b),E=Boolean(!a)&&a!==s.Sb,h=!E&&u,p=!E&&!u,M=l||s.s,T=" ".concat(M.repeat(O)),A="".concat(j.currency," ").concat(T," ");return Object(d.jsxs)(r.a,{name:m,type:f,children:[E&&Object(d.jsx)(i.b,{tag:"span",uuid:"spa.notAvailable.txt"}),h&&Object(d.jsx)(i.b,{className:j.className,children:A}),p&&Object(d.jsx)(c.FormattedAmount,Object(n.a)({amount:a},j))]})}E.defaultProps=j},503:function(e,t,a){"use strict";a.d(t,"a",(function(){return h}));var n=a(272),o=a(2),r=a(16),c=a(19),s=a(11),i=a(50),l=a(41),u=a(488),d=a(516),b=a.n(d),O=a(10),m=["id","name","methods","options","defaultOption","onSelectOption"],f=b.a.NAME_INPUT_SELECT,j=b.a.TYPE_INPUT_SELECT,E=s.b.memo((function(e){var t,a=e.id,n=e.name,u=e.methods,d=e.options,b=e.defaultOption,E=e.onSelectOption,h=Object(c.a)(e,m),p=u.register,M=u.formState,T=u.setValue,A=u.watch,v=M.errors,_="".concat(n),x=s.b.useState(b),S=Object(r.a)(x,2),R=S[0],y=S[1];A(_);var F=s.b.useRef(null),N=v[n];return s.b.useEffect((function(){null!==b&&void 0!==b&&b.value&&T(_,null===b||void 0===b?void 0:b.value,{shouldValidate:!0})}),[null===b||void 0===b?void 0:b.value,_,T]),s.b.useEffect((function(){F.current&&F.current.blur()}),[N]),s.b.useEffect((function(){R||y(b)}),[b,R]),Object(O.jsx)(l.a,{name:f,type:j,children:Object(O.jsx)(i.SelectField,Object(o.a)(Object(o.a)(Object(o.a)({defaultOption:R,id:a||n,options:d},p(_)),N&&{error:null===(t=N.message)||void 0===t?void 0:t.toString()}),{},{ref:F,onSelectOption:function(e){T(_,e.value,{shouldValidate:!0}),E&&E(e)}},h))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function h(e){var t=u.a.useContext(),a=e,r=Object.assign({},(Object(n.a)(a),a));return Object(O.jsx)(E,Object(o.a)({methods:t},r))}},516:function(e,t,a){e.exports={NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element"}},536:function(e,t,a){e.exports={NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element"}},537:function(e,t,a){e.exports={NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=145.391bc891.chunk.js.map