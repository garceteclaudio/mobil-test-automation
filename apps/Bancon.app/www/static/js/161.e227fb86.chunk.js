(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[161,272],{320:function(e,t,o){"use strict";o.r(t),o.d(t,"DEF_MODAL_PROPS",(function(){return h})),o.d(t,"ModalTermsAndConditions",(function(){return E}));var n=o(30),a=o(40),r=o(16),c=o(11),l=o(521),s=o(50),i=o(6),d=o(148),u=o(69),b=o(8),f=o(82),_=o(490),m=o(38),O=o(435),p=o.n(O),j=o(10),h={};function E(e){var t=e,o=t.showModal,O=t.setShowModal,h=t.handleAccept,E=t.handleCancel,M=Object(m.c)().textGet,T=c.b.useRef(null),A=c.b.useState([]),v=Object(r.a)(A,2),y=v[0],L=v[1],N=Object(b.c)(u.c.isMobile),P=Object(b.c)(u.c.isWebMobile),C=Object(b.c)(d.c.isProductSelectedUVA),x=c.b.useCallback((function(e){e.preventDefault();var t=e.target.getAttribute("href");window.cordova.InAppBrowser.open(t,l.b.system,"location=yes")}),[]);c.b.useEffect((function(){if(N){T&&T.current&&function e(t){var o,r=Object(a.a)(t.childNodes);try{var c=function(){var t=o.value;t.tagName&&"a"===t.tagName.toLowerCase()&&L((function(e){return[].concat(Object(n.a)(e),[t])})),e(t)};for(r.s();!(o=r.n()).done;)c()}catch(l){r.e(l)}finally{r.f()}}(T.current)}}),[N]),c.b.useEffect((function(){if(y.length&&N)return y.forEach((function(e){e.addEventListener("click",x)})),function(){return y.forEach((function(e){return e.removeEventListener("click",x)}))}}),[y,N,x]);var g="confirm-tyc-button",F=M({uuid:C?"spa.deposits.creation.tyc.uvas":"spa.deposits.creation.tyc.dollar"});return N||P?Object(j.jsxs)(s.BottomSheet,{className:p.a.bottomSheetTermsAndConditions,initialFocusElementId:g,isVisible:o,onClose:I,children:[Object(j.jsx)(s.Separator,{className:p.a.separator}),Object(j.jsx)(m.b,{className:p.a.title,tag:"h4",uuid:"spa.deposits.creation.tyc"}),R(),Object(j.jsx)(s.Separator,{className:p.a.separator}),B()]}):Object(j.jsxs)(_.a,{className:p.a.modalTermsAndConditions,initialFocusElementId:g,open:o,title:"spa.deposits.creation.tyc",onClose:I,children:[Object(j.jsx)(_.a.Body,{children:R()}),Object(j.jsx)(_.a.Footer,{children:B()})]});function B(){var e=N||P?p.a.bottomSheetFooter:p.a.modalFooter;return Object(j.jsxs)(s.Box,{align:"end",className:e,children:[Object(j.jsx)(f.a,{inline:!0,label:{uuid:"spa.form.cancel"},type:"button",variant:"outlined",onClick:k}),Object(j.jsx)(f.a,{inline:!0,"data-focus-id":g,label:{uuid:"spa.form.accept"},type:"button",onClick:S})]})}function R(){var e=N||P?p.a.bottomSheetBody:p.a.modalBody;return Object(j.jsx)(s.Box,{className:e,mt:1,children:Object(j.jsx)(m.b,{color:"gray-dark",uuid:i.D,children:Object(j.jsx)("span",{ref:T,dangerouslySetInnerHTML:{__html:F}})})})}function S(){O(!1),h&&h()}function k(){I(),E&&E()}function I(){O(!o)}}E.defaultProps=h},435:function(e,t,o){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",modalCancel:"_rules_modalCancel__3p7fv",modalFooter:"_rules_modalFooter__diCuH",modalTermsAndConditions:"_rules_modalTermsAndConditions__1DLcO",modalBody:"_rules_modalBody__2xIYg",bottomSheetTermsAndConditions:"_rules_bottomSheetTermsAndConditions__2I7bt",title:"_rules_title__2HlRB",bottomSheetBody:"_rules_bottomSheetBody__TaT3s",bottomSheetFooter:"_rules_bottomSheetFooter__2HYeG",bottomSheetCancel:"_rules_bottomSheetCancel__1fOYL",body:"_rules_body__3yiYt",separator:"_rules_separator__3vejd"}},490:function(e,t,o){"use strict";o.d(t,"a",(function(){return O}));var n=o(2),a=o(19),r=o(11),c=o(41),l=o(50),s=o(495),i=o.n(s),d=(o(496),o(38)),u=o(82),b=o(10),f=["ariaLabelledBy","id","children","title","onClose","hasCloseIcon"],_=i.a.TYPE_MODAL,m=i.a.NAME_MODAL;function O(e){var t=e,o=t.ariaLabelledBy,s=t.id,i=t.children,O=t.title,p=t.onClose,j=t.hasCloseIcon,h=Object(a.a)(t,f),E="modal-header-".concat(s||""),M="string"===typeof O?E:o,T="string"===typeof O?Object(b.jsx)(d.b,{id:E,tag:"h4",uuid:O}):O;return Object(b.jsx)(c.a,{name:m,tag:"div",type:_,children:Object(b.jsxs)(l.Modal,Object(n.a)(Object(n.a)({ariaLabelledBy:M,onClose:p},h),{},{children:[Object(b.jsx)(l.Modal.Header,{children:O&&Object(b.jsxs)(r.b.Fragment,{children:[T,j&&Object(b.jsx)(u.a,{icon:"close",kind:"icon",label:{uuid:"spa.a11y.buttons.close.modal"},onClick:p})]})}),i]}))})}O.defaultProps={ariaLabelledBy:"",closeOnBgTap:!0,hasCloseIcon:!0,initialFocusElementId:"",title:""},O.Body=function(e){var t=e.children;return Object(b.jsx)(l.Modal.Body,{children:t})},O.Footer=function(e){var t=e.children,o=e.className;return Object(b.jsx)(l.Modal.Footer,{className:o,children:t})}},495:function(e,t,o){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},496:function(e,t,o){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},521:function(e,t,o){"use strict";o.d(t,"b",(function(){return m})),o.d(t,"a",(function(){return p}));var n=o(2),a=o(19),r=o(11),c=o(558),l=o(22),s=o(41),i=o(527),d=o.n(i),u=(o(528),o(10)),b=["ariaLabel","children","to","target","onClick","hasToReplace","preventNavigateCallback"],f=d.a.NAME_PLATFORMLINK,_=d.a.TYPE_PLATFORMLINK,m={self:"_self",blank:"_blank",system:"_system"},O=0;function p(e){var t=e,o=t.ariaLabel,i=t.children,d=t.to,p=t.target,h=t.onClick,E=t.hasToReplace,M=t.preventNavigateCallback,T=Object(a.a)(t,b),A=Object(l.h)(),v=Object(l.j)(),y=Object(l.g)(d),L=Object(l.m)(d),N=j(d),P=N?d.toString():y,C=N?m.blank:m[p],x=r.b.useCallback((function(e){if(!M())return void e.preventDefault();h&&h(e);if(window.cordova&&C!==m.self){return e.preventDefault(),void window.cordova.InAppBrowser.open(P,m.system,"location=yes").show()}var t=e.button===O,o=Boolean(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey);if(e.defaultPrevented||!t||o||C&&"_self"!==C)return;e.preventDefault(),j?C===m.self?window.location.assign(P):window.open(P,C):v(P,{replace:E||Object(c.a)(A)===Object(c.a)(L)})}),[P,A,v,h,L,E,C,M]);return Object(u.jsx)(s.a,Object(n.a)(Object(n.a)({},T),{},{"aria-label":o,draggable:"false",href:P,name:f,tag:"a",target:C,type:_,onClick:x,children:i}))}function j(e){if("string"!==typeof e)return!1;return/^https?:/.test(e)}p.defaultProps={hasToReplace:!1,preventNavigateCallback:function(){return!0},target:"self"}},527:function(e,t,o){e.exports={NAME_PLATFORMLINK:"PlatformLink",TYPE_PLATFORMLINK:"Element"}},528:function(e,t,o){e.exports={NAME_PLATFORMLINK:"PlatformLink",TYPE_PLATFORMLINK:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=161.e227fb86.chunk.js.map