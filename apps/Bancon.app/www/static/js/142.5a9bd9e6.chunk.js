(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[142,80,167,199,220,315],{307:function(e,t,n){"use strict";n.r(t),n.d(t,"KEY_PREFIX",(function(){return a})),n.d(t,"REQUIRED_FIELD",(function(){return r})),n.d(t,"BY_CODE",(function(){return o})),n.d(t,"BY_PIN",(function(){return i})),n.d(t,"RESEND_CHANNEL_MAIL",(function(){return c})),n.d(t,"RESEND_CHANNEL_SMS",(function(){return s}));var a="spa.recoverPassword",r="spa.generic.field.error.required",o="byCode",i="byPin",c="mail",s="sms"},368:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return M}));var a=n(0),r=n(5),o=n(11),i=n(39),c=n(8),s=n(187),u=n(138),l=n(38),E=n(82),d=n(494),_=n(488),b=n(489),T=n(79),N=n(99),O=n(6),m=n(535),f=n(433),j=n.n(f),h=n(307),P=n(10);function M(){var e=Object(c.b)(),t=Object(l.c)().textGet,n=Object(N.a)().getValueConfig,f=Object(c.c)(u.c.exchangeToken),M=Object(c.c)(u.c.fetching),C=Object(c.c)(u.c.isValidationCodeSent),R=Object(c.c)(u.c.warning),p=Object(m.a)(n),A=t({uuid:"".concat(h.KEY_PREFIX,".byCodeStep1.code.label")}),g=t({uuid:"spa.generic.field.error.required"}),x=i.e.object({validationCode:Object(s.d)(i.e.string.required(),g)}),I=o.b.useCallback((function(){e(T.a.set({kind:"SUCCESS",text:{uuid:"spa.recoverPassword.byCodeStep1.text1"},duration:O.v})),e(u.a.cleanIsValidationCodeSent())}),[e]);return o.b.useEffect((function(){C&&I()}),[I,C]),Object(P.jsx)(b.a,{"header-onBack":function(){e(u.a.cleanRecoverBy())},"header-title":"".concat(h.KEY_PREFIX,".title"),children:Object(P.jsx)("section",{children:Object(P.jsxs)(_.a,{schema:x,warnings:R,onSubmit:function(e){return L.apply(this,arguments)},children:[Object(P.jsx)(l.b,{className:j.a.byCodeInvitationCode,uuid:"".concat(h.KEY_PREFIX,".byCodeStep1.text2")}),Object(P.jsx)("div",{className:j.a.alignInputs,children:Object(P.jsx)(d.a,{id:"validationCode",label:A,maxLength:p,name:"validationCode"})}),Object(P.jsx)(E.a,{label:{className:j.a.textSubtitle,uuid:"spa.form.continue"},loading:M,type:"submit"}),Object(P.jsxs)("div",{className:j.a.alignInvitationCode,children:[Object(P.jsx)(l.b,{tag:"span",uuid:"spa.generic.byCode.notReceive.text"}),Object(P.jsx)(E.a,{className:j.a.haveCode,kind:"plain",label:{uuid:"spa.generic.byCode.resend.link"},onClick:function(){return v.apply(this,arguments)}})]})]})})});function L(){return(L=Object(r.a)(Object(a.a)().mark((function t(n){var r;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.validationCode,t.next=3,e(u.b.byCodeStep1({exchangeToken:f,validationCode:r}));case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function v(){return(v=Object(r.a)(Object(a.a)().mark((function t(){return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e(u.b.resendCode({exchangeToken:f,resendChannel:h.RESEND_CHANNEL_MAIL}));case 2:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},433:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",textSubtitle:"_rules_textSubtitle__1arob",byCodeInvitationCode:"_rules_byCodeInvitationCode__3ZLV8",textHeading:"_rules_textHeading__102RY",alignInputs:"_rules_alignInputs__H3-u1",alignInvitationCode:"_rules_alignInvitationCode__1O7BC",resendCode:"_rules_resendCode__2nnRn",textBody:"_rules_textBody__2yqjP",alignFooter:"_rules_alignFooter__3p45G"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var a=n(2),r=n(16),o=n(19),i=n(11),c=n(502),s=n(505),u=n(41),l=n(6),E=n(79),d=n(8),_=n(493),b=n.n(_),T=n(10),N=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],O=b.a.NAME_FORM,m=b.a.TYPE_FORM;function f(e){var t=e,n=t.ariaLabel,_=t.ariaLabelledby,b=t.schema,f=t.onSubmit,j=t.children,h=t.warnings,P=t.isRequiredToast,M=t.isResetForm,C=Object(o.a)(t,N),R=Object(d.b)(),p=Object(c.e)({resolver:Object(s.a)(b)}),A=p.handleSubmit,g=p.setError,x=p.formState.errors,I=p.reset,L=Object.keys(x),v=i.b.useState(!1),S=Object(r.a)(v,2),y=S[0],F=S[1],Y=i.b.useCallback((function(){P&&y&&R(E.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:l.w})),F(!1)}),[R,P,y]),k=i.b.useCallback((function(){I()}),[I]);return i.b.useEffect((function(){h&&Object.keys(h.data).map((function(e){var t=e.startsWith(l.Nb)?e.slice(l.fb):e;return g(t,{message:h.data[e]},{shouldFocus:!1}),null})),L.length>l.Sb&&Y(),M&&k()}),[L.length,M,k,g,Y,h]),Object(T.jsx)(c.b,Object(a.a)(Object(a.a)(Object(a.a)({},p),C),{},{children:Object(T.jsx)(u.a,{noValidate:!0,"aria-label":n,"aria-labelledby":_,name:O,tag:"form",type:m,onSubmit:A(f,(function(){return F(!y)})),children:j})}))}f.useContext=c.f,f.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),r=n(19),o=(n(11),n(41)),i=n(136),c=n(82),s=n(38),u=n(101),l=n(491),E=n.n(l),d={name:E.a.NAME_EXTERNAL_CONTAINER,type:E.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},_=n(492),b=n.n(_),T=n(10),N=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function O(e){var t=e,n=t["header-onBack"],l=t["header-title"],E=t.children,d=t.name,_=t.type,O=t.headerClassName,m=t.showLogo,f=Object(r.a)(t,N),j=Boolean(n||l),h=Object(o.c)(!l&&b.a.onlyRow,O),P=Object(o.c)(m&&b.a.step1Logo),M=Object(o.c)(m&&b.a.hasLogo);return Object(T.jsxs)(u.a,{children:[m&&Object(T.jsx)("div",{className:P,children:Object(T.jsx)(i.a,{alt:"logo",uuid:"logo150Login"})}),Object(T.jsx)(o.a,Object(a.a)(Object(a.a)({name:d,tag:"article",type:_},f),{},{children:Object(T.jsxs)("article",{className:M,children:[j&&Object(T.jsxs)("header",{className:h,children:[n&&Object(T.jsx)(c.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),l&&Object(T.jsx)(s.b,{tag:"h5",uuid:l})]}),E]})}))]})}O.defaultProps=d},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},494:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),r=n(19),o=n(16),i=n(11),c=n(50),s=n(41),u=n(488),l=n(498),E=n.n(l),d=n(10),_=["id","name","methods","defaultValue","pattern","withSuggestions","onChange","onBlur"],b=E.a.NAME_INPUT_FIELD,T=E.a.TYPE_INPUT_FIELD,N=i.b.memo((function(e){var t,n=i.b.useState(!1),u=Object(o.a)(n,2),l=u[0],E=u[1],N=e.id,O=e.name,m=e.methods,f=e.defaultValue,j=e.pattern,h=e.withSuggestions,P=void 0===h||h,M=e.onChange,C=e.onBlur,R=Object(r.a)(e,_),p=m.register,A=m.formState,g=m.setValue,x=m.clearErrors,I=A.errors,L="".concat(O),v=I[O];return i.b.useEffect((function(){f&&g(L,f),f||g(L,void 0),P&&E(!0)}),[f,L,g,P,E]),Object(d.jsx)(s.a,{name:b,type:T,children:Object(d.jsx)(c.TextField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({id:N||O},f&&{defaultValue:f}),v&&{error:null===(t=v.message)||void 0===t?void 0:t.toString()}),p(L,{onChange:function(e){M&&M(e);x([L])},onBlur:C})),R),{},{autoComplete:P?"on":"off",pattern:j,onKeyDown:function(e){e.target.value||l||E(!0)}}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function O(e){var t=u.a.useContext();return Object(d.jsx)(N,Object(a.a)({methods:t},e))}O.displayName=b},498:function(e,t,n){e.exports={NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element"}},535:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(6);function r(e){var t=Number(e("validationCodes.id.groups.length"));return Number(e("validationCodes.id.groupLength"))*t+t-a.fb}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=142.5a9bd9e6.chunk.js.map