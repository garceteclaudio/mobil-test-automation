(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[134,199,309],{339:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return R}));var n=a(11),r=a(38),o=a(82),i=a(489),s=a(488),c=a(507),u=a(187),E=a(39),d=a(150),l=a(8),b=a(506),O=a(147),m=a(270),T=a(431),_=a.n(T),j=a(10);function R(){var e=Object(l.b)(),t=Object(r.c)().textGet,a=Object(l.c)(d.d.fetching),T=t({uuid:"spa.generic.field.error.required"}),R=t({uuid:"spa.onboarding.ddjj.form.radio.yes"}),h=t({uuid:"spa.onboarding.ddjj.form.radio.no"}),f=Object(l.c)(d.d.isSubject)?R:h,N=Object(l.c)(O.c.exchangeToken),M=E.e.object({isSubject:Object(u.d)(E.e.string.required(),T)}),P=n.b.useCallback((function(){e(d.b.cleanPepDeclaration())}),[e]);return a?Object(j.jsx)(m.a,{}):Object(j.jsx)(i.a,{"header-onBack":P,children:Object(j.jsx)("section",{children:Object(j.jsxs)(s.a,{schema:M,onSubmit:function(t){if(!N)return;var a=t.isSubject===R;e(d.c.updateStatus({status:a?d.a.SO_YES:d.a.SO_NO,exchangeToken:N})),e(d.b.setIsSubject(a))},children:[Object(j.jsxs)("header",{children:[Object(j.jsx)(r.b,{tag:"h1",uuid:"spa.onboarding.ddjj.so.title"}),Object(j.jsx)(r.b,{tag:"h2",uuid:"spa.onboarding.ddjj.so.step"})]}),Object(j.jsx)(r.b,{tag:"span",uuid:"spa.onboarding.ddjj.so.label"}),Object(j.jsxs)(b.a,{name:"isSubject",value:f,children:[Object(j.jsx)(c.a,{id:"isSubject-".concat(R),label:R,name:"isSubject",value:R}),Object(j.jsx)(c.a,{id:"isSubject-".concat(h),label:h,name:"isSubject",value:h})]}),Object(j.jsx)("div",{className:_.a.infoContainer,children:Object(j.jsx)(r.b,{tag:"p",uuid:"spa.onboarding.ddjj.so.info"})}),Object(j.jsx)(o.a,{label:{uuid:"spa.onboarding.ddjj.form.continue"},type:"submit"})]})})})}},431:function(e,t,a){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",infoContainer:"_rules_infoContainer__NsT2B",formContainer:"_rules_formContainer__3oZ9K",title:"_rules_title__13-ed",importantText:"_rules_importantText__1NiIU",downloadText:"_rules_downloadText__3FDkn"}},488:function(e,t,a){"use strict";a.d(t,"a",(function(){return R}));var n=a(2),r=a(16),o=a(19),i=a(11),s=a(502),c=a(505),u=a(41),E=a(6),d=a(79),l=a(8),b=a(493),O=a.n(b),m=a(10),T=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],_=O.a.NAME_FORM,j=O.a.TYPE_FORM;function R(e){var t=e,a=t.ariaLabel,b=t.ariaLabelledby,O=t.schema,R=t.onSubmit,h=t.children,f=t.warnings,N=t.isRequiredToast,M=t.isResetForm,P=Object(o.a)(t,T),A=Object(l.b)(),x=Object(s.e)({resolver:Object(c.a)(O)}),p=x.handleSubmit,g=x.setError,L=x.formState.errors,C=x.reset,S=Object.keys(L),I=i.b.useState(!1),F=Object(r.a)(I,2),v=F[0],Y=F[1],y=i.b.useCallback((function(){N&&v&&A(d.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:E.w})),Y(!1)}),[A,N,v]),U=i.b.useCallback((function(){C()}),[C]);return i.b.useEffect((function(){f&&Object.keys(f.data).map((function(e){var t=e.startsWith(E.Nb)?e.slice(E.fb):e;return g(t,{message:f.data[e]},{shouldFocus:!1}),null})),S.length>E.Sb&&y(),M&&U()}),[S.length,M,U,g,y,f]),Object(m.jsx)(s.b,Object(n.a)(Object(n.a)(Object(n.a)({},x),P),{},{children:Object(m.jsx)(u.a,{noValidate:!0,"aria-label":a,"aria-labelledby":b,name:_,tag:"form",type:j,onSubmit:p(R,(function(){return Y(!v)})),children:h})}))}R.useContext=s.f,R.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,a){"use strict";a.d(t,"a",(function(){return _}));var n=a(2),r=a(19),o=(a(11),a(41)),i=a(136),s=a(82),c=a(38),u=a(101),E=a(491),d=a.n(E),l={name:d.a.NAME_EXTERNAL_CONTAINER,type:d.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},b=a(492),O=a.n(b),m=a(10),T=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function _(e){var t=e,a=t["header-onBack"],E=t["header-title"],d=t.children,l=t.name,b=t.type,_=t.headerClassName,j=t.showLogo,R=Object(r.a)(t,T),h=Boolean(a||E),f=Object(o.c)(!E&&O.a.onlyRow,_),N=Object(o.c)(j&&O.a.step1Logo),M=Object(o.c)(j&&O.a.hasLogo);return Object(m.jsxs)(u.a,{children:[j&&Object(m.jsx)("div",{className:N,children:Object(m.jsx)(i.a,{alt:"logo",uuid:"logo150Login"})}),Object(m.jsx)(o.a,Object(n.a)(Object(n.a)({name:l,tag:"article",type:b},R),{},{children:Object(m.jsxs)("article",{className:M,children:[h&&Object(m.jsxs)("header",{className:f,children:[a&&Object(m.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:a}),E&&Object(m.jsx)(c.b,{tag:"h5",uuid:E})]}),d]})}))]})}_.defaultProps=l},491:function(e,t,a){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,a){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},506:function(e,t,a){"use strict";a.d(t,"a",(function(){return _}));var n=a(2),r=a(19),o=a(11),i=a(50),s=a(41),c=a(488),u=a(509),E=a.n(u),d=a(10),l=["id","name","children","methods","value","onChange"],b=E.a.NAME_RADIO_GROUP,O=E.a.TYPE_RADIO_GROUP,m={id:b},T=o.b.memo((function(e){var t=e.id,a=e.name,c=e.children,u=e.methods,E=e.value,m=e.onChange,T=Object(r.a)(e,l),_=u.formState,j=u.setValue,R=_.errors[a];return o.b.useEffect((function(){E&&j(a,E,{shouldValidate:!0})}),[E,a,j]),Object(d.jsx)(s.a,{name:b,type:O,children:Object(d.jsx)(i.RadioGroup,Object(n.a)(Object(n.a)(Object(n.a)({id:t,name:a,value:E,onChange:function(e){j(a,e.target.value),m&&m(e)}},R&&{error:String(R.message)}),T),{},{children:c}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function _(e){var t=c.a.useContext();return Object(d.jsx)(T,Object(n.a)({methods:t},e))}_.defaultProps=m},507:function(e,t,a){"use strict";a.d(t,"a",(function(){return _}));var n=a(2),r=a(19),o=a(11),i=a(50),s=a(41),c=a(488),u=a(510),E=a.n(u),d=(a(511),a(10)),l=["id","name","methods","onChange"],b=E.a.NAME_INPUT_RADIO,O=E.a.TYPE_INPUT_RADIO,m={id:b},T=o.b.memo((function(e){var t=e.id,a=e.name,o=e.methods,c=e.onChange,u=Object(r.a)(e,l),E=o.register,m=o.formState,T=o.clearErrors,_=m.errors,j="".concat(a),R=_[a];return Object(d.jsx)(s.a,{name:b,type:O,children:Object(d.jsx)(i.Radio,Object(n.a)(Object(n.a)(Object(n.a)({id:t},R&&{error:String(R.message)}),E(j)),{},{name:a,onChange:function(e){c&&c(e),T([j])}},u))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function _(e){var t=c.a.useContext();return Object(d.jsx)(T,Object(n.a)({methods:t},e))}_.defaultProps=m},509:function(e,t,a){e.exports={NAME_RADIO_GROUP:"RadioGroup",TYPE_RADIO_GROUP:"Element"}},510:function(e,t,a){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element"}},511:function(e,t,a){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvc2Vzc2lvbi9BZmZpZGF2aXQvU3RlcDIudHN4Iiwid2VicGFjazovLy8uL3NyYy9wYWdlcy9zZXNzaW9uL0FmZmlkYXZpdC9fcnVsZXMubW9kdWxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4uL2JhbmNvci1jb21wb25lbnRzL0VsZW1lbnQvRm9ybS9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4uL2JhbmNvci1jb21wb25lbnRzL0NvbnRhaW5lci9CYXNlRXh0ZXJuYWwvdHlwZXMudHMiLCJ3ZWJwYWNrOi8vLy4uL2JhbmNvci1jb21wb25lbnRzL0NvbnRhaW5lci9CYXNlRXh0ZXJuYWwvaW5kZXgudHN4Iiwid2VicGFjazovLy8uLi9iYW5jb3ItY29tcG9uZW50cy9Db250YWluZXIvQmFzZUV4dGVybmFsL19pbmRleC5zY3NzIiwid2VicGFjazovLy8uLi9iYW5jb3ItY29tcG9uZW50cy9Db250YWluZXIvQmFzZUV4dGVybmFsL19ydWxlcy5tb2R1bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi4vYmFuY29yLWNvbXBvbmVudHMvRWxlbWVudC9Gb3JtL19pbmRleC5zY3NzIiwid2VicGFjazovLy8uLi9iYW5jb3ItY29tcG9uZW50cy9FbGVtZW50L0Zvcm0vUmFkaW9Hcm91cC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4uL2JhbmNvci1jb21wb25lbnRzL0VsZW1lbnQvRm9ybS9JbnB1dFJhZGlvL2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi4vYmFuY29yLWNvbXBvbmVudHMvRWxlbWVudC9Gb3JtL1JhZGlvR3JvdXAvX2luZGV4LnNjc3MiLCJ3ZWJwYWNrOi8vLy4uL2JhbmNvci1jb21wb25lbnRzL0VsZW1lbnQvRm9ybS9JbnB1dFJhZGlvL19pbmRleC5zY3NzIiwid2VicGFjazovLy8uLi9iYW5jb3ItY29tcG9uZW50cy9FbGVtZW50L0Zvcm0vSW5wdXRSYWRpby9fcnVsZXMubW9kdWxlLnNjc3MiXSwibmFtZXMiOlsiQWZmaWRhdml0U3RlcDIiLCJkaXNwYXRjaCIsInVzZURpc3BhdGNoIiwidGV4dEdldCIsInVzZVRleHQiLCJmZXRjaGluZ0FmZmlkYXZpdCIsInVzZVNlbGVjdG9yIiwiU2VsZWN0b3JTbGljZUFmZmlkYXZpdCIsImZldGNoaW5nIiwidGV4dEVycm9yUmVxdWlyZWQiLCJ1dWlkIiwiZm9ybVJhZGlvWWVzIiwiZm9ybVJhZGlvTm8iLCJpbml0aWFsVmFsdWUiLCJpc1N1YmplY3QiLCJleGNoYW5nZVRva2VuIiwiU2VsZWN0b3JTbGljZVNpZ251cCIsInNjaGVtYSIsIlR5cGUiLCJvYmplY3QiLCJDdXN0b21FcnJvciIsInN0cmluZyIsInJlcXVpcmVkIiwiaGFuZGxlQmFjayIsIlJlYWN0IiwidXNlQ2FsbGJhY2siLCJBY3Rpb25TbGljZUFmZmlkYXZpdCIsImNsZWFuUGVwRGVjbGFyYXRpb24iLCJfanN4IiwiTG9hZGluZyIsIkJhc2VFeHRlcm5hbENvbnRhaW5lciIsImNoaWxkcmVuIiwiX2pzeHMiLCJGb3JtIiwib25TdWJtaXQiLCJkYXRhIiwic3ViamVjdFdhc1NlbGVjdGVkIiwiRmV0Y2hlclNsaWNlQWZmaWRhdml0IiwidXBkYXRlU3RhdHVzIiwic3RhdHVzIiwiQUZGSURBVklUX1NUQVRVUyIsIlNPX1lFUyIsIlNPX05PIiwic2V0SXNTdWJqZWN0IiwiVGV4dCIsInRhZyIsIlJhZGlvR3JvdXAiLCJuYW1lIiwidmFsdWUiLCJJbnB1dFJhZGlvIiwiaWQiLCJjb25jYXQiLCJsYWJlbCIsImNsYXNzTmFtZSIsIlJ1bGVzIiwiaW5mb0NvbnRhaW5lciIsIkJ1dHRvbiIsInR5cGUiLCJtb2R1bGUiLCJleHBvcnRzIiwiTkFNRV9GT1JNIiwiTmFtZXNwYWNlIiwiVFlQRV9GT1JNIiwicHJvcHMiLCJfcmVmIiwiYXJpYUxhYmVsIiwiYXJpYUxhYmVsbGVkYnkiLCJ3YXJuaW5ncyIsImlzUmVxdWlyZWRUb2FzdCIsImlzUmVzZXRGb3JtIiwicmVzdCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsIl9leGNsdWRlZCIsIm1ldGhvZHMiLCJ1c2VGb3JtIiwicmVzb2x2ZXIiLCJzdXBlcnN0cnVjdFJlc29sdmVyIiwiaGFuZGxlU3VibWl0Iiwic2V0RXJyb3IiLCJlcnJvcnMiLCJmb3JtU3RhdGUiLCJyZXNldCIsImVycm9yRGF0YSIsIk9iamVjdCIsImtleXMiLCJfUmVhY3QkdXNlU3RhdGUiLCJ1c2VTdGF0ZSIsIl9SZWFjdCR1c2VTdGF0ZTIiLCJfc2xpY2VkVG9BcnJheSIsInNob3dUb2FzdCIsInNldFNob3dUb2FzdCIsInNob3dSZXF1aXJlZFRvYXN0IiwiQWN0aW9uU2xpY2VUb2FzdCIsInNldCIsImtpbmQiLCJ0ZXh0IiwiZHVyYXRpb24iLCJEVVJBVElPTl9NIiwicmVzZXRJbnB1dHMiLCJ1c2VFZmZlY3QiLCJtYXAiLCJrZXkiLCJuZXdLZXkiLCJzdGFydHNXaXRoIiwiVU5ERVJTQ09SRSIsInNsaWNlIiwiT05FIiwibWVzc2FnZSIsInNob3VsZEZvY3VzIiwibGVuZ3RoIiwiWkVSTyIsIkZvcm1Qcm92aWRlciIsIl9vYmplY3RTcHJlYWQiLCJDb21wb25lbnQiLCJub1ZhbGlkYXRlIiwidXNlQ29udGV4dCIsInVzZUZvcm1Db250ZXh0IiwiZGVmYXVsdFByb3BzIiwiREVGX0JBU0VFWFRFUk5BTF9DT05UQUlORVIiLCJOQU1FX0VYVEVSTkFMX0NPTlRBSU5FUiIsIlRZUEVfRVhURVJOQUxfQ09OVEFJTkVSIiwic2hvd0xvZ28iLCJoZWFkZXJIYW5kbGVyIiwiaGVhZGVyVGl0bGUiLCJoZWFkZXJDbGFzc05hbWUiLCJoYXNIZWFkZXIiLCJCb29sZWFuIiwiaGVhZGVyQ2xhc3NOYW1lcyIsImdldENsYXNzTmFtZSIsIm9ubHlSb3ciLCJjb250YWluZXJMb2dvQ2xhc3NOYW1lIiwic3RlcDFMb2dvIiwiY29udGFpbmVyQ2xhc3NOYW1lIiwiaGFzTG9nbyIsIkJhc2VNYWluQ29udGFpbmVyIiwiSW1hZ2UiLCJhbHQiLCJpY29uIiwic2l6ZSIsInZhcmlhbnQiLCJvbkNsaWNrIiwiTkFNRV9SQURJT19HUk9VUCIsIlRZUEVfUkFESU9fR1JPVVAiLCJERUZfUkFESU9fR1JPVVAiLCJSYWRpb0dyb3VwTWVtb2l6ZWQiLCJtZW1vIiwib25DaGFuZ2UiLCJzZXRWYWx1ZSIsImlucHV0RXJyb3IiLCJzaG91bGRWYWxpZGF0ZSIsIlJhZGlvIiwiZSIsInRhcmdldCIsImVycm9yIiwiU3RyaW5nIiwicHJldlByb3BzIiwibmV4dFByb3BzIiwiZGlydHlGaWVsZHMiLCJOQU1FX0lOUFVUX1JBRElPIiwiVFlQRV9JTlBVVF9SQURJTyIsIkRFRl9JTlBVVF9SQURJTyIsIklucHV0UmFkaW9NZW1vaXplZCIsInJlZ2lzdGVyIiwiY2xlYXJFcnJvcnMiLCJyZWdpc3Rlck5hbWUiXSwibWFwcGluZ3MiOiI0SEFBQSw0TEF3QmUsU0FBU0EsSUFDcEIsSUFBTUMsRUFBV0MsY0FDVEMsRUFBWUMsY0FBWkQsUUFDRkUsRUFBb0JDLFlBQVlDLElBQXVCQyxVQUN2REMsRUFBb0JOLEVBQVEsQ0FBRU8sS0FBTSxxQ0FDcENDLEVBQWVSLEVBQVEsQ0FBRU8sS0FBTSx1Q0FDL0JFLEVBQWNULEVBQVEsQ0FBRU8sS0FBTSxzQ0FFOUJHLEVBRFlQLFlBQVlDLElBQXVCTyxXQUNwQkgsRUFBZUMsRUFFMUNHLEVBQWdCVCxZQUFZVSxJQUFvQkQsZUFFaERFLEVBQVNDLElBQUtDLE9BQU8sQ0FDdkJMLFVBQVdNLFlBQVlGLElBQUtHLE9BQU9DLFdBQVliLEtBRzdDYyxFQUFhQyxJQUFNQyxhQUFZLFdBQ2pDeEIsRUFBU3lCLElBQXFCQyxzQkFDbEMsR0FBRyxDQUFDMUIsSUFFSixPQUFJSSxFQUEwQnVCLGNBQUNDLElBQU8sSUFFbENELGNBQUNFLElBQXFCLENBQUMsZ0JBQWVQLEVBQVdRLFNBQzdDSCxjQUFBLFdBQUFHLFNBQ0lDLGVBQUNDLElBQUksQ0FBQ2hCLE9BQVFBLEVBQVFpQixTQTZCbEMsU0FBd0JDLEdBQ3BCLElBQUtwQixFQUFlLE9BQ3BCLElBQ01xQixFQURtQ0QsRUFBakNyQixZQUN5Q0gsRUFDakRWLEVBQ0lvQyxJ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QyxRQUFVLENBQUMsaUJBQW1CLGFBQWEsaUJBQW1CLFUsc0JDQXJFRCxFQUFPQyxRQUFVLENBQUMsaUJBQW1CLGFBQWEsaUJBQW1CLFVBQVUsbUJBQXFCLGdCQUFnQixtQkFBcUIsU0FBUyw0QkFBOEIsd0JBQXdCLDRCQUE4QixVQUFVLDRCQUE4Qix3QkFBd0IsNEJBQThCLFciLCJmaWxlIjoic3RhdGljL2pzLzEzNC5jYjc2MmM5Zi5jaHVuay5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwiQHBrZy9yZWFjdFwiO1xuXG5pbXBvcnQgeyBUZXh0LCB1c2VUZXh0IH0gZnJvbSBcIkBhcHAvYmFuY29yLWNvbXBvbmVudHMvRWxlbWVudC9UZXh0XCI7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQGFwcC9iYW5jb3ItY29tcG9uZW50cy9FbGVtZW50L0J1dHRvblwiO1xuXG5pbXBvcnQgeyBCYXNlRXh0ZXJuYWxDb250YWluZXIgfSBmcm9tIFwiQGFwcC9iYW5jb3ItY29tcG9uZW50cy9Db250YWluZXIvQmFzZUV4dGVybmFsXCI7XG5pbXBvcnQgeyBGb3JtIH0gZnJvbSBcIkBhcHAvYmFuY29yLWNvbXBvbmVudHMvRWxlbWVudC9Gb3JtXCI7XG5pbXBvcnQgeyBJbnB1dFJhZGlvIH0gZnJvbSBcIkBhcHAvYmFuY29yLWNvbXBvbmVudHMvRWxlbWVudC9Gb3JtL0lucHV0UmFkaW9cIjtcblxuaW1wb3J0IHsgQ3VzdG9tRXJyb3IgfSBmcm9tIFwiQGFwcC9iYW5jb24tZGF0YS92YWxpZGF0aW9uc1wiO1xuaW1wb3J0IHR5cGUgeyBJbmZlciB9IGZyb20gXCJAcGtnL3V0aWxzL3NjaGVtYVwiO1xuaW1wb3J0IHsgVHlwZSB9IGZyb20gXCJAcGtnL3V0aWxzL3NjaGVtYVwiO1xuaW1wb3J0IHtcbiAgICBBY3Rpb25TbGljZUFmZmlkYXZpdCxcbiAgICBGZXRjaGVyU2xpY2VBZmZpZGF2aXQsXG4gICAgQUZGSURBVklUX1NUQVRVUyxcbiAgICBTZWxlY3RvclNsaWNlQWZmaWRhdml0LFxufSBmcm9tIFwiQGFwcC9iYW5jb24tZGF0YS9zbGljZXMvYWZmaWRhdml0XCI7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgdXNlU2VsZWN0b3IgfSBmcm9tIFwiQGFwcC9iYW5jb24tZGF0YVwiO1xuaW1wb3J0IHsgUmFkaW9Hcm91cCB9IGZyb20gXCJAYXBwL2JhbmNvci1jb21wb25lbnRzL0VsZW1lbnQvRm9ybS9SYWRpb0dyb3VwXCI7XG5pbXBvcnQgeyBTZWxlY3RvclNsaWNlU2lnbnVwIH0gZnJvbSBcIkBhcHAvYmFuY29uLWRhdGEvc2xpY2VzL3NpZ251cFwiO1xuaW1wb3J0IHsgTG9hZGluZyB9IGZyb20gXCJAYXBwL2JhbmNvci1jb21wb25lbnRzL0VsZW1lbnQvTG9hZGluZ1wiO1xuaW1wb3J0IFJ1bGVzIGZyb20gXCIuL19ydWxlcy5tb2R1bGUuc2Nzc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBZmZpZGF2aXRTdGVwMigpIHtcbiAgICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG4gICAgY29uc3QgeyB0ZXh0R2V0IH0gPSB1c2VUZXh0KCk7XG4gICAgY29uc3QgZmV0Y2hpbmdBZmZpZGF2aXQgPSB1c2VTZWxlY3RvcihTZWxlY3RvclNsaWNlQWZmaWRhdml0LmZldGNoaW5nKTtcbiAgICBjb25zdCB0ZXh0RXJyb3JSZXF1aXJlZCA9IHRleHRHZXQoeyB1dWlkOiBcInNwYS5nZW5lcmljLmZpZWxkLmVycm9yLnJlcXVpcmVkXCIgfSk7XG4gICAgY29uc3QgZm9ybVJhZGlvWWVzID0gdGV4dEdldCh7IHV1aWQ6IFwic3BhLm9uYm9hcmRpbmcuZGRqai5mb3JtLnJhZGlvLnllc1wiIH0pO1xuICAgIGNvbnN0IGZvcm1SYWRpb05vID0gdGV4dEdldCh7IHV1aWQ6IFwic3BhLm9uYm9hcmRpbmcuZGRqai5mb3JtLnJhZGlvLm5vXCIgfSk7XG4gICAgY29uc3QgaXNTdWJqZWN0ID0gdXNlU2VsZWN0b3IoU2VsZWN0b3JTbGljZUFmZmlkYXZpdC5pc1N1YmplY3QpO1xuICAgIGNvbnN0IGluaXRpYWxWYWx1ZSA9IGlzU3ViamVjdCA/IGZvcm1SYWRpb1llcyA6IGZvcm1SYWRpb05vO1xuXG4gICAgY29uc3QgZXhjaGFuZ2VUb2tlbiA9IHVzZVNlbGVjdG9yKFNlbGVjdG9yU2xpY2VTaWdudXAuZXhjaGFuZ2VUb2tlbik7XG5cbiAgICBjb25zdCBzY2hlbWEgPSBUeXBlLm9iamVjdCh7XG4gICAgICAgIGlzU3ViamVjdDogQ3VzdG9tRXJyb3IoVHlwZS5zdHJpbmcucmVxdWlyZWQoKSwgdGV4dEVycm9yUmVxdWlyZWQpLFxuICAgIH0pO1xuXG4gICAgY29uc3QgaGFuZGxlQmFjayA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgZGlzcGF0Y2goQWN0aW9uU2xpY2VBZmZpZGF2aXQuY2xlYW5QZXBEZWNsYXJhdGlvbigpKTtcbiAgICB9LCBbZGlzcGF0Y2hdKTtcblxuICAgIGlmIChmZXRjaGluZ0FmZmlkYXZpdCkgcmV0dXJuIDxMb2FkaW5nIC8+O1xuICAgIHJldHVybiAoXG4gICAgICAgIDxCYXNlRXh0ZXJuYWxDb250YWluZXIgaGVhZGVyLW9uQmFjaz17aGFuZGxlQmFja30+XG4gICAgICAgICAgICA8c2VjdGlvbj5cbiAgICAgICAgICAgICAgICA8Rm9ybSBzY2hlbWE9e3NjaGVtYX0gb25TdWJtaXQ9e2hhbmRsZU9uU3VibWl0fT5cbiAgICAgICAgICAgICAgICAgICAgPGhlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0IHRhZz1cImgxXCIgdXVpZD1cInNwYS5vbmJvYXJkaW5nLmRkamouc28udGl0bGVcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQgdGFnPVwiaDJcIiB1dWlkPVwic3BhLm9uYm9hcmRpbmcuZGRqai5zby5zdGVwXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgIDxUZXh0IHRhZz1cInNwYW5cIiB1dWlkPVwic3BhLm9uYm9hcmRpbmcuZGRqai5zby5sYWJlbFwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDxSYWRpb0dyb3VwIG5hbWU9XCJpc1N1YmplY3RcIiB2YWx1ZT17aW5pdGlhbFZhbHVlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dFJhZGlvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9e2Bpc1N1YmplY3QtJHtmb3JtUmFkaW9ZZXN9YH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17Zm9ybVJhZGlvWWVzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJpc1N1YmplY3RcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtmb3JtUmFkaW9ZZXN9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPElucHV0UmFkaW9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD17YGlzU3ViamVjdC0ke2Zvcm1SYWRpb05vfWB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2Zvcm1SYWRpb05vfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJpc1N1YmplY3RcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtmb3JtUmFkaW9Ob31cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvUmFkaW9Hcm91cD5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1J1bGVzLmluZm9Db250YWluZXJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQgdGFnPVwicFwiIHV1aWQ9XCJzcGEub25ib2FyZGluZy5kZGpqLnNvLmluZm9cIiAvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBsYWJlbD17eyB1dWlkOiBcInNwYS5vbmJvYXJkaW5nLmRkamouZm9ybS5jb250aW51ZVwiIH19IHR5cGU9XCJzdWJtaXRcIiAvPlxuICAgICAgICAgICAgICAgIDwvRm9ybT5cbiAgICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgPC9CYXNlRXh0ZXJuYWxDb250YWluZXI+XG4gICAgKTtcblxuICAgIGZ1bmN0aW9uIGhhbmRsZU9uU3VibWl0KGRhdGE6IEluZmVyPHR5cGVvZiBzY2hlbWE+KSB7XG4gICAgICAgIGlmICghZXhjaGFuZ2VUb2tlbikgcmV0dXJuO1xuICAgICAgICBjb25zdCB7IGlzU3ViamVjdDogaXNTdWJqZWN0U2VsZWN0ZWQgfSA9IGRhdGE7XG4gICAgICAgIGNvbnN0IHN1YmplY3RXYXNTZWxlY3RlZCA9IGlzU3ViamVjdFNlbGVjdGVkID09PSBmb3JtUmFkaW9ZZXM7XG4gICAgICAgIGRpc3BhdGNoKFxuICAgICAgICAgICAgRmV0Y2hlclNsaWNlQWZmaWRhdml0LnVwZGF0ZVN0YXR1cyh7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBzdWJqZWN0V2FzU2VsZWN0ZWQgPyBBRkZJREFWSVRfU1RBVFVTLlNPX1lFUyA6IEFGRklEQVZJVF9TVEFUVVMuU09fTk8sXG4gICAgICAgICAgICAgICAgZXhjaGFuZ2VUb2tlbixcbiAgICAgICAgICAgIH0pLFxuICAgICAgICApO1xuICAgICAgICBkaXNwYXRjaChBY3Rpb25TbGljZUFmZmlkYXZpdC5zZXRJc1N1YmplY3Qoc3ViamVjdFdhc1NlbGVjdGVkKSk7XG4gICAgfVxufVxuIiwiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcIk5BTUVfRVhURVJOQUxfQ09OVEFJTkVSXCI6XCJDb250YWluZXJFeHRlcm5hbFwiLFwiVFlQRV9FWFRFUk5BTF9DT05UQUlORVJcIjpcIkNvbnRhaW5lclwiLFwiTkFNRV9USEVNRVBMQVRGT1JNXCI6XCJUaGVtZVBsYXRmb3JtXCIsXCJUWVBFX1RIRU1FUExBVEZPUk1cIjpcIkJ1bmRsZVwiLFwiTkFNRV9DT05TVU1FUl9USEVNRVBMQVRGT1JNXCI6XCJUaGVtZVBsYXRmb3JtQ29uc3VtZXJcIixcIlRZUEVfQ09OU1VNRVJfVEhFTUVQTEFURk9STVwiOlwiRWxlbWVudFwiLFwiTkFNRV9QUk9WSURFUl9USEVNRVBMQVRGT1JNXCI6XCJUaGVtZVBsYXRmb3JtUHJvdmlkZXJcIixcIlRZUEVfUFJPVklERVJfVEhFTUVQTEFURk9STVwiOlwiUHJvdmlkZXJcIixcIk5BTUVfVEVYVFwiOlwiVGV4dFwiLFwiVFlQRV9URVhUXCI6XCJFbGVtZW50XCIsXCJOQU1FX0JVVFRPTlwiOlwiQnV0dG9uXCIsXCJUWVBFX0JVVFRPTlwiOlwiRWxlbWVudFwiLFwiaW5mb0NvbnRhaW5lclwiOlwiX3J1bGVzX2luZm9Db250YWluZXJfX05zVDJCXCIsXCJmb3JtQ29udGFpbmVyXCI6XCJfcnVsZXNfZm9ybUNvbnRhaW5lcl9fM29aOUtcIixcInRpdGxlXCI6XCJfcnVsZXNfdGl0bGVfXzEzLWVkXCIsXCJpbXBvcnRhbnRUZXh0XCI6XCJfcnVsZXNfaW1wb3J0YW50VGV4dF9fMU5pSVVcIixcImRvd25sb2FkVGV4dFwiOlwiX3J1bGVzX2Rvd25sb2FkVGV4dF9fM0ZEa25cIn07IiwiaW1wb3J0IFJlYWN0IGZyb20gXCJAcGtnL3JlYWN0XCI7XG5pbXBvcnQgeyB1c2VGb3JtLCBGb3JtUHJvdmlkZXIsIHVzZUZvcm1Db250ZXh0IH0gZnJvbSBcInJlYWN0LWhvb2stZm9ybVwiO1xuaW1wb3J0IHsgc3VwZXJzdHJ1Y3RSZXNvbHZlciB9IGZyb20gXCJAaG9va2Zvcm0vcmVzb2x2ZXJzL3N1cGVyc3RydWN0XCI7XG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwiQHBrZy9yZWFjdC1zdG9yeWJvb2svQ29tcG9uZW50XCI7XG5pbXBvcnQgdHlwZSB7IEluZmVyLCBBbnlTdHJ1Y3QgfSBmcm9tIFwiQHBrZy91dGlscy9zY2hlbWFcIjtcbmltcG9ydCB0eXBlIHsgUHJvcEVsZW1lbnQsIFByb3BEZWZhdWx0cywgUHJvcFR5cGVzIH0gZnJvbSBcIkBwa2cvcmVhY3Qtc3Rvcnlib29rL0NvbXBvbmVudFwiO1xuXG5pbXBvcnQgdHlwZSB7IE5TQVBJRXJyb3IgfSBmcm9tIFwiQGFwcC9iYW5jb24tZGF0YS9hcGkvZXJyb3IvX25hbWVzcGFjZVwiO1xuaW1wb3J0IHsgRFVSQVRJT05fTSwgT05FLCBVTkRFUlNDT1JFLCBaRVJPIH0gZnJvbSBcIkBhcHAvYmFuY29uLWRhdGEvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBBY3Rpb25TbGljZVRvYXN0IH0gZnJvbSBcIkBhcHAvYmFuY29uLWRhdGEvc2xpY2VzL3RvYXN0XCI7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCB9IGZyb20gXCJAYXBwL2JhbmNvbi1kYXRhXCI7XG5cbmltcG9ydCBOYW1lc3BhY2UgZnJvbSBcIi4vX2luZGV4LnNjc3NcIjtcblxuZXhwb3J0IGNvbnN0IHsgTkFNRV9GT1JNLCBUWVBFX0ZPUk0gfSA9IE5hbWVzcGFjZTtcblxuZXhwb3J0IHR5cGUgT21pdFByb3BJRDxUPiA9IE9taXQ8VCwgRXhjbHVkZTxrZXlvZiBQcm9wRWxlbWVudCwgXCJpZFwiPj47XG5cbmV4cG9ydCB0eXBlIFByb3BEUzxEUz4gPSBPbWl0PERTLCBrZXlvZiBSZWFjdC5JbnB1dEhUTUxBdHRyaWJ1dGVzPEhUTUxJbnB1dEVsZW1lbnQ+IHwgXCJvbkNoYW5nZVwiPjtcblxuZXhwb3J0IHR5cGUgUHJvcEZvcm08UyBleHRlbmRzIEFueVN0cnVjdD4gPSBQcm9wRWxlbWVudCAmIHtcbiAgICBhcmlhTGFiZWw6IHN0cmluZztcbiAgICBhcmlhTGFiZWxsZWRieTogc3RyaW5nO1xuICAgIHNjaGVtYTogUztcbiAgICBvblN1Ym1pdDogKGRhdGE6IEluZmVyPFM+KSA9PiB2b2lkO1xuICAgIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gICAgd2FybmluZ3M/OiBOU0FQSUVycm9yLlNjaGVtYSB8IG51bGw7XG4gICAgLy8gV2hlbiB0aGVyZSdzIGFuIGVycm9yIHdlIHNob3cgYSB0b2FzdCB3aXRoIGFuIGVycm9yIG1lc3NhZ2VcbiAgICBpc1JlcXVpcmVkVG9hc3Q/OiBib29sZWFuO1xuICAgIC8vIFdoZW4geW91IHdhbnQgdG8gcmVzZXQgYWxsIGlucHV0IHZhbHVlc1xuICAgIGlzUmVzZXRGb3JtPzogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCBjb25zdCBERUZfRk9STTogUHJvcERlZmF1bHRzPFByb3BGb3JtPEFueVN0cnVjdD4+ID0ge1xuICAgIGlzUmVxdWlyZWRUb2FzdDogdHJ1ZSxcbiAgICBpc1Jlc2V0Rm9ybTogZmFsc2UsXG4gICAgd2FybmluZ3M6IG51bGwsXG59O1xuXG5leHBvcnQgdHlwZSBQcm9wVHlwZXNGb3JtID0gUHJvcFR5cGVzPFByb3BGb3JtPEFueVN0cnVjdD4sIHR5cGVvZiBERUZfRk9STT47XG5leHBvcnQgZnVuY3Rpb24gRm9ybTxTIGV4dGVuZHMgQW55U3RydWN0Pihwcm9wczogUHJvcEZvcm08Uz4pIHtcbiAgICBjb25zdCB7XG4gICAgICAgIGFyaWFMYWJlbCxcbiAgICAgICAgYXJpYUxhYmVsbGVkYnksXG4gICAgICAgIHNjaGVtYSxcbiAgICAgICAgb25TdWJtaXQsXG4gICAgICAgIGNoaWxkcmVuLFxuICAgICAgICB3YXJuaW5ncyxcbiAgICAgICAgaXNSZXF1aXJlZFRvYXN0LFxuICAgICAgICBpc1Jlc2V0Rm9ybSxcbiAgICAgICAgLi4ucmVzdFxuICAgIH0gPSBwcm9wcyBhcyBQcm9wVHlwZXNGb3JtO1xuICAgIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcblxuICAgIGNvbnN0IG1ldGhvZHMgPSB1c2VGb3JtKHtcbiAgICAgICAgcmVzb2x2ZXI6IHN1cGVyc3RydWN0UmVzb2x2ZXIoc2NoZW1hKSxcbiAgICB9KTtcbiAgICBjb25zdCB7XG4gICAgICAgIGhhbmRsZVN1Ym1pdCxcbiAgICAgICAgc2V0RXJyb3IsXG4gICAgICAgIGZvcm1TdGF0ZTogeyBlcnJvcnMgfSxcbiAgICAgICAgcmVzZXQsXG4gICAgfSA9IG1ldGhvZHM7XG5cbiAgICBjb25zdCBlcnJvckRhdGEgPSBPYmplY3Qua2V5cyhlcnJvcnMpO1xuICAgIGNvbnN0IFtzaG93VG9hc3QsIHNldFNob3dUb2FzdF0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgcmVzZXRUb2FzdCA9ICgpID0+IHNldFNob3dUb2FzdCghc2hvd1RvYXN0KTtcblxuICAgIGNvbnN0IHNob3dSZXF1aXJlZFRvYXN0ID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBpZiAoaXNSZXF1aXJlZFRvYXN0ICYmIHNob3dUb2FzdClcbiAgICAgICAgICAgIGRpc3BhdGNoKFxuICAgICAgICAgICAgICAgIEFjdGlvblNsaWNlVG9hc3Quc2V0KHtcbiAgICAgICAgICAgICAgICAgICAga2luZDogXCJFUlJPUlwiLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1dWlkOiBcInNwYS5mb3JtLmZpZWxkLmdlbmVyaWMuZXJyb3JcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IERVUkFUSU9OX00sXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICApO1xuICAgICAgICBzZXRTaG93VG9hc3QoZmFsc2UpO1xuICAgIH0sIFtkaXNwYXRjaCwgaXNSZXF1aXJlZFRvYXN0LCBzaG93VG9hc3RdKTtcblxuICAgIGNvbnN0IHJlc2V0SW5wdXRzID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICByZXNldCgpO1xuICAgIH0sIFtyZXNldF0pO1xuXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKHdhcm5pbmdzKSB7XG4gICAgICAgICAgICBPYmplY3Qua2V5cyh3YXJuaW5ncy5kYXRhKS5tYXAoKGtleSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld0tleSA9IGtleS5zdGFydHNXaXRoKFVOREVSU0NPUkUpID8ga2V5LnNsaWNlKE9ORSkgOiBrZXk7XG4gICAgICAgICAgICAgICAgc2V0RXJyb3IobmV3S2V5LCB7IG1lc3NhZ2U6IHdhcm5pbmdzLmRhdGFba2V5XSB9LCB7IHNob3VsZEZvY3VzOiBmYWxzZSB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlcnJvckRhdGEubGVuZ3RoID4gWkVSTykgc2hvd1JlcXVpcmVkVG9hc3QoKTtcbiAgICAgICAgaWYgKGlzUmVzZXRGb3JtKSB7XG4gICAgICAgICAgICByZXNldElucHV0cygpO1xuICAgICAgICB9XG4gICAgfSwgW2Vycm9yRGF0YS5sZW5ndGgsIGlzUmVzZXRGb3JtLCByZXNldElucHV0cywgc2V0RXJyb3IsIHNob3dSZXF1aXJlZFRvYXN0LCB3YXJuaW5nc10pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPEZvcm1Qcm92aWRlciB7Li4ubWV0aG9kc30gey4uLnJlc3R9PlxuICAgICAgICAgICAgPENvbXBvbmVudFxuICAgICAgICAgICAgICAgIG5vVmFsaWRhdGVcbiAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPXthcmlhTGFiZWx9XG4gICAgICAgICAgICAgICAgYXJpYS1sYWJlbGxlZGJ5PXthcmlhTGFiZWxsZWRieX1cbiAgICAgICAgICAgICAgICBuYW1lPXtOQU1FX0ZPUk19XG4gICAgICAgICAgICAgICAgdGFnPVwiZm9ybVwiXG4gICAgICAgICAgICAgICAgdHlwZT17VFlQRV9GT1JNfVxuICAgICAgICAgICAgICAgIG9uU3VibWl0PXtoYW5kbGVTdWJtaXQob25TdWJtaXQsIHJlc2V0VG9hc3QpfT5cbiAgICAgICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgICA8L0NvbXBvbmVudD5cbiAgICAgICAgPC9Gb3JtUHJvdmlkZXI+XG4gICAgKTtcbn1cblxuRm9ybS51c2VDb250ZXh0ID0gdXNlRm9ybUNvbnRleHQ7XG5Gb3JtLmRlZmF1bHRQcm9wcyA9IERFRl9GT1JNO1xuIiwiaW1wb3J0IHR5cGUgeyBQcm9wVHlwZXMsIFByb3BFbGVtZW50LCBQcm9wRGVmYXVsdHMgfSBmcm9tIFwiQHBrZy9yZWFjdC1zdG9yeWJvb2svQ29tcG9uZW50XCI7XG5pbXBvcnQgTmFtZXNwYWNlIGZyb20gXCIuL19pbmRleC5zY3NzXCI7XG5cbmV4cG9ydCBjb25zdCB7IE5BTUVfRVhURVJOQUxfQ09OVEFJTkVSLCBUWVBFX0VYVEVSTkFMX0NPTlRBSU5FUiB9ID0gTmFtZXNwYWNlO1xuXG5leHBvcnQgdHlwZSBQcm9wSGVhZGVyRXh0ZXJuYWxDb250YWluZXIgPSB7XG4gICAgXCJoZWFkZXItb25CYWNrXCI/OiAoKSA9PiB2b2lkO1xuICAgIFwiaGVhZGVyLXRpdGxlXCI/OiBzdHJpbmc7XG59O1xuXG5leHBvcnQgdHlwZSBQcm9wQmFzZUV4dGVybmFsQ29udGFpbmVyID0gUHJvcEVsZW1lbnQgJiB7XG4gICAgY2hpbGRyZW46IE5vbk51bGxhYmxlPFByb3BFbGVtZW50W1wiY2hpbGRyZW5cIl0+OyAvLyBtYWtlIGNoaWxkcmVuIHJlcXVpcmVkXG4gICAgbmFtZT86IHN0cmluZztcbiAgICB0eXBlPzogc3RyaW5nO1xuICAgIGhlYWRlckNsYXNzTmFtZT86IHN0cmluZztcbiAgICBzaG93TG9nbz86IGJvb2xlYW47XG59ICYgUHJvcEhlYWRlckV4dGVybmFsQ29udGFpbmVyO1xuXG5leHBvcnQgY29uc3QgREVGX0JBU0VFWFRFUk5BTF9DT05UQUlORVI6IFByb3BEZWZhdWx0czxcbiAgICBPbWl0PFByb3BCYXNlRXh0ZXJuYWxDb250YWluZXIsIGtleW9mIFByb3BIZWFkZXJFeHRlcm5hbENvbnRhaW5lciB8IFwiaGVhZGVyQ2xhc3NOYW1lXCI+XG4+ID0ge1xuICAgIG5hbWU6IE5BTUVfRVhURVJOQUxfQ09OVEFJTkVSLFxuICAgIHR5cGU6IFRZUEVfRVhURVJOQUxfQ09OVEFJTkVSLFxuICAgIHNob3dMb2dvOiBmYWxzZSxcbn07XG5cbmV4cG9ydCB0eXBlIFByb3BUeXBlc0Jhc2VFeHRlcm5hbENvbnRhaW5lciA9IFByb3BUeXBlczxcbiAgICBQcm9wQmFzZUV4dGVybmFsQ29udGFpbmVyLFxuICAgIHR5cGVvZiBERUZfQkFTRUVYVEVSTkFMX0NPTlRBSU5FUlxuPjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwiQHBrZy9yZWFjdFwiO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBnZXRDbGFzc05hbWUgfSBmcm9tIFwiQHBrZy9yZWFjdC1zdG9yeWJvb2svQ29tcG9uZW50XCI7XG5cbmltcG9ydCB7IEltYWdlIH0gZnJvbSBcIi4uLy4uL0VsZW1lbnQvSW1hZ2VcIjtcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCIuLi8uLi9FbGVtZW50L0J1dHRvblwiO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gXCIuLi8uLi9FbGVtZW50L1RleHRcIjtcblxuaW1wb3J0IHsgQmFzZU1haW5Db250YWluZXIgfSBmcm9tIFwiLi4vQmFzZU1haW5cIjtcbmltcG9ydCB7IERFRl9CQVNFRVhURVJOQUxfQ09OVEFJTkVSIH0gZnJvbSBcIi4vdHlwZXNcIjtcbmltcG9ydCB0eXBlIHsgUHJvcEJhc2VFeHRlcm5hbENvbnRhaW5lciwgUHJvcFR5cGVzQmFzZUV4dGVybmFsQ29udGFpbmVyIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuaW1wb3J0IFJ1bGVzIGZyb20gXCIuL19ydWxlcy5tb2R1bGUuc2Nzc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gQmFzZUV4dGVybmFsQ29udGFpbmVyKHByb3BzOiBQcm9wQmFzZUV4dGVybmFsQ29udGFpbmVyKSB7XG4gICAgY29uc3Qge1xuICAgICAgICBcImhlYWRlci1vbkJhY2tcIjogaGVhZGVySGFuZGxlcixcbiAgICAgICAgXCJoZWFkZXItdGl0bGVcIjogaGVhZGVyVGl0bGUsXG4gICAgICAgIGNoaWxkcmVuLFxuICAgICAgICBuYW1lLFxuICAgICAgICB0eXBlLFxuICAgICAgICBoZWFkZXJDbGFzc05hbWUsXG4gICAgICAgIHNob3dMb2dvLFxuICAgICAgICAuLi5yZXN0XG4gICAgfSA9IHByb3BzIGFzIFByb3BUeXBlc0Jhc2VFeHRlcm5hbENvbnRhaW5lcjtcblxuICAgIGNvbnN0IGhhc0hlYWRlciA9IEJvb2xlYW4oaGVhZGVySGFuZGxlciB8fCBoZWFkZXJUaXRsZSk7XG4gICAgY29uc3QgaGVhZGVyQ2xhc3NOYW1lcyA9IGdldENsYXNzTmFtZSghaGVhZGVyVGl0bGUgJiYgUnVsZXMub25seVJvdywgaGVhZGVyQ2xhc3NOYW1lKTtcbiAgICBjb25zdCBjb250YWluZXJMb2dvQ2xhc3NOYW1lID0gZ2V0Q2xhc3NOYW1lKHNob3dMb2dvICYmIFJ1bGVzLnN0ZXAxTG9nbyk7XG4gICAgY29uc3QgY29udGFpbmVyQ2xhc3NOYW1lID0gZ2V0Q2xhc3NOYW1lKHNob3dMb2dvICYmIFJ1bGVzLmhhc0xvZ28pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPEJhc2VNYWluQ29udGFpbmVyPlxuICAgICAgICAgICAge3Nob3dMb2dvICYmIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y29udGFpbmVyTG9nb0NsYXNzTmFtZX0+XG4gICAgICAgICAgICAgICAgICAgIDxJbWFnZSBhbHQ9XCJsb2dvXCIgdXVpZD1cImxvZ28xNTBMb2dpblwiIC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgPENvbXBvbmVudCBuYW1lPXtuYW1lfSB0YWc9XCJhcnRpY2xlXCIgdHlwZT17dHlwZX0gey4uLnJlc3R9PlxuICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzTmFtZT17Y29udGFpbmVyQ2xhc3NOYW1lfT5cbiAgICAgICAgICAgICAgICAgICAge2hhc0hlYWRlciAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8aGVhZGVyIGNsYXNzTmFtZT17aGVhZGVyQ2xhc3NOYW1lc30+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2hlYWRlckhhbmRsZXIgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uPVwibGVmdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kPVwiaWNvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17eyB1dWlkOiBcInNwYS5hMTF5LmJ1dHRvbnMuYmFja1wiIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplPVwibWVkaXVtXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hlYWRlckhhbmRsZXJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7aGVhZGVyVGl0bGUgJiYgPFRleHQgdGFnPVwiaDVcIiB1dWlkPXtoZWFkZXJUaXRsZX0gLz59XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2hlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgICAgIDwvYXJ0aWNsZT5cbiAgICAgICAgICAgIDwvQ29tcG9uZW50PlxuICAgICAgICA8L0Jhc2VNYWluQ29udGFpbmVyPlxuICAgICk7XG59XG5CYXNlRXh0ZXJuYWxDb250YWluZXIuZGVmYXVsdFByb3BzID0gREVGX0JBU0VFWFRFUk5BTF9DT05UQUlORVI7XG4iLCIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiTkFNRV9FWFRFUk5BTF9DT05UQUlORVJcIjpcIkNvbnRhaW5lckV4dGVybmFsXCIsXCJUWVBFX0VYVEVSTkFMX0NPTlRBSU5FUlwiOlwiQ29udGFpbmVyXCJ9OyIsIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJOQU1FX1RIRU1FUExBVEZPUk1cIjpcIlRoZW1lUGxhdGZvcm1cIixcIlRZUEVfVEhFTUVQTEFURk9STVwiOlwiQnVuZGxlXCIsXCJOQU1FX0NPTlNVTUVSX1RIRU1FUExBVEZPUk1cIjpcIlRoZW1lUGxhdGZvcm1Db25zdW1lclwiLFwiVFlQRV9DT05TVU1FUl9USEVNRVBMQVRGT1JNXCI6XCJFbGVtZW50XCIsXCJOQU1FX1BST1ZJREVSX1RIRU1FUExBVEZPUk1cIjpcIlRoZW1lUGxhdGZvcm1Qcm92aWRlclwiLFwiVFlQRV9QUk9WSURFUl9USEVNRVBMQVRGT1JNXCI6XCJQcm92aWRlclwiLFwiTkFNRV9URVhUXCI6XCJUZXh0XCIsXCJUWVBFX1RFWFRcIjpcIkVsZW1lbnRcIixcIk5BTUVfQlVUVE9OXCI6XCJCdXR0b25cIixcIlRZUEVfQlVUVE9OXCI6XCJFbGVtZW50XCIsXCJOQU1FX0xJTktcIjpcIkxpbmtcIixcIlRZUEVfTElOS1wiOlwiRWxlbWVudFwiLFwiTkFNRV9JTUFHRVwiOlwiSW1hZ2VcIixcIlRZUEVfSU1BR0VcIjpcIkVsZW1lbnRcIixcIk5BTUVfWFNcIjpcInhzXCIsXCJOQU1FX1NNXCI6XCJzbVwiLFwiTkFNRV9NRFwiOlwibWRcIixcIk5BTUVfTEdcIjpcImxnXCIsXCJOQU1FX0VYVEVSTkFMX0NPTlRBSU5FUlwiOlwiQ29udGFpbmVyRXh0ZXJuYWxcIixcIlRZUEVfRVhURVJOQUxfQ09OVEFJTkVSXCI6XCJDb250YWluZXJcIixcImhhc0xvZ29cIjpcIl9ydWxlc19oYXNMb2dvX19BeEhHS1wiLFwib25seVJvd1wiOlwiX3J1bGVzX29ubHlSb3dfXzFpbThoXCIsXCJzdGVwMUxvZ29cIjpcIl9ydWxlc19zdGVwMUxvZ29fXzNMTnE1XCJ9OyIsIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxubW9kdWxlLmV4cG9ydHMgPSB7XCJOQU1FX0ZPUk1cIjpcIkZvcm1cIixcIlRZUEVfRk9STVwiOlwiRWxlbWVudFwifTsiLCJpbXBvcnQgUmVhY3QgZnJvbSBcIkBwa2cvcmVhY3RcIjtcbmltcG9ydCB7IFJhZGlvR3JvdXAgYXMgUmFkaW8gfSBmcm9tIFwiQGFwcC9iYW5jb24tdWlcIjtcbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gXCJAcGtnL3JlYWN0LXN0b3J5Ym9vay9Db21wb25lbnRcIjtcbmltcG9ydCB0eXBlIHsgUHJvcERlZmF1bHRzLCBQcm9wVHlwZXMgfSBmcm9tIFwiQHBrZy9yZWFjdC1zdG9yeWJvb2svQ29tcG9uZW50XCI7XG5pbXBvcnQgdHlwZSB7IFByb3BzIGFzIFJhZGlvR3JvdXBQcm9wcyB9IGZyb20gXCJAYXBwL2JhbmNvbi11aS9kaXN0L2NvbXBvbmVudHMvUmFkaW9Hcm91cC9cIjtcbmltcG9ydCB0eXBlIHsgVXNlRm9ybVJldHVybiB9IGZyb20gXCJyZWFjdC1ob29rLWZvcm1cIjtcbmltcG9ydCB0eXBlIHsgT21pdFByb3BJRCwgUHJvcERTIH0gZnJvbSBcIi4uXCI7XG5pbXBvcnQgeyBGb3JtIH0gZnJvbSBcIi4uXCI7XG5pbXBvcnQgTmFtZXNwYWNlIGZyb20gXCIuL19pbmRleC5zY3NzXCI7XG5cbmV4cG9ydCBjb25zdCB7IE5BTUVfUkFESU9fR1JPVVAsIFRZUEVfUkFESU9fR1JPVVAgfSA9IE5hbWVzcGFjZTtcblxuZXhwb3J0IHR5cGUgUHJvcFJhZGlvR3JvdXAgPSBQcm9wRFM8UmFkaW9Hcm91cFByb3BzPiAmIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGlkPzogc3RyaW5nO1xuICAgIHZhbHVlPzogc3RyaW5nO1xuICAgIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gICAgb25DaGFuZ2U/OiBSZWFjdC5Gb3JtRXZlbnRIYW5kbGVyPEhUTUxJbnB1dEVsZW1lbnQ+O1xufTtcblxuZXhwb3J0IGNvbnN0IERFRl9SQURJT19HUk9VUDogUHJvcERlZmF1bHRzPFxuICAgIFByb3BSYWRpb0dyb3VwLFxuICAgIE9taXRQcm9wSUQ8UHJvcFJhZGlvR3JvdXA+IHwga2V5b2YgUHJvcERTPFJhZGlvR3JvdXBQcm9wcz5cbj4gPSB7XG4gICAgaWQ6IE5BTUVfUkFESU9fR1JPVVAsXG59O1xuXG5leHBvcnQgdHlwZSBQcm9wVHlwZXNQcm9wUmFkaW9Hcm91cCA9IFByb3BUeXBlczxQcm9wUmFkaW9Hcm91cCwgdHlwZW9mIERFRl9SQURJT19HUk9VUD47XG5cbnR5cGUgUHJvcFJhZGlvR3JvdXBNZW1vaXplZCA9IFByb3BSYWRpb0dyb3VwICYge1xuICAgIG1ldGhvZHM6IFVzZUZvcm1SZXR1cm47XG59O1xuXG5jb25zdCBSYWRpb0dyb3VwTWVtb2l6ZWQgPSBSZWFjdC5tZW1vKFxuICAgIChwcm9wczogUHJvcFJhZGlvR3JvdXBNZW1vaXplZCkgPT4ge1xuICAgICAgICBjb25zdCB7IGlkLCBuYW1lLCBjaGlsZHJlbiwgbWV0aG9kcywgdmFsdWUsIG9uQ2hhbmdlLCAuLi5yZXN0IH0gPSBwcm9wcztcbiAgICAgICAgY29uc3QgeyBmb3JtU3RhdGUsIHNldFZhbHVlIH0gPSBtZXRob2RzO1xuICAgICAgICBjb25zdCB7IGVycm9ycyB9ID0gZm9ybVN0YXRlO1xuICAgICAgICBjb25zdCBpbnB1dEVycm9yID0gZXJyb3JzW25hbWVdO1xuICAgICAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHZhbHVlKSBzZXRWYWx1ZShuYW1lLCB2YWx1ZSwgeyBzaG91bGRWYWxpZGF0ZTogdHJ1ZSB9KTtcbiAgICAgICAgfSwgW3ZhbHVlLCBuYW1lLCBzZXRWYWx1ZV0pO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Q29tcG9uZW50IG5hbWU9e05BTUVfUkFESU9fR1JPVVB9IHR5cGU9e1RZUEVfUkFESU9fR1JPVVB9PlxuICAgICAgICAgICAgICAgIDxSYWRpb1xuICAgICAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgICAgICAgIG5hbWU9e25hbWV9XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VmFsdWUobmFtZSwgZS50YXJnZXQudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uQ2hhbmdlKSBvbkNoYW5nZShlKTtcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgey4uLihpbnB1dEVycm9yICYmIHsgZXJyb3I6IFN0cmluZyhpbnB1dEVycm9yLm1lc3NhZ2UpIH0pfVxuICAgICAgICAgICAgICAgICAgICB7Li4ucmVzdH0+XG4gICAgICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgICAgICA8L1JhZGlvPlxuICAgICAgICAgICAgPC9Db21wb25lbnQ+XG4gICAgICAgICk7XG4gICAgfSxcbiAgICAocHJldlByb3BzLCBuZXh0UHJvcHMpID0+XG4gICAgICAgIHByZXZQcm9wcy5tZXRob2RzLmZvcm1TdGF0ZS5lcnJvcnMgPT09IG5leHRQcm9wcy5tZXRob2RzLmZvcm1TdGF0ZS5lcnJvcnMgJiZcbiAgICAgICAgcHJldlByb3BzLm1ldGhvZHMuZm9ybVN0YXRlLmRpcnR5RmllbGRzW3ByZXZQcm9wcy5uYW1lXSAhPT1cbiAgICAgICAgICAgIG5leHRQcm9wcy5tZXRob2RzLmZvcm1TdGF0ZS5kaXJ0eUZpZWxkc1tuZXh0UHJvcHMubmFtZV0sXG4pO1xuXG5leHBvcnQgZnVuY3Rpb24gUmFkaW9Hcm91cChwcm9wczogUHJvcFR5cGVzPFByb3BSYWRpb0dyb3VwLCB0eXBlb2YgREVGX1JBRElPX0dST1VQPikge1xuICAgIGNvbnN0IG1ldGhvZHMgPSBGb3JtLnVzZUNvbnRleHQoKTtcbiAgICByZXR1cm4gPFJhZGlvR3JvdXBNZW1vaXplZCBtZXRob2RzPXttZXRob2RzfSB7Li4ucHJvcHN9IC8+O1xufVxuXG5SYWRpb0dyb3VwLmRlZmF1bHRQcm9wcyA9IERFRl9SQURJT19HUk9VUDtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwiQHBrZy9yZWFjdFwiO1xuaW1wb3J0IHsgUmFkaW8gfSBmcm9tIFwiQGFwcC9iYW5jb24tdWlcIjtcbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gXCJAcGtnL3JlYWN0LXN0b3J5Ym9vay9Db21wb25lbnRcIjtcbmltcG9ydCB0eXBlIHsgUHJvcERlZmF1bHRzLCBQcm9wVHlwZXMgfSBmcm9tIFwiQHBrZy9yZWFjdC1zdG9yeWJvb2svQ29tcG9uZW50XCI7XG5pbXBvcnQgdHlwZSB7IFByb3BzIGFzIFJhZGlvUHJvcHMgfSBmcm9tIFwiQGFwcC9iYW5jb24tdWkvZGlzdC9jb21wb25lbnRzL1JhZGlvL1wiO1xuaW1wb3J0IHR5cGUgeyBVc2VGb3JtUmV0dXJuIH0gZnJvbSBcInJlYWN0LWhvb2stZm9ybVwiO1xuaW1wb3J0IHR5cGUgeyBPbWl0UHJvcElELCBQcm9wRFMgfSBmcm9tIFwiLi5cIjtcbmltcG9ydCB7IEZvcm0gfSBmcm9tIFwiLi5cIjtcbmltcG9ydCBOYW1lc3BhY2UgZnJvbSBcIi4vX2luZGV4LnNjc3NcIjtcbmltcG9ydCBcIi4vX3J1bGVzLm1vZHVsZS5zY3NzXCI7XG5cbmV4cG9ydCBjb25zdCB7IE5BTUVfSU5QVVRfUkFESU8sIFRZUEVfSU5QVVRfUkFESU8gfSA9IE5hbWVzcGFjZTtcblxuZXhwb3J0IHR5cGUgUHJvcElucHV0UmFkaW8gPSBQcm9wRFM8UmFkaW9Qcm9wcz4gJiB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBpZDogc3RyaW5nO1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgb25DaGFuZ2U/OiAoKGV2ZW50OiBSZWFjdC5Gb3JtRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHZvaWQpIHwgdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IERFRl9JTlBVVF9SQURJTzogUHJvcERlZmF1bHRzPFxuICAgIFByb3BJbnB1dFJhZGlvLFxuICAgIE9taXRQcm9wSUQ8UHJvcElucHV0UmFkaW8+IHwga2V5b2YgUHJvcERTPFJhZGlvUHJvcHM+XG4+ID0geyBpZDogTkFNRV9JTlBVVF9SQURJTyB9O1xuXG50eXBlIFByb3BJbnB1dFJhZGlvTWVtb2l6ZWQgPSBQcm9wSW5wdXRSYWRpbyAmIHtcbiAgICBtZXRob2RzOiBVc2VGb3JtUmV0dXJuO1xufTtcblxuY29uc3QgSW5wdXRSYWRpb01lbW9pemVkID0gUmVhY3QubWVtbyhcbiAgICAocHJvcHM6IFByb3BJbnB1dFJhZGlvTWVtb2l6ZWQpID0+IHtcbiAgICAgICAgY29uc3QgeyBpZCwgbmFtZSwgbWV0aG9kcywgb25DaGFuZ2UsIC4uLnJlc3QgfSA9IHByb3BzO1xuICAgICAgICBjb25zdCB7IHJlZ2lzdGVyLCBmb3JtU3RhdGUsIGNsZWFyRXJyb3JzIH0gPSBtZXRob2RzO1xuICAgICAgICBjb25zdCB7IGVycm9ycyB9ID0gZm9ybVN0YXRlO1xuXG4gICAgICAgIGNvbnN0IHJlZ2lzdGVyTmFtZSA9IGAke25hbWV9YCBhcyBjb25zdDtcblxuICAgICAgICBjb25zdCBpbnB1dEVycm9yID0gZXJyb3JzW25hbWVdO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Q29tcG9uZW50IG5hbWU9e05BTUVfSU5QVVRfUkFESU99IHR5cGU9e1RZUEVfSU5QVVRfUkFESU99PlxuICAgICAgICAgICAgICAgIDxSYWRpb1xuICAgICAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgICAgICAgIHsuLi4oaW5wdXRFcnJvciAmJiB7IGVycm9yOiBTdHJpbmcoaW5wdXRFcnJvci5tZXNzYWdlKSB9KX1cbiAgICAgICAgICAgICAgICAgICAgey4uLnJlZ2lzdGVyKHJlZ2lzdGVyTmFtZSl9XG4gICAgICAgICAgICAgICAgICAgIG5hbWU9e25hbWV9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uQ2hhbmdlKSBvbkNoYW5nZShlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyRXJyb3JzKFtyZWdpc3Rlck5hbWVdKTtcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgey4uLnJlc3R9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvQ29tcG9uZW50PlxuICAgICAgICApO1xuICAgIH0sXG4gICAgKHByZXZQcm9wcywgbmV4dFByb3BzKSA9PlxuICAgICAgICBwcmV2UHJvcHMubWV0aG9kcy5mb3JtU3RhdGUuZXJyb3JzID09PSBuZXh0UHJvcHMubWV0aG9kcy5mb3JtU3RhdGUuZXJyb3JzICYmXG4gICAgICAgIHByZXZQcm9wcy5tZXRob2RzLmZvcm1TdGF0ZS5kaXJ0eUZpZWxkc1twcmV2UHJvcHMubmFtZV0gIT09XG4gICAgICAgICAgICBuZXh0UHJvcHMubWV0aG9kcy5mb3JtU3RhdGUuZGlydHlGaWVsZHNbbmV4dFByb3BzLm5hbWVdLFxuKTtcblxuZXhwb3J0IGZ1bmN0aW9uIElucHV0UmFkaW8ocHJvcHM6IFByb3BUeXBlczxQcm9wSW5wdXRSYWRpbywgdHlwZW9mIERFRl9JTlBVVF9SQURJTz4pIHtcbiAgICBjb25zdCBtZXRob2RzID0gRm9ybS51c2VDb250ZXh0KCk7XG5cbiAgICByZXR1cm4gPElucHV0UmFkaW9NZW1vaXplZCBtZXRob2RzPXttZXRob2RzfSB7Li4ucHJvcHN9IC8+O1xufVxuSW5wdXRSYWRpby5kZWZhdWx0UHJvcHMgPSBERUZfSU5QVVRfUkFESU87XG4iLCIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiTkFNRV9SQURJT19HUk9VUFwiOlwiUmFkaW9Hcm91cFwiLFwiVFlQRV9SQURJT19HUk9VUFwiOlwiRWxlbWVudFwifTsiLCIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiTkFNRV9JTlBVVF9SQURJT1wiOlwiSW5wdXRSYWRpb1wiLFwiVFlQRV9JTlBVVF9SQURJT1wiOlwiRWxlbWVudFwifTsiLCIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiTkFNRV9JTlBVVF9SQURJT1wiOlwiSW5wdXRSYWRpb1wiLFwiVFlQRV9JTlBVVF9SQURJT1wiOlwiRWxlbWVudFwiLFwiTkFNRV9USEVNRVBMQVRGT1JNXCI6XCJUaGVtZVBsYXRmb3JtXCIsXCJUWVBFX1RIRU1FUExBVEZPUk1cIjpcIkJ1bmRsZVwiLFwiTkFNRV9DT05TVU1FUl9USEVNRVBMQVRGT1JNXCI6XCJUaGVtZVBsYXRmb3JtQ29uc3VtZXJcIixcIlRZUEVfQ09OU1VNRVJfVEhFTUVQTEFURk9STVwiOlwiRWxlbWVudFwiLFwiTkFNRV9QUk9WSURFUl9USEVNRVBMQVRGT1JNXCI6XCJUaGVtZVBsYXRmb3JtUHJvdmlkZXJcIixcIlRZUEVfUFJPVklERVJfVEhFTUVQTEFURk9STVwiOlwiUHJvdmlkZXJcIn07Il0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceMappingURL=134.cb762c9f.chunk.js.map