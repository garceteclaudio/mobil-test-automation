(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[207,302],{399:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return g}));var n=a(2),s=a(16),i=a(11),c=a(8),r=a(153),l=a(69),u=a(33),o=a(160),b=a(154),d=a(100),m=a(51),j=a(271),p=a(501),T=a(508),O=a(499),f=a(38),_=a(270),E=a(500),P=a(504),h=a(569),v=a(497),y=a(6),x=a(615),A=a(83),S=a(79),N=a(441),M=a.n(N),D=a(10);function g(){var e,t=i.b.useState(!1),a=Object(s.a)(t,2),N=a[0],g=a[1],R=i.b.useState(!1),F=Object(s.a)(R,2),k=F[0],I=F[1],U=Object(O.a)(),H=Object(m.qb)(),C=Object(c.b)(),B=Object(c.c)(o.c.idTransaction),L=Object(c.c)(r.c.transaction),V=Object(c.c)(u.e.token),Y=Object(c.c)(o.c.fetching),G=Object(c.c)(b.c.fetching),q=Object(c.c)(b.c.fetchedFile),w=Object(c.c)(b.c.filename),z=Object(c.c)(b.c.content),J=Object(T.a)(w),W=null===L||void 0===L||null===(e=L.data)||void 0===e?void 0:e.sequences,X=Array.isArray(W)&&W.length===y.fb,K=Object(c.c)(l.c.isDesktop),Q=Object(m.sb)(m.V),Z=i.b.useCallback((function(){C(r.a.clean()),C(o.a.clean())}),[C]);return i.b.useEffect((function(){(null===L||void 0===L?void 0:L.idTransactionStatus)===A.e.STATUS_PENDING&&C(S.a.set({kind:"WARNING",text:{uuid:"spa.deposits.transaction.signature.pending.description"},duration:y.v}))}),[C,L]),i.b.useEffect((function(){(k||N)&&V&&B&&(q||w||z?(w&&z&&(N&&(U(J,Object(p.a)(z)),g(!1)),k&&(Object(j.a)({options:{message:w,subject:w},files:[{fileName:J,base64File:z}]}),I(!1))),C(b.a.setFetchedFile(!1))):C(b.b.generatePdf({token:V,idTransaction:B})))}),[z,C,N,q,w,J,U,B,k,V,K]),i.b.useEffect((function(){if(V)return C(r.b.readTransaction({accessToken:V,idTransaction:B})),function(){return Z()}}),[C,V,B,Z]),G||Y||!L?Object(D.jsx)(_.a,{}):Object(D.jsx)(v.a,{children:Object(D.jsx)(h.a,{isDownloadable:!0,isShareable:!0,className:M.a.voidPaymentsTicket,finishButtonText:"spa.form.continue",handleDownload:function(){g(!0)},handleFinish:function(){H(Q,{replace:!0}),C(o.a.clean())},handleShare:function(){I(!0)},title:{label:"spa.suppliers.voidPayment.ticket.title",dataValue:""},transactionDate:null===L||void 0===L?void 0:L.creationDateTime,transactionStatus:null===L||void 0===L?void 0:L.idTransactionStatus,children:Object(D.jsxs)("ul",{children:[Object(D.jsxs)("li",{children:[Object(D.jsx)(f.b,{tag:"span",uuid:"spa.suppliers.voidPayment.ticket.executionDate"}),Object(D.jsx)(P.a,{date:null===L||void 0===L?void 0:L.creationDateTime,formatParams:{format:d.a.DAY}})]}),X?function(){if(!X)return;var e=W[y.Sb];return Object(D.jsxs)(i.b.Fragment,{children:[Object(D.jsxs)("li",{children:[Object(D.jsx)(f.b,{uuid:"spa.suppliers.voidMultiplePayments.tableHead.date"}),Object(D.jsx)(P.a,{date:e.paymentBatchDate,formatParams:{format:d.a.SHORT}})]}),Object(D.jsxs)("li",{children:[Object(D.jsx)(f.b,{uuid:"spa.suppliers.voidMultiplePayments.tableHead.fileName"}),Object(D.jsx)(f.b,{tag:"span",children:e.fileName})]}),Object(D.jsxs)("li",{children:[Object(D.jsx)(f.b,{uuid:"spa.suppliers.voidMultiplePayments.tableHead.recipientCBU"}),Object(D.jsx)(f.b,{tag:"span",children:e.receiverCBU})]}),Object(D.jsxs)("li",{children:[Object(D.jsx)(f.b,{uuid:"spa.suppliers.voidMultiplePayments.tableHead.paymentReference"}),Object(D.jsx)(f.b,{tag:"span",children:e.paymentReference})]}),Object(D.jsxs)("li",{children:[Object(D.jsx)(f.b,{uuid:"spa.suppliers.voidMultiplePayments.tableHead.amount"}),Object(D.jsx)(E.a,{amount:e.amount})]})]})}():function(){var e=W.map((function(e){var t=y.D;return t=L.idTransactionStatus===A.e.STATUS_PENDING?A.e.STATUS_PENDING:"Error"===e.statusId?A.e.STATUS_FAILED:A.e.STATUS_FINISHED,Object(n.a)(Object(n.a)({},e),{},{statusName:t})}));return[{message:"spa.suppliers.voidPayment.ticket.numberOfVoidedPayments",payments:$(e,A.e.STATUS_FINISHED)},{message:"spa.suppliers.voidPayment.ticket.numberOfRejectedPayments",payments:$(e,A.e.STATUS_FAILED)},{message:"spa.suppliers.voidPayment.ticket.numberOfPendingPayments",payments:$(e,A.e.STATUS_PENDING)}].filter((function(e){return e.payments.length>y.Sb})).map((function(e){var t=e.payments.reduce((function(e,t){return e+Number(t.amount)}),y.Sb),a=e.message.split("ticket."),n=Object(s.a)(a,2)[1];return Object(D.jsxs)("div",{className:M.a.paymentDetails,id:n,children:[Object(D.jsxs)("li",{children:[Object(D.jsx)(f.b,{tag:"span",uuid:e.message}),Object(D.jsx)(f.b,{tag:"span",children:String(e.payments.length)})]}),Object(D.jsxs)("li",{children:[Object(D.jsx)(f.b,{tag:"span",uuid:"spa.suppliers.voidPayment.ticket.totalAmount"}),Object(D.jsx)(E.a,{amount:t})]})]},n)}))}(),L&&Object(D.jsx)(x.a,{transaction:L})]})})});function $(e,t){return e.filter((function(e){return e.statusName===t}))}}},441:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",voidPayments:"_rules_voidPayments__3hIqV",paymentsTable:"_rules_paymentsTable__1h3zr",buttons:"_rules_buttons__2z3bW",voidPaymentsState:"_rules_voidPaymentsState__30faA",voidPaymentsTicket:"_rules_voidPaymentsTicket__12CUd",paymentDetails:"_rules_paymentDetails__Vl-q9",amountCol:"_rules_amountCol__2hVGj"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=207.3250194f.chunk.js.map