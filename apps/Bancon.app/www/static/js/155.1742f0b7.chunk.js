(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[155,199,311],{358:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return A}));var a=n(0),i=n(2),o=n(5),r=n(16),s=n(11),c=n(39),l=n(8),u=n(149),_=n(187),E=n(270),d=n(488),b=n(489),O=n(38),T=n(82),m=n(147),j=n(503),p=n(6),N=n(150),f=n(428),h=n.n(f),P=n(10);function A(){var e=Object(O.c)().textGet,t=Object(l.b)(),n=Object(l.c)(u.c.fetching),f=Object(l.c)(u.c.warning),A=Object(l.c)(m.c.exchangeToken),M=Object(l.c)(u.c.getRenaperData),g=null===M||void 0===M?void 0:M.names,R=null===M||void 0===M?void 0:M.countryBirth,v=Object(l.c)(u.c.countriesOptions),x=Object(l.c)(u.c.economicActivitiesOptions),C=Object(l.c)(u.c.maritalStatusOptions),L=Object(l.c)(u.c.occupationsOptions),S=e({uuid:"spa.generic.field.error.required"}),I=e({uuid:"spa.onboarding.step7.country.label"}),y=e({uuid:"spa.onboarding.step7.civilstatus.label"}),F=e({uuid:"spa.onboarding.step7.activity.label"}),B=e({uuid:"spa.onboarding.step7.occupation.label"}),Y=s.b.useState(!1),U=Object(r.a)(Y,2),k=U[0],w=U[1],D=c.e.object({countryBirth:Object(_.d)(c.e.string.required(),S),maritalStatus:Object(_.d)(c.e.string.required(),S),occupation:Object(_.d)(c.e.string.required(),S),activity:Object(c.c)((function(e,t){var n,a=t.branch[p.Sb].occupation;return(null===(n=L.find((function(e){return e.value===a})))||void 0===n?void 0:n.activityId)===p.D?Object(_.d)(c.e.string.required(),S):c.e.any()}))});if(s.b.useEffect((function(){A&&t(u.b.getPersonalData({exchangeToken:A}))}),[t,A]),n)return Object(P.jsx)(E.a,{});var H=void 0;return R&&(H=v.find((function(e){if(e.value===R)return e}))),Object(P.jsx)(b.a,{"header-onBack":function(){t(u.a.cleanRenaper())},"header-title":"spa.onboarding.step7.title",children:Object(P.jsx)("section",{children:Object(P.jsxs)(d.a,{schema:D,warnings:f,onSubmit:function(e){return X.apply(this,arguments)},children:[Object(P.jsxs)(O.b,{className:h.a.title,tag:"h6",children:[Object(P.jsx)("strong",{children:"".concat(g," ")}),Object(P.jsx)(O.b,{tag:"span",uuid:"spa.onboarding.step7.text1"})]}),Object(P.jsx)(O.b,{className:h.a.subtitle,uuid:"spa.onboarding.step7.text2"}),Object(P.jsxs)("div",{className:h.a.inputSelectContainer,children:[Object(P.jsx)(j.a,{defaultOption:H,label:I,name:"countryBirth",options:v}),Object(P.jsx)(j.a,{label:y,name:"maritalStatus",options:C}),Object(P.jsx)(j.a,{label:B,name:"occupation",options:L,onSelectOption:function(e){var n=e.value,a=L.find((function(e){return e.value===n})),i=null===a||void 0===a?void 0:a.activityId;a&&i===p.D?(w(!0),t(u.a.setActivity(p.D))):(t(u.a.setActivity(String(i))),w(!1))}}),k&&Object(P.jsx)(j.a,{label:F,name:"activity",options:x})]}),Object(P.jsx)(T.a,{label:{uuid:"spa.form.continue"},loading:n,type:"submit"})]})})});function X(){return(X=Object(o.a)(Object(a.a)().mark((function e(n){return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.countryBirth===p.Ob&&t(N.b.setRFCountry({RFCountry:n.countryBirth})),e.next=3,t(u.b.sendPersonalData(Object(i.a)({exchangeToken:A},n)));case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},428:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",presentation:"_rules_presentation__2rnDT",image:"_rules_image__2dV7m",containerText:"_rules_containerText__pu48C",title:"_rules_title__3WK5D",text:"_rules_text__3khoq",nextButton:"_rules_nextButton__3nv4A",skipButton:"_rules_skipButton__6WOgG",finishButton:"_rules_finishButton__VsgGK",subtitle:"_rules_subtitle__bTvVh",inputSelectContainer:"_rules_inputSelectContainer__2j7Df",submitButton:"_rules_submitButton__3FaKR",alert:"_rules_alert__laL5T",alertLottie:"_rules_alertLottie__2sgW7",termsAndConditions:"_rules_termsAndConditions__cNiMg",validateTitle:"_rules_validateTitle__2Nx1p",emailValue:"_rules_emailValue__yLDPW",noteEmail:"_rules_noteEmail__4AmC9",subtitleEmail:"_rules_subtitleEmail__2J0wM",inputContainerEmail:"_rules_inputContainerEmail__2O1ou",resendCode:"_rules_resendCode__lH6Jj",inputContainerPhone:"_rules_inputContainerPhone__1gKy1",securitySealContainer:"_rules_securitySealContainer__1LU5g",onboardingWelcome:"_rules_onboardingWelcome__ijVs1",downloadPrincipal:"_rules_downloadPrincipal__2thE8",logosContainer:"_rules_logosContainer__2uaXe"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var a=n(2),i=n(16),o=n(19),r=n(11),s=n(502),c=n(505),l=n(41),u=n(6),_=n(79),E=n(8),d=n(493),b=n.n(d),O=n(10),T=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],m=b.a.NAME_FORM,j=b.a.TYPE_FORM;function p(e){var t=e,n=t.ariaLabel,d=t.ariaLabelledby,b=t.schema,p=t.onSubmit,N=t.children,f=t.warnings,h=t.isRequiredToast,P=t.isResetForm,A=Object(o.a)(t,T),M=Object(E.b)(),g=Object(s.e)({resolver:Object(c.a)(b)}),R=g.handleSubmit,v=g.setError,x=g.formState.errors,C=g.reset,L=Object.keys(x),S=r.b.useState(!1),I=Object(i.a)(S,2),y=I[0],F=I[1],B=r.b.useCallback((function(){h&&y&&M(_.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:u.w})),F(!1)}),[M,h,y]),Y=r.b.useCallback((function(){C()}),[C]);return r.b.useEffect((function(){f&&Object.keys(f.data).map((function(e){var t=e.startsWith(u.Nb)?e.slice(u.fb):e;return v(t,{message:f.data[e]},{shouldFocus:!1}),null})),L.length>u.Sb&&B(),P&&Y()}),[L.length,P,Y,v,B,f]),Object(O.jsx)(s.b,Object(a.a)(Object(a.a)(Object(a.a)({},g),A),{},{children:Object(O.jsx)(l.a,{noValidate:!0,"aria-label":n,"aria-labelledby":d,name:m,tag:"form",type:j,onSubmit:R(p,(function(){return F(!y)})),children:N})}))}p.useContext=s.f,p.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var a=n(2),i=n(19),o=(n(11),n(41)),r=n(136),s=n(82),c=n(38),l=n(101),u=n(491),_=n.n(u),E={name:_.a.NAME_EXTERNAL_CONTAINER,type:_.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},d=n(492),b=n.n(d),O=n(10),T=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function m(e){var t=e,n=t["header-onBack"],u=t["header-title"],_=t.children,E=t.name,d=t.type,m=t.headerClassName,j=t.showLogo,p=Object(i.a)(t,T),N=Boolean(n||u),f=Object(o.c)(!u&&b.a.onlyRow,m),h=Object(o.c)(j&&b.a.step1Logo),P=Object(o.c)(j&&b.a.hasLogo);return Object(O.jsxs)(l.a,{children:[j&&Object(O.jsx)("div",{className:h,children:Object(O.jsx)(r.a,{alt:"logo",uuid:"logo150Login"})}),Object(O.jsx)(o.a,Object(a.a)(Object(a.a)({name:E,tag:"article",type:d},p),{},{children:Object(O.jsxs)("article",{className:P,children:[N&&Object(O.jsxs)("header",{className:f,children:[n&&Object(O.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),u&&Object(O.jsx)(c.b,{tag:"h5",uuid:u})]}),_]})}))]})}m.defaultProps=E},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},503:function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var a=n(272),i=n(2),o=n(16),r=n(19),s=n(11),c=n(50),l=n(41),u=n(488),_=n(516),E=n.n(_),d=n(10),b=["id","name","methods","options","defaultOption","onSelectOption"],O=E.a.NAME_INPUT_SELECT,T=E.a.TYPE_INPUT_SELECT,m=s.b.memo((function(e){var t,n=e.id,a=e.name,u=e.methods,_=e.options,E=e.defaultOption,m=e.onSelectOption,j=Object(r.a)(e,b),p=u.register,N=u.formState,f=u.setValue,h=u.watch,P=N.errors,A="".concat(a),M=s.b.useState(E),g=Object(o.a)(M,2),R=g[0],v=g[1];h(A);var x=s.b.useRef(null),C=P[a];return s.b.useEffect((function(){null!==E&&void 0!==E&&E.value&&f(A,null===E||void 0===E?void 0:E.value,{shouldValidate:!0})}),[null===E||void 0===E?void 0:E.value,A,f]),s.b.useEffect((function(){x.current&&x.current.blur()}),[C]),s.b.useEffect((function(){R||v(E)}),[E,R]),Object(d.jsx)(l.a,{name:O,type:T,children:Object(d.jsx)(c.SelectField,Object(i.a)(Object(i.a)(Object(i.a)({defaultOption:R,id:n||a,options:_},p(A)),C&&{error:null===(t=C.message)||void 0===t?void 0:t.toString()}),{},{ref:x,onSelectOption:function(e){f(A,e.value,{shouldValidate:!0}),m&&m(e)}},j))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function j(e){var t=u.a.useContext(),n=e,o=Object.assign({},(Object(a.a)(n),n));return Object(d.jsx)(m,Object(i.a)({methods:t},o))}},516:function(e,t,n){e.exports={NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=155.1742f0b7.chunk.js.map