(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[176],{488:function(t,e,a){"use strict";a.d(e,"a",(function(){return F}));var n=a(2),r=a(16),i=a(19),c=a(11),o=a(502),s=a(505),u=a(41),b=a(6),m=a(79),l=a(8),O=a(493),f=a.n(O),d=a(10),j=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],R=f.a.NAME_FORM,T=f.a.TYPE_FORM;function F(t){var e=t,a=e.ariaLabel,O=e.ariaLabelledby,f=e.schema,F=e.onSubmit,M=e.children,E=e.warnings,p=e.isRequiredToast,A=e.isResetForm,x=Object(i.a)(e,j),_=Object(l.b)(),h=Object(o.e)({resolver:Object(s.a)(f)}),y=h.handleSubmit,S=h.setError,g=h.formState.errors,N=h.reset,v=Object.keys(g),k=c.b.useState(!1),D=Object(r.a)(k,2),w=D[0],P=D[1],U=c.b.useCallback((function(){p&&w&&_(m.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:b.w})),P(!1)}),[_,p,w]),Y=c.b.useCallback((function(){N()}),[N]);return c.b.useEffect((function(){E&&Object.keys(E.data).map((function(t){var e=t.startsWith(b.Nb)?t.slice(b.fb):t;return S(e,{message:E.data[t]},{shouldFocus:!1}),null})),v.length>b.Sb&&U(),A&&Y()}),[v.length,A,Y,S,U,E]),Object(d.jsx)(o.b,Object(n.a)(Object(n.a)(Object(n.a)({},h),x),{},{children:Object(d.jsx)(u.a,{noValidate:!0,"aria-label":a,"aria-labelledby":O,name:R,tag:"form",type:T,onSubmit:y(F,(function(){return P(!w)})),children:M})}))}F.useContext=o.f,F.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},493:function(t,e,a){t.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},500:function(t,e,a){"use strict";a.d(e,"a",(function(){return R}));var n=a(2),r=a(19),i=(a(11),a(41)),c=a(50),o=(a(536),a(6)),s=a(38),u=a(537),b=a.n(u),m=a(10),l=["amount","coverSymbol","isMasked"],O=3,f=b.a.NAME_AMOUNT_FORMATTER,d=b.a.TYPE_AMOUNT_FORMATTER,j={coverSymbol:o.s,currency:o.b,isMasked:!1};function R(t){var e=t,a=e.amount,u=e.coverSymbol,b=e.isMasked,j=Object(r.a)(e,l),R=Boolean(!a)&&a!==o.Sb,T=!R&&b,F=!R&&!b,M=u||o.s,E=" ".concat(M.repeat(O)),p="".concat(j.currency," ").concat(E," ");return Object(m.jsxs)(i.a,{name:f,type:d,children:[R&&Object(m.jsx)(s.b,{tag:"span",uuid:"spa.notAvailable.txt"}),T&&Object(m.jsx)(s.b,{className:j.className,children:p}),F&&Object(m.jsx)(c.FormattedAmount,Object(n.a)({amount:a},j))]})}R.defaultProps=j},519:function(t,e,a){"use strict";a.d(e,"a",(function(){return c}));var n=a(2),r=a(6),i={locales:r.X.ES_AR,currencySymbol:r.b,minimumFractionDigits:r.Sb,maximumFractionDigits:r.Jb,suffix:r.D};function c(t,e){var a=Object(n.a)(Object(n.a)({},i),e),c=a.locales,o=a.currencySymbol,s=a.minimumFractionDigits,u=a.maximumFractionDigits,b=a.options,m=a.suffix,l=Object(n.a)({minimumFractionDigits:s,maximumFractionDigits:u},b),O=new Intl.NumberFormat(c,l);return(t||t===r.Sb)&&O?"".concat(o,"\xa0").concat(O.format(t)).concat(m):r.D}},536:function(t,e,a){t.exports={NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element"}},537:function(t,e,a){t.exports={NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=176.f58222d6.chunk.js.map