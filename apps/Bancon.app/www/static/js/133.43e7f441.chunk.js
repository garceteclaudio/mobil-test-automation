(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[133,199,309],{336:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return P}));var n=a(11),r=a(38),o=a(82),i=a(489),s=a(488),c=a(507),E=a(187),d=a(39),u=a(150),l=a(149),O=a(8),m=a(506),T=a(147),_=a(431),b=a.n(_),j=a(10);function P(){var e=Object(O.b)(),t=Object(r.c)().textGet,a=t({uuid:"spa.generic.field.error.required"}),_=t({uuid:"spa.onboarding.ddjj.form.radio.yes"}),P=t({uuid:"spa.onboarding.ddjj.form.radio.no"}),R=Object(O.c)(u.d.isPep)?_:P,h=Object(O.c)(T.c.exchangeToken),N=d.e.object({isPEP:Object(E.d)(d.e.string.required(),a)}),f=n.b.useCallback((function(){e(l.a.cleanPersonalData())}),[e]);return Object(j.jsx)(i.a,{"header-onBack":f,children:Object(j.jsx)("section",{children:Object(j.jsxs)(s.a,{schema:N,onSubmit:function(t){if(!h)return;var a=t.isPEP===_;e(u.c.updateStatus({exchangeToken:h,status:a?u.a.PEP_YES:u.a.PEP_NO})),e(u.b.setIsPep(a))},children:[Object(j.jsxs)("header",{children:[Object(j.jsx)(r.b,{tag:"h1",uuid:"spa.onboarding.ddjj.pep.title"}),Object(j.jsx)(r.b,{tag:"h2",uuid:"spa.onboarding.ddjj.pep.step1"})]}),Object(j.jsx)(r.b,{tag:"span",uuid:"spa.onboarding.ddjj.pep.label"}),Object(j.jsxs)(m.a,{name:"isPEP",value:R,children:[Object(j.jsx)(c.a,{id:"isPEP-".concat(_),label:_,name:"isPEP",value:_}),Object(j.jsx)(c.a,{id:"isPEP-".concat(P),label:P,name:"isPEP",value:P})]}),Object(j.jsx)("div",{className:b.a.infoContainer,children:Object(j.jsx)(r.b,{tag:"p",uuid:"spa.onboarding.ddjj.pep.info"})}),Object(j.jsx)(o.a,{label:{uuid:"spa.onboarding.ddjj.form.continue"},type:"submit"})]})})})}},431:function(e,t,a){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",infoContainer:"_rules_infoContainer__NsT2B",formContainer:"_rules_formContainer__3oZ9K",title:"_rules_title__13-ed",importantText:"_rules_importantText__1NiIU",downloadText:"_rules_downloadText__3FDkn"}},488:function(e,t,a){"use strict";a.d(t,"a",(function(){return P}));var n=a(2),r=a(16),o=a(19),i=a(11),s=a(502),c=a(505),E=a(41),d=a(6),u=a(79),l=a(8),O=a(493),m=a.n(O),T=a(10),_=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],b=m.a.NAME_FORM,j=m.a.TYPE_FORM;function P(e){var t=e,a=t.ariaLabel,O=t.ariaLabelledby,m=t.schema,P=t.onSubmit,R=t.children,h=t.warnings,N=t.isRequiredToast,f=t.isResetForm,M=Object(o.a)(t,_),A=Object(l.b)(),p=Object(s.e)({resolver:Object(c.a)(m)}),x=p.handleSubmit,g=p.setError,L=p.formState.errors,C=p.reset,I=Object.keys(L),F=i.b.useState(!1),v=Object(r.a)(F,2),S=v[0],Y=v[1],y=i.b.useCallback((function(){N&&S&&A(u.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:d.w})),Y(!1)}),[A,N,S]),U=i.b.useCallback((function(){C()}),[C]);return i.b.useEffect((function(){h&&Object.keys(h.data).map((function(e){var t=e.startsWith(d.Nb)?e.slice(d.fb):e;return g(t,{message:h.data[e]},{shouldFocus:!1}),null})),I.length>d.Sb&&y(),f&&U()}),[I.length,f,U,g,y,h]),Object(T.jsx)(s.b,Object(n.a)(Object(n.a)(Object(n.a)({},p),M),{},{children:Object(T.jsx)(E.a,{noValidate:!0,"aria-label":a,"aria-labelledby":O,name:b,tag:"form",type:j,onSubmit:x(P,(function(){return Y(!S)})),children:R})}))}P.useContext=s.f,P.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var n=a(2),r=a(19),o=(a(11),a(41)),i=a(136),s=a(82),c=a(38),E=a(101),d=a(491),u=a.n(d),l={name:u.a.NAME_EXTERNAL_CONTAINER,type:u.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},O=a(492),m=a.n(O),T=a(10),_=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function b(e){var t=e,a=t["header-onBack"],d=t["header-title"],u=t.children,l=t.name,O=t.type,b=t.headerClassName,j=t.showLogo,P=Object(r.a)(t,_),R=Boolean(a||d),h=Object(o.c)(!d&&m.a.onlyRow,b),N=Object(o.c)(j&&m.a.step1Logo),f=Object(o.c)(j&&m.a.hasLogo);return Object(T.jsxs)(E.a,{children:[j&&Object(T.jsx)("div",{className:N,children:Object(T.jsx)(i.a,{alt:"logo",uuid:"logo150Login"})}),Object(T.jsx)(o.a,Object(n.a)(Object(n.a)({name:l,tag:"article",type:O},P),{},{children:Object(T.jsxs)("article",{className:f,children:[R&&Object(T.jsxs)("header",{className:h,children:[a&&Object(T.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:a}),d&&Object(T.jsx)(c.b,{tag:"h5",uuid:d})]}),u]})}))]})}b.defaultProps=l},491:function(e,t,a){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,a){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},506:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var n=a(2),r=a(19),o=a(11),i=a(50),s=a(41),c=a(488),E=a(509),d=a.n(E),u=a(10),l=["id","name","children","methods","value","onChange"],O=d.a.NAME_RADIO_GROUP,m=d.a.TYPE_RADIO_GROUP,T={id:O},_=o.b.memo((function(e){var t=e.id,a=e.name,c=e.children,E=e.methods,d=e.value,T=e.onChange,_=Object(r.a)(e,l),b=E.formState,j=E.setValue,P=b.errors[a];return o.b.useEffect((function(){d&&j(a,d,{shouldValidate:!0})}),[d,a,j]),Object(u.jsx)(s.a,{name:O,type:m,children:Object(u.jsx)(i.RadioGroup,Object(n.a)(Object(n.a)(Object(n.a)({id:t,name:a,value:d,onChange:function(e){j(a,e.target.value),T&&T(e)}},P&&{error:String(P.message)}),_),{},{children:c}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function b(e){var t=c.a.useContext();return Object(u.jsx)(_,Object(n.a)({methods:t},e))}b.defaultProps=T},507:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var n=a(2),r=a(19),o=a(11),i=a(50),s=a(41),c=a(488),E=a(510),d=a.n(E),u=(a(511),a(10)),l=["id","name","methods","onChange"],O=d.a.NAME_INPUT_RADIO,m=d.a.TYPE_INPUT_RADIO,T={id:O},_=o.b.memo((function(e){var t=e.id,a=e.name,o=e.methods,c=e.onChange,E=Object(r.a)(e,l),d=o.register,T=o.formState,_=o.clearErrors,b=T.errors,j="".concat(a),P=b[a];return Object(u.jsx)(s.a,{name:O,type:m,children:Object(u.jsx)(i.Radio,Object(n.a)(Object(n.a)(Object(n.a)({id:t},P&&{error:String(P.message)}),d(j)),{},{name:a,onChange:function(e){c&&c(e),_([j])}},E))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function b(e){var t=c.a.useContext();return Object(u.jsx)(_,Object(n.a)({methods:t},e))}b.defaultProps=T},509:function(e,t,a){e.exports={NAME_RADIO_GROUP:"RadioGroup",TYPE_RADIO_GROUP:"Element"}},510:function(e,t,a){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element"}},511:function(e,t,a){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=133.43e7f441.chunk.js.map