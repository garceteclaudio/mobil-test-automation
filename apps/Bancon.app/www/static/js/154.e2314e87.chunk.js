(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[154,199,311],{357:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return P}));var a=n(0),r=n(2),i=n(5),o=n(11),s=n(39),l=n(8),c=n(149),u=n(187),_=n(270),E=n(488),b=n(489),d=n(38),T=n(82),O=n(147),m=n(503),j=n(6),N=n(150),p=n(428),h=n.n(p),f=n(10);function P(){var e=Object(d.c)().textGet,t=Object(l.b)(),n=Object(l.c)(c.c.fetching),p=Object(l.c)(c.c.warning),P=Object(l.c)(O.c.exchangeToken),M=Object(l.c)(c.c.getRenaperData),A=null===M||void 0===M?void 0:M.names,R=null===M||void 0===M?void 0:M.countryBirth,g=Object(l.c)(c.c.countriesOptions),x=Object(l.c)(c.c.economicActivitiesOptions),C=Object(l.c)(c.c.maritalStatusOptions),L=e({uuid:"spa.generic.field.error.required"}),v=e({uuid:"spa.onboarding.step7.country.label"}),S=e({uuid:"spa.onboarding.step7.civilstatus.label"}),I=e({uuid:"spa.onboarding.step7.activity.label"}),y=s.e.object({countryBirth:Object(u.d)(s.e.string.required(),L),activity:Object(u.d)(s.e.string.required(),L),maritalStatus:Object(u.d)(s.e.string.required(),L)});if(o.b.useEffect((function(){P&&t(c.b.getPersonalData({exchangeToken:P}))}),[t,P]),n)return Object(f.jsx)(_.a,{});var F=void 0;return R&&(F=g.find((function(e){if(e.value===R)return e}))),Object(f.jsx)(b.a,{"header-onBack":function(){t(c.a.cleanRenaper())},"header-title":"spa.onboarding.step7.title",children:Object(f.jsx)("section",{children:Object(f.jsxs)(E.a,{schema:y,warnings:p,onSubmit:function(e){return B.apply(this,arguments)},children:[Object(f.jsxs)(d.b,{className:h.a.title,tag:"h6",children:[Object(f.jsx)("strong",{children:"".concat(A," ")}),Object(f.jsx)(d.b,{tag:"span",uuid:"spa.onboarding.step7.text1"})]}),Object(f.jsx)(d.b,{className:h.a.subtitle,uuid:"spa.onboarding.step7.text2"}),Object(f.jsxs)("div",{className:h.a.inputSelectContainer,children:[Object(f.jsx)(m.a,{defaultOption:F,label:v,name:"countryBirth",options:g}),Object(f.jsx)(m.a,{label:S,name:"maritalStatus",options:C}),Object(f.jsx)(m.a,{label:I,name:"activity",options:x})]}),Object(f.jsx)(T.a,{label:{uuid:"spa.form.continue"},loading:n,type:"submit"})]})})});function B(){return(B=Object(i.a)(Object(a.a)().mark((function e(n){return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.countryBirth===j.Ob&&t(N.b.setRFCountry({RFCountry:n.countryBirth})),e.next=3,t(c.b.sendPersonalData(Object(r.a)(Object(r.a)({exchangeToken:P},n),{},{occupation:j.D})));case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},428:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",presentation:"_rules_presentation__2rnDT",image:"_rules_image__2dV7m",containerText:"_rules_containerText__pu48C",title:"_rules_title__3WK5D",text:"_rules_text__3khoq",nextButton:"_rules_nextButton__3nv4A",skipButton:"_rules_skipButton__6WOgG",finishButton:"_rules_finishButton__VsgGK",subtitle:"_rules_subtitle__bTvVh",inputSelectContainer:"_rules_inputSelectContainer__2j7Df",submitButton:"_rules_submitButton__3FaKR",alert:"_rules_alert__laL5T",alertLottie:"_rules_alertLottie__2sgW7",termsAndConditions:"_rules_termsAndConditions__cNiMg",validateTitle:"_rules_validateTitle__2Nx1p",emailValue:"_rules_emailValue__yLDPW",noteEmail:"_rules_noteEmail__4AmC9",subtitleEmail:"_rules_subtitleEmail__2J0wM",inputContainerEmail:"_rules_inputContainerEmail__2O1ou",resendCode:"_rules_resendCode__lH6Jj",inputContainerPhone:"_rules_inputContainerPhone__1gKy1",securitySealContainer:"_rules_securitySealContainer__1LU5g",onboardingWelcome:"_rules_onboardingWelcome__ijVs1",downloadPrincipal:"_rules_downloadPrincipal__2thE8",logosContainer:"_rules_logosContainer__2uaXe"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return N}));var a=n(2),r=n(16),i=n(19),o=n(11),s=n(502),l=n(505),c=n(41),u=n(6),_=n(79),E=n(8),b=n(493),d=n.n(b),T=n(10),O=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],m=d.a.NAME_FORM,j=d.a.TYPE_FORM;function N(e){var t=e,n=t.ariaLabel,b=t.ariaLabelledby,d=t.schema,N=t.onSubmit,p=t.children,h=t.warnings,f=t.isRequiredToast,P=t.isResetForm,M=Object(i.a)(t,O),A=Object(E.b)(),R=Object(s.e)({resolver:Object(l.a)(d)}),g=R.handleSubmit,x=R.setError,C=R.formState.errors,L=R.reset,v=Object.keys(C),S=o.b.useState(!1),I=Object(r.a)(S,2),y=I[0],F=I[1],B=o.b.useCallback((function(){f&&y&&A(_.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:u.w})),F(!1)}),[A,f,y]),Y=o.b.useCallback((function(){L()}),[L]);return o.b.useEffect((function(){h&&Object.keys(h.data).map((function(e){var t=e.startsWith(u.Nb)?e.slice(u.fb):e;return x(t,{message:h.data[e]},{shouldFocus:!1}),null})),v.length>u.Sb&&B(),P&&Y()}),[v.length,P,Y,x,B,h]),Object(T.jsx)(s.b,Object(a.a)(Object(a.a)(Object(a.a)({},R),M),{},{children:Object(T.jsx)(c.a,{noValidate:!0,"aria-label":n,"aria-labelledby":b,name:m,tag:"form",type:j,onSubmit:g(N,(function(){return F(!y)})),children:p})}))}N.useContext=s.f,N.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var a=n(2),r=n(19),i=(n(11),n(41)),o=n(136),s=n(82),l=n(38),c=n(101),u=n(491),_=n.n(u),E={name:_.a.NAME_EXTERNAL_CONTAINER,type:_.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},b=n(492),d=n.n(b),T=n(10),O=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function m(e){var t=e,n=t["header-onBack"],u=t["header-title"],_=t.children,E=t.name,b=t.type,m=t.headerClassName,j=t.showLogo,N=Object(r.a)(t,O),p=Boolean(n||u),h=Object(i.c)(!u&&d.a.onlyRow,m),f=Object(i.c)(j&&d.a.step1Logo),P=Object(i.c)(j&&d.a.hasLogo);return Object(T.jsxs)(c.a,{children:[j&&Object(T.jsx)("div",{className:f,children:Object(T.jsx)(o.a,{alt:"logo",uuid:"logo150Login"})}),Object(T.jsx)(i.a,Object(a.a)(Object(a.a)({name:E,tag:"article",type:b},N),{},{children:Object(T.jsxs)("article",{className:P,children:[p&&Object(T.jsxs)("header",{className:h,children:[n&&Object(T.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),u&&Object(T.jsx)(l.b,{tag:"h5",uuid:u})]}),_]})}))]})}m.defaultProps=E},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},503:function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var a=n(272),r=n(2),i=n(16),o=n(19),s=n(11),l=n(50),c=n(41),u=n(488),_=n(516),E=n.n(_),b=n(10),d=["id","name","methods","options","defaultOption","onSelectOption"],T=E.a.NAME_INPUT_SELECT,O=E.a.TYPE_INPUT_SELECT,m=s.b.memo((function(e){var t,n=e.id,a=e.name,u=e.methods,_=e.options,E=e.defaultOption,m=e.onSelectOption,j=Object(o.a)(e,d),N=u.register,p=u.formState,h=u.setValue,f=u.watch,P=p.errors,M="".concat(a),A=s.b.useState(E),R=Object(i.a)(A,2),g=R[0],x=R[1];f(M);var C=s.b.useRef(null),L=P[a];return s.b.useEffect((function(){null!==E&&void 0!==E&&E.value&&h(M,null===E||void 0===E?void 0:E.value,{shouldValidate:!0})}),[null===E||void 0===E?void 0:E.value,M,h]),s.b.useEffect((function(){C.current&&C.current.blur()}),[L]),s.b.useEffect((function(){g||x(E)}),[E,g]),Object(b.jsx)(c.a,{name:T,type:O,children:Object(b.jsx)(l.SelectField,Object(r.a)(Object(r.a)(Object(r.a)({defaultOption:g,id:n||a,options:_},N(M)),L&&{error:null===(t=L.message)||void 0===t?void 0:t.toString()}),{},{ref:C,onSelectOption:function(e){h(M,e.value,{shouldValidate:!0}),m&&m(e)}},j))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function j(e){var t=u.a.useContext(),n=e,i=Object.assign({},(Object(a.a)(n),n));return Object(b.jsx)(m,Object(r.a)({methods:t},i))}},516:function(e,t,n){e.exports={NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=154.e2314e87.chunk.js.map