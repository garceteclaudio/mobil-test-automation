(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[258],{32:function(e,t,r){"use strict";r.d(t,"a",(function(){return v}));var n=r(19),a=r(0),c=r(2),u=r(5),s=r(1),b=r(45),o=r(53),i=r(14),j=r(17),O=r(6),p=r(8),f=r(81),k=r(43),d=["accessToken"],l=["isVUEnabled","validationType","deviceModel","accessToken","url","timeout"],x=["accessToken"],v=Object(s.c)(i.b,{changePasswordPre:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(n=t.rejectWithValue,e){r.next=3;break}return r.abrupt("return",null);case 3:return r.next=5,Object(j.c)(Object(c.a)({},e));case 5:if(u=r.sent){r.next=8;break}return r.abrupt("return",null);case 8:if(!Object(j.B)(u)){r.next=10;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},u),j.o[u.code])));case 10:return r.abrupt("return",u);case 11:case"end":return r.stop()}}),r)})))()},activateKeyPhone:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s,b;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,s=e.validateCode,r.next=4,Object(j.a)({accessToken:u,validateCode:s});case 4:if(b=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(b)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},b),j.o[b.code])));case 9:return r.abrupt("return",b);case 10:case"end":return r.stop()}}),r)})))()},listSecuritySeal:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(n=t.rejectWithValue,e){r.next=3;break}return r.abrupt("return",null);case 3:return r.next=5,Object(j.k)(Object(c.a)({},e));case 5:if(u=r.sent){r.next=8;break}return r.abrupt("return",null);case 8:if(!Object(j.B)(u)){r.next=10;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},u),j.o[u.code])));case 10:return r.abrupt("return",u);case 11:case"end":return r.stop()}}),r)})))()},changePassword:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(n=t.rejectWithValue,e){r.next=3;break}return r.abrupt("return",null);case 3:return r.next=5,Object(j.b)(Object(c.a)({},e));case 5:if(u=r.sent){r.next=8;break}return r.abrupt("return",null);case 8:if(!Object(j.B)(u)){r.next=10;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},u),j.o[u.code])));case 10:return r.abrupt("return",u);case 11:case"end":return r.stop()}}),r)})))()},modifyUserDataPre:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,r.next=4,Object(j.m)({accessToken:u});case 4:if(s=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(s)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},s),j.o[s.code])));case 9:return r.abrupt("return",s);case 10:case"end":return r.stop()}}),r)})))()},hasKeyPhone:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,r.next=4,Object(j.f)({accessToken:u});case 4:if(s=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(s)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},s),j.o[s.code])));case 9:return r.abrupt("return",s);case 10:case"end":return r.stop()}}),r)})))()},unlinkOTP:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var u,s,o,i;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return u=t.rejectWithValue,s=e.accessToken,o=Object(n.a)(e,d),r.next=4,Object(j.u)(Object(c.a)({accessToken:s},o));case 4:if(i=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(i)){r.next=9;break}return r.abrupt("return",u(Object(c.a)(Object(c.a)({},i),j.o[i.code])));case 9:return r.next=11,Object(b.a)(O.T);case 11:return r.next=13,Object(b.a)(O.U);case 13:return r.abrupt("return",i);case 14:case"end":return r.stop()}}),r)})))()},linkOTP:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var u,s,i,k,d,x,v,h,T,w,m,V,g,W;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return u=t.rejectWithValue,s=e.isVUEnabled,i=e.validationType,k=e.deviceModel,d=e.accessToken,x=e.url,v=e.timeout,h=Object(n.a)(e,l),r.next=4,Object(j.i)(Object(c.a)({validationType:i,deviceModel:k,accessToken:d},h));case 4:if(T=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(T)){r.next=9;break}return r.abrupt("return",u(Object(c.a)(Object(c.a)({},T),j.o[T.code])));case 9:if(s&&p.a.dispatch(f.b.sendSecondFactorVu({deviceModel:k,exchangeToken:d,url:x,timeout:v})),w=T.data,m=w.seed,V=w.seedUser,g=w.linkedSofttokenUser,W=w.linkedDeviceModel,i!==j.j.OTPMOBILE||!m||!V){r.next=18;break}return r.next=14,Object(b.c)({key:O.T,val:m});case 14:return r.next=16,Object(b.c)({key:O.U,val:V});case 16:p.a.dispatch(o.a.setLinkedSoftTokenUser(g)),p.a.dispatch(o.a.setLinkedDeviceModel(W));case 18:return r.abrupt("return",T);case 19:case"end":return r.stop()}}),r)})))()},otpConfigurationPre:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s,i,f,d,l;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return u=t.rejectWithValue,s=e.linkedSoftTokenUser,i=e.accessToken,r.next=4,Object(j.n)({accessToken:i});case 4:if(f=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(f)){r.next=9;break}return r.abrupt("return",u(Object(c.a)(Object(c.a)({},f),j.o[f.code])));case 9:if(null!==(n=f.data)&&void 0!==n&&n.otpType){r.next=21;break}return r.next=12,Object(b.b)(O.U);case 12:if(d=r.sent,l=d.value||void 0,!s&&l){r.next=21;break}return r.next=17,Object(b.a)(O.T);case 17:return r.next=19,Object(b.a)(O.U);case 19:p.a.dispatch(o.a.cleanLinkedSoftTokenUser()),p.a.dispatch(k.a.cleanSeed());case 21:return r.abrupt("return",f);case 22:case"end":return r.stop()}}),r)})))()},getNotificationsConfiguration:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,r.next=4,Object(j.e)({accessToken:u});case 4:if(s=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(s)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},s),j.o[s.code])));case 9:return r.abrupt("return",s);case 10:case"end":return r.stop()}}),r)})))()},modifyNotificationsConfiguration:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var u,s,b,o;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return u=t.rejectWithValue,s=e.accessToken,b=Object(n.a)(e,x),r.next=4,Object(j.l)(Object(c.a)({accessToken:s},b));case 4:if(o=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(o)){r.next=9;break}return r.abrupt("return",u(Object(c.a)(Object(c.a)({},o),j.o[o.code])));case 9:return p.a.dispatch(v.getNotificationsConfiguration({accessToken:s})),r.abrupt("return",o);case 11:case"end":return r.stop()}}),r)})))()},hasSecureDevice:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,r.next=3,Object(j.g)(Object(c.a)({},e));case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(j.B)(u)){r.next=8;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},u),j.o[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()},sendValidationSMS:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,r.next=3,Object(j.t)(Object(c.a)({},e));case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(j.B)(u)){r.next=8;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},u),j.o[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()},validateSMS:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s,b,o;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,s=e.uuid,b=e.code,r.next=4,Object(j.z)({accessToken:u,code:b,uuid:s});case 4:if(o=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(o)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},o),j.o[o.code])));case 9:return r.abrupt("return",o);case 10:case"end":return r.stop()}}),r)})))()},updateMailActivity:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s,b;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,s=e.mail,r.next=4,Object(j.w)({accessToken:u,mail:s});case 4:if(b=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(b)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},b),j.o[b.code])));case 9:return r.abrupt("return",b);case 10:case"end":return r.stop()}}),r)})))()},updateLatestMailDateActivity:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s,b;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,s=e.mail,r.next=4,Object(j.v)({accessToken:u,mail:s});case 4:if(b=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(b)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},b),j.o[b.code])));case 9:return r.abrupt("return",b);case 10:case"end":return r.stop()}}),r)})))()},validateEmailToken:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s,b,o;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,s=e.mail,b=e.newCode,r.next=4,Object(j.y)({accessToken:u,mail:s,newCode:b});case 4:if(o=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(o)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},o),j.o[o.code])));case 9:return r.abrupt("return",o);case 10:case"end":return r.stop()}}),r)})))()},updateUserData:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,r.next=3,Object(j.x)(Object(c.a)({},e));case 3:if(u=r.sent){r.next=6;break}return r.abrupt("return",null);case 6:if(!Object(j.B)(u)){r.next=8;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},u),j.o[u.code])));case 8:return r.abrupt("return",u);case 9:case"end":return r.stop()}}),r)})))()},sendFrontDocument:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s,b,o,i,O,p,k,d;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,s=e.exchangeToken,b=e.documentData,o=e.documentToSave,i=e.url,O=e.timeout,r.next=4,Object(f.d)({url:i,timeout:O});case 4:return p=r.sent,k=p.fingerPrintDeviceInfo,r.next=8,Object(j.q)({accessToken:u,_exchangeToken:s,_documentData:b,_documentToSave:o,_deviceFingerprintData:k});case 8:if(d=r.sent){r.next=11;break}return r.abrupt("return",null);case 11:if(!Object(j.A)(d)){r.next=13;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},d),j.h[d.code])));case 13:return r.abrupt("return",d);case 14:case"end":return r.stop()}}),r)})))()},sendBackDocument:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s,b,o,i;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,s=e.exchangeToken,b=e.documentData,o=e.documentToSave,r.next=4,Object(j.p)({accessToken:u,_exchangeToken:s,_documentData:b,_documentToSave:o,_deviceFingerprintData:O.D});case 4:if(i=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.A)(i)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},i),j.h[i.code])));case 9:return r.abrupt("return",i);case 10:case"end":return r.stop()}}),r)})))()},sendSelfie:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s,b,o,i;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,s=e.exchangeToken,b=e.imagesToSave,o=e.fingerPrintInfo,r.next=4,Object(j.s)({accessToken:u,_exchangeToken:s,_imagesToSave:b,fingerPrintInfo:o});case 4:if(i=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.A)(i)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},i),j.h[i.code])));case 9:return r.abrupt("return",i);case 10:case"end":return r.stop()}}),r)})))()},checkEmailNeedsRefreshed:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,r.next=4,Object(j.d)({accessToken:u});case 4:if(s=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(s)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},s),j.o[s.code])));case 9:return r.abrupt("return",s);case 10:case"end":return r.stop()}}),r)})))()},sendOtpOverSms:function(e,t){return Object(u.a)(Object(a.a)().mark((function r(){var n,u,s;return Object(a.a)().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=t.rejectWithValue,u=e.accessToken,r.next=4,Object(j.r)({accessToken:u});case 4:if(s=r.sent){r.next=7;break}return r.abrupt("return",null);case 7:if(!Object(j.B)(s)){r.next=9;break}return r.abrupt("return",n(Object(c.a)(Object(c.a)({},s),j.o[s.code])));case 9:return r.abrupt("return",s);case 10:case"end":return r.stop()}}),r)})))()}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=main~f052255e.1b9a632f.chunk.js.map