(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[87,286],{210:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return M}));var r=a(0),n=a(2),i=a(5),o=a(16),c=a(11),s=a(39),d=a(187),u=a(6),l=a(8),b=a(33),j=a(117),m=a(79),O=a(50),f=a(488),h=a(515),p=a(512),_=a(82),x=a(490),C=a(38),E=a(270),v=a(497),N=a(51),g=a(465),T=a.n(g),P=a(10);function M(){var e=Object(N.qb)(),t=Object(l.b)(),a=Object(C.c)().textGet,g=c.b.useState(!1),M=Object(o.a)(g,2),S=M[0],k=M[1],A=c.b.useState(!1),R=Object(o.a)(A,2),y=R[0],I=R[1],B=c.b.useState(!1),F=Object(o.a)(B,2),U=F[0],V=F[1],H=Object(N.sb)(N.n),w=Object(N.sb)(N.v),L=Object(l.c)(b.e.token),Y=Object(l.c)(j.c.fetching),D=Object(l.c)(j.c.warning),X=Object(l.c)(j.c.userFirstName),K=Object(l.c)(j.c.userLastName),q=Object(l.c)(j.c.userMail),z=Object(l.c)(j.c.userPhoneNumber),G=Object(l.c)(j.c.fetchingGenerateCode),Z=Object(l.c)(j.c.verificationID),J=Object(l.c)(j.c.isVerificationCodeValid),Q=Object(l.c)(j.c.hasSentVerificationCode),W="#".repeat(u.Bb),$=a({uuid:"spa.modo.register.error.terms.and.conditions"}),ee=a({uuid:"spa.modo.register.verification.code.label"}),te=a({uuid:"spa.generic.field.error.required"}),ae=a({uuid:"spa.modo.register.verification.code.error.max.length"}),re=s.e.object({termConditions:Object(d.d)(s.e.boolean.equals(!0),$)}),ne=s.e.object({verificationCode:Object(s.c)((function(e){return e?Object(d.d)(Object(d.q)(),ae):Object(d.d)(s.e.string(),te)}))}),ie=c.b.useCallback((function(){t(m.a.set({kind:"ERROR",text:{uuid:"spa.modo.register.error.code.validation"},duration:u.v}))}),[t]);return c.b.useEffect((function(){J||ie()}),[J,ie]),c.b.useEffect((function(){J&&Q&&(t(j.a.cleanRegister()),e(w))}),[t,Q,J,w,e]),c.b.useEffect((function(){L&&t(j.b.getOnboardingPersonalData({token:L}))}),[t,L]),Y&&!G?Object(P.jsx)(E.a,{}):Object(P.jsxs)(v.a,{withFooter:!0,className:T.a.register,"header-onBack":ue,children:[Object(P.jsx)("header",{children:Object(P.jsx)(C.b,{tag:"h1",uuid:"spa.modo.register.title"})}),Object(P.jsxs)("section",{children:[Object(P.jsxs)("ul",{className:T.a.personalData,children:[Object(P.jsxs)("li",{children:[Object(P.jsx)(C.b,{uuid:"spa.modo.register.name"}),Object(P.jsx)(C.b,{children:X})]}),Object(P.jsxs)("li",{children:[Object(P.jsx)(C.b,{uuid:"spa.modo.register.last.name"}),Object(P.jsx)(C.b,{children:K})]}),Object(P.jsxs)("li",{children:[Object(P.jsx)(C.b,{uuid:"spa.modo.register.mail"}),Object(P.jsx)(C.b,{children:q})]}),Object(P.jsxs)("li",{children:[Object(P.jsx)(C.b,{uuid:"spa.modo.register.phone.number"}),Object(P.jsx)(C.b,{children:z})]})]}),Object(P.jsxs)(f.a,{schema:re,warnings:D,onSubmit:function(e){var t=e.termConditions;ce(),V(t)},children:[Object(P.jsx)(h.a,{label:Object(P.jsxs)("div",{className:T.a.termsAndConditions,children:[Object(P.jsx)(C.b,{uuid:"spa.modo.register.accept"}),Object(P.jsx)(_.a,{kind:"plain",label:{uuid:"spa.modo.register.accept.terms.and.conditions"},type:"button",onClick:oe})]}),name:"termConditions"}),Object(P.jsx)(O.Alert,{variant:"info",children:Object(P.jsxs)("div",{className:T.a.alert,children:[Object(P.jsx)(O.Icon,{className:T.a.alertIcon,name:"info",stroke:"info"}),Object(P.jsx)(C.b,{uuid:"spa.modo.register.modify.personal.data.info"})]})}),Object(P.jsxs)("footer",{children:[Object(P.jsx)(_.a,{label:{uuid:"spa.form.continue"},type:"submit"}),Object(P.jsx)(_.a,{label:{uuid:"spa.form.cancel"},variant:"outlined",onClick:ue})]})]}),Object(P.jsxs)(x.a,{open:S,onClose:oe,children:[Object(P.jsx)(x.a.Body,{children:Object(P.jsx)(C.b,{className:T.a.termsText,uuid:"spa.modo.register.terms.and.conditions"})}),Object(P.jsx)(x.a.Footer,{children:Object(P.jsx)(_.a,{label:{uuid:"spa.form.accept"},type:"button",onClick:oe})})]}),Object(P.jsx)(x.a,{open:y,title:"spa.modo.register.verification.code.title",onClose:ce,children:Object(P.jsxs)(f.a,{schema:ne,warnings:D,onSubmit:function(e){return de.apply(this,arguments)},children:[Object(P.jsx)(x.a.Body,{children:Object(P.jsxs)("div",{className:T.a.verificationCode,children:[Object(P.jsx)(C.b,{className:T.a.verificationCodeSubtitle,uuid:"spa.modo.register.verification.code.subtitle"}),Object(P.jsx)(_.a,{label:{uuid:"spa.modo.register.send.code"},size:"small",onClick:function(){return se.apply(this,arguments)}}),G&&Object(P.jsx)("div",{className:T.a.verificationCodeLottie,children:Object(P.jsx)(O.Lottie,{loop:!0,play:!0,name:"spinner",size:"medium"})}),Z&&Object(P.jsx)(C.b,{className:T.a.codeSent,uuid:"spa.modo.register.sent.code"}),Object(P.jsx)(p.a,{allowLeadingZeros:!0,disabled:Boolean(!Z)||G,format:W,label:ee,name:"verificationCode",valueAsNumber:!1})]})}),Object(P.jsx)(x.a.Footer,{children:Object(P.jsxs)("footer",{className:T.a.verificationCodeFooter,children:[Object(P.jsx)(_.a,{disabled:Boolean(!Z)||G,label:{uuid:"spa.form.accept"},type:"submit"}),Object(P.jsx)(_.a,{label:{uuid:"spa.form.cancel"},type:"button",variant:"outlined",onClick:ce})]})})]})})]})]});function oe(){k(!S)}function ce(){I(!y)}function se(){return(se=Object(i.a)(Object(r.a)().mark((function e(){return Object(r.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(L){e.next=2;break}return e.abrupt("return");case 2:return e.next=4,t(j.b.generateVerificationCode(Object(n.a)({token:L,termsAndConditions:U},Boolean(Z)&&{verificationID:Z})));case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function de(){return(de=Object(i.a)(Object(r.a)().mark((function e(a){var n;return Object(r.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=a.verificationCode,L){e.next=3;break}return e.abrupt("return");case 3:return e.next=5,t(j.b.sendVerificationCode({token:L,verificationID:Z,verificationCode:String(n)}));case 5:return e.next=7,t(j.b.validateUser({token:L}));case 7:ce(),t(m.a.clean()),t(j.a.setHasSentVerificationCode());case 10:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function ue(){t(j.a.cleanRegister()),e(H)}}},465:function(e,t,a){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",register:"_rules_register__18evZ",personalData:"_rules_personalData__17RHO",termsText:"_rules_termsText__2SHvX",termsAndConditions:"_rules_termsAndConditions__2mZ7s",alert:"_rules_alert__1HykA",alertIcon:"_rules_alertIcon__1moyw",verificationCode:"_rules_verificationCode__OChca",verificationCodeSubtitle:"_rules_verificationCodeSubtitle__rKzVU",codeSent:"_rules_codeSent__3MEqG",verificationCodeLottie:"_rules_verificationCodeLottie__2g2t9",verificationCodeFooter:"_rules_verificationCodeFooter__1vO3D"}},512:function(e,t,a){"use strict";a.d(t,"a",(function(){return h}));var r=a(2),n=a(19),i=a(11),o=a(50),c=a(41),s=a(488),d=a(514),u=a.n(d),l=a(10),b=["id","name","methods","defaultValue","onChange","valueAsNumber"],j=u.a.NAME_INPUT_NUMBER,m=u.a.TYPE_INPUT_NUMBER,O={id:j,valueAsNumber:!0},f=i.b.memo((function(e){var t,a=e.id,s=e.name,d=e.methods,u=e.defaultValue,O=e.onChange,f=e.valueAsNumber,h=Object(n.a)(e,b),p=d.register,_=d.formState,x=d.getValues,C=d.setValue,E=d.clearErrors,v=_.errors,N="".concat(s),g=x()[N],T=v[s];return i.b.useEffect((function(){u&&C(N,u,{shouldValidate:!0}),u||C(N,void 0)}),[u,N,C]),Object(l.jsx)(c.a,{name:j,type:m,children:Object(l.jsx)(o.NumberField,Object(r.a)(Object(r.a)(Object(r.a)(Object(r.a)({},u&&{defaultValue:u}),{},{id:a||s},T&&{error:null===(t=T.message)||void 0===t?void 0:t.toString()}),p(N,{onChange:function(e){O&&O(e);E([N])},valueAsNumber:f})),{},{value:g},h))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function h(e){var t=s.a.useContext();return Object(l.jsx)(f,Object(r.a)({methods:t},e))}h.displayName=j,h.defaultProps=O},514:function(e,t,a){e.exports={NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element"}},515:function(e,t,a){"use strict";a.d(t,"a",(function(){return h}));var r=a(2),n=a(16),i=a(19),o=a(11),c=a(50),s=a(41),d=a(488),u=a(520),l=a.n(u),b=a(10),j=["id","name","methods","onChange","isChecked"],m=l.a.NAME_INPUT_CHECKBOX,O=l.a.TYPE_INPUT_CHECKBOX,f=o.b.memo((function(e){var t,a=e.id,d=e.name,u=e.methods,l=e.onChange,f=e.isChecked,h=Object(i.a)(e,j),p=o.b.useState(f),_=Object(n.a)(p,2),x=_[0],C=_[1],E=u.register,v=u.formState,N=u.setValue,g=u.clearErrors,T=v.errors,P="".concat(d);o.b.useEffect((function(){void 0!==f&&(C(f),N(P,f,{shouldValidate:!0}))}),[f,P,N]);var M=T[d];return Object(b.jsx)(s.a,{name:m,type:O,children:Object(b.jsx)(c.Checkbox,Object(r.a)(Object(r.a)(Object(r.a)({id:a||d},M&&{error:null===(t=M.message)||void 0===t?void 0:t.toString()}),E(P)),{},{isChecked:x,onChange:function(e){var t=!x;C(t),N(P,t),l&&l(e),g([P])}},h))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function h(e){var t=d.a.useContext();return Object(b.jsx)(f,Object(r.a)({methods:t},e))}h.displayName=m},520:function(e,t,a){e.exports={NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=87.c1132cc9.chunk.js.map