(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[225],{100:function(t,n,e){"use strict";e.d(n,"a",(function(){return a})),e.d(n,"b",(function(){return u})),e.d(n,"g",(function(){return o})),e.d(n,"h",(function(){return s})),e.d(n,"f",(function(){return f})),e.d(n,"d",(function(){return b})),e.d(n,"e",(function(){return d})),e.d(n,"c",(function(){return l}));var r=e(2),c=e(6),a=function(t){return t.SHORT="short",t.MEDIUM="medium",t.LARGE="large",t.FULL="full",t.TIME="time",t.DAY="day",t.MONTH="month",t}({}),u=function(t){return t.SHORT="short",t.MEDIUM="medium",t.LONG="long",t.FULL="full",t}({}),i={short:{year:"numeric",month:"2-digit",day:"2-digit"},medium:{year:"numeric",month:"2-digit",day:"2-digit",hour:"numeric",minute:"numeric"},large:{year:"numeric",month:"2-digit",day:"2-digit",hour:"numeric",minute:"numeric",second:"numeric"},full:{dateStyle:"full",timeStyle:"short"},time:{timeStyle:"short"},day:{year:"numeric",month:"long",day:"2-digit"},month:{month:"long"}};function o(t){var n="string"===typeof t?new Date(t):t;return n instanceof Date&&!Number.isNaN(n.getTime())}function s(t){return t&&t!==c.D?t.replace(/(\d+[/])(\d+[/])/,"$2$1"):c.D}function f(t){return new Date(t.split(c.t)[c.Sb])}function b(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=f(t),c=n.format||a.SHORT,u=n.formatterOptions||i[c];return l(e,Object(r.a)({formatterOptions:u},n))}function d(t,n){var e="string"===typeof t?f(t):t;return new Intl.DateTimeFormat(c.X.ES_AR,{dateStyle:"full",timeStyle:n}).format(e)}function l(t,n){var e=Object(r.a)({},n),u=e.formatterOptions,o=e.format,s=void 0===o?a.MEDIUM:o,f=e.defaultResult,b=void 0===f?c.D:f,d=e.lang,l=void 0===d?c.X.ES_AR:d,O=i[s],j=Object(r.a)(Object(r.a)({},O),u),p=new Intl.DateTimeFormat(l,j);return Number.isNaN(t.valueOf())?b:p.format(t)}},109:function(t,n,e){"use strict";e.d(n,"a",(function(){return i}));var r=e(0),c=e(5),a=e(36),u=e(182);function i(t){return o.apply(this,arguments)}function o(){return(o=Object(c.a)(Object(r.a)().mark((function t(n){var e,c,i,o,s,f,b,d;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.url,c=n.timeout,t.next=3,Object(a.g)();case 3:if(i=t.sent,o=i===a.b.CORDOVA_ANDROID||i===a.b.CORDOVA_IOS,s=i===a.b.BROWSER_DESKTOP||i===a.b.BROWSER_MOBILE,f=null,b="",d="",!s){t.next=14;break}return f=null,t.next=13,window.VUWebFingerprint.getFingerprintInfo(e,c);case 13:b=t.sent;case 14:if(!o){t.next=24;break}return t.next=17,Object(u.a)("0.0.1");case 17:return f=t.sent,t.next=20,Object(u.b)(!0);case 20:return b=t.sent,t.next=23,Object(u.c)();case 23:d=t.sent;case 24:return t.abrupt("return",{fingerPrintDeviceInfo:f,fingerprintHash:b,randomSeed:d});case 25:case"end":return t.stop()}}),t)})))).apply(this,arguments)}},145:function(t,n,e){"use strict";e.d(n,"a",(function(){return a}));var r=e(6),c=e(187);function a(t,n){var e=(t||"0").split("."),a=(n||"0").split(".");if(e.every(c.r)&&a.every(c.r)){for(var u=function(t,n){for(;t.length<n.length;)t.push("0");for(;n.length<t.length;)n.push("0");return{v1parts:t.map(Number),v2parts:n.map(Number)}}(e,a),i=u.v1parts,o=u.v2parts,s=r.Sb;s<i.length;++s){if(o.length===s)return!0;if(i[s]!==o[s])return i[s]>o[s]}return i.length===o.length}}},153:function(t,n,e){"use strict";e.d(n,"a",(function(){return l})),e.d(n,"c",(function(){return j})),e.d(n,"b",(function(){return d})),e.d(n,"d",(function(){return p}));var r=e(9),c="transactions",a={transactionsPendingCorporate:[],transactionsPendingCorporateMaxView:!1,transaction:void 0,cancelTransaction:void 0,fetching:!1,error:void 0},u=e(2),i=e(1),o=e(12),s=e(0),f=e(5),b=e(83),d=Object(i.c)(c,{getPendingTransactionsCorporate:function(t,n){return Object(f.a)(Object(s.a)().mark((function e(){var r,c,a;return Object(s.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=n.rejectWithValue,c=t.accessToken){e.next=4;break}return e.abrupt("return",null);case 4:return e.next=6,Object(b.b)({accessToken:c});case 6:if(a=e.sent){e.next=9;break}return e.abrupt("return",null);case 9:if(!Object(b.f)(a)){e.next=11;break}return e.abrupt("return",r(Object(u.a)(Object(u.a)({},a),b.d[a.code])));case 11:return e.abrupt("return",a);case 12:case"end":return e.stop()}}),e)})))()},readTransaction:function(t,n){return Object(f.a)(Object(s.a)().mark((function e(){var r,c,a,i;return Object(s.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=n.rejectWithValue,c=t.accessToken,a=t.idTransaction,c){e.next=4;break}return e.abrupt("return",null);case 4:return e.next=6,Object(b.c)({accessToken:c,idTransaction:a});case 6:if(i=e.sent){e.next=9;break}return e.abrupt("return",null);case 9:if(!Object(b.f)(i)){e.next=11;break}return e.abrupt("return",r(Object(u.a)(Object(u.a)({},i),b.d[i.code])));case 11:return e.abrupt("return",i);case 12:case"end":return e.stop()}}),e)})))()},cancelTransaction:function(t,n){return Object(f.a)(Object(s.a)().mark((function e(){var r,c,a,i;return Object(s.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=n.rejectWithValue,c=t.accessToken,a=t.idTransaction,c){e.next=4;break}return e.abrupt("return",null);case 4:return e.next=6,Object(b.a)({accessToken:c,idTransaction:a});case 6:if(i=e.sent){e.next=9;break}return e.abrupt("return",null);case 9:if(!Object(b.f)(i)){e.next=11;break}return e.abrupt("return",r(Object(u.a)(Object(u.a)({},i),b.d[i.code])));case 11:return e.abrupt("return",i);case 12:case"end":return e.stop()}}),e)})))()}}),l=Object(i.b)(c,["clean"]),O=Object(i.d)(a,(function(t){var n=t.addCase,e=t.addMatcher;n(l.clean,(function(){return Object(u.a)({},a)})),n(d.getPendingTransactionsCorporate.fulfilled,(function(t,n){var e=n.payload;t.fetching=!1,t.error=a.error,e&&(t.transactionsPendingCorporate=e.data.transactions,t.transactionsPendingCorporateMaxView=e.data.maxView)})),n(d.readTransaction.fulfilled,(function(t,n){var e=n.payload;t.fetching=!1,t.error=a.error,e&&(t.transaction=e.data.transaction)})),n(d.cancelTransaction.fulfilled,(function(t,n){var e=n.payload;t.fetching=!1,t.error=a.error,e&&(t.cancelTransaction=e.data.transaction)})),e((function(t){return Object(o.b)(t,c)}),(function(t){t.fetching=!0,t.error=a.error})),e((function(t){return Object(o.c)(t,c)}),(function(t,n){var e=n.payload;t.fetching=!1,t.error=e}))}));function j(t){return t[c]}j.transactionsPendingCorporate=Object(i.e)(j,(function(t){return t.transactionsPendingCorporate})),j.transactionsPendingCorporateMaxView=Object(i.e)(j,(function(t){return t.transactionsPendingCorporateMaxView})),j.transaction=Object(i.e)(j,(function(t){return t.transaction})),j.idTransactionStatus=Object(i.e)(j,(function(t){var n;return null===(n=t.transaction)||void 0===n?void 0:n.idTransactionStatus})),j.transactionsFetching=Object(i.e)(j,(function(t){return t.fetching})),j.error=Object(i.e)(j,(function(t){return t.error})),j.canceltransaction=Object(i.e)(j,(function(t){return t.cancelTransaction}));var p=Object(r.a)({},c,O)},187:function(t,n,e){"use strict";e.d(n,"s",(function(){return b})),e.d(n,"r",(function(){return O})),e.d(n,"h",(function(){return j})),e.d(n,"c",(function(){return p})),e.d(n,"b",(function(){return g})),e.d(n,"n",(function(){return v})),e.d(n,"g",(function(){return m})),e.d(n,"q",(function(){return h})),e.d(n,"e",(function(){return x})),e.d(n,"m",(function(){return S})),e.d(n,"p",(function(){return k})),e.d(n,"d",(function(){return w})),e.d(n,"j",(function(){return D})),e.d(n,"k",(function(){return T})),e.d(n,"o",(function(){return y})),e.d(n,"i",(function(){return C})),e.d(n,"f",(function(){return N})),e.d(n,"a",(function(){return R})),e.d(n,"l",(function(){return E}));var r=e(39),c=e(6),a=function(t,n){return n.test(t)},u=function(t){return/^\d{11}$/.test(t)},i=function(t){return/^\d{11}$/.test(t)},o=function(t){return/^\d{4}$/.test(t)},s=function(t){return/^\d{6}$/.test(t)},f=function(t){return/^\d{3}$/.test(t)},b=function(t,n){return new RegExp("^\\d{".concat(n,"}$")).test(t)},d=function(t,n){return new RegExp("^".concat(n,"$"),"g").test(t)},l=function(t){return!/\s/.test(t)};function O(t){return/^\d+$/.test(t)}function j(t){return Object(r.b)("email",(function(n){return a(String(n),t)}))}function p(){return Object(r.b)("cuit",(function(t){return u(String(t))}))}function g(){return Object(r.b)("cdi",(function(t){return i(String(t))}))}function v(t){var n=t.textErrorRequired,e=t.textErrorData;return Object(r.b)("pin",(function(t){return t?!!o(String(t))||e:n}))}function m(t){var n=t.textErrorRequired,e=t.textErrorData;return Object(r.b)("debitCardLastFourDigits",(function(t){return t?!!o(String(t))||e:n}))}function h(){return Object(r.b)("verificationCode",(function(t){return s(String(t))}))}function x(){return Object(r.b)("cvv",(function(t){return f(String(t))}))}function S(t){return Object(r.b)("otp",(function(n){return b(String(n),t)}))}function k(t){return Object(r.b)("user",(function(n){return d(String(n),t)}))}function w(t,n){return Object(r.b)("message",(function(e){return!!Object(r.d)(e,t)||n}))}function D(t,n,e){return Object(r.b)("message",(function(c){return!!(Object(r.d)(c,t)&&Number(c)>=n)||e}))}function T(t,n,e){return Object(r.b)("message",(function(c){return!!(Object(r.d)(c,t)&&Number(c)>n)||e}))}function y(t,n,e){return Object(r.b)("message",(function(c){return!!(Object(r.d)(c,t)&&Number(c)<=n)||e}))}function C(t,n,e,a,u){return Object(r.b)("message",(function(i){var o=String(i).replace(/\./g,c.D).replace(c.e,c.t),s=Number(n)?n:String(n).replace(/\./g,c.D).replace(c.e,c.t),f=Number(e)?e:String(e).replace(/\./g,c.D).replace(c.e,c.t);return Object(r.d)(i,t)&&Number(o)<Number(s)?a:!(Object(r.d)(i,t)&&Number(o)>Number(f))||u}))}function N(t,n,e){return Object(r.b)("message",(function(c){return!!(Object(r.d)(c,t)&&new Date(String(c))<=n)||e}))}function R(t,n){return Object(r.b)("message",(function(e){return!e||function(e){return!!Object(r.d)(e,t)||n}(e)}))}function E(){return Object(r.b)("hasSpaces",(function(t){return l(String(t))}))}},273:function(t,n,e){"use strict";e.d(n,"a",(function(){return c}));var r=e(6);function c(t){var n=Number(t.slice(r.Sb,r.ab));switch(t.slice(r.ab).toLowerCase()){case"d":return n*r.k*r.bb*r.bb*r.xb;case"h":return n*r.bb*r.bb*r.xb;case"m":return n*r.bb*r.xb;case"s":return n*r.xb;default:return Number(t)}}},287:function(t,n,e){"use strict";function r(){var t;return(t=console).error.apply(t,arguments)}e.d(n,"a",(function(){return r}))},289:function(t,n,e){"use strict";e.d(n,"a",(function(){return f}));var r=e(9),c=e(2),a=e(1),u="transfer",i={amount:1,destination:"",salt:void 0},o=Object(a.b)(u,["setAmount","setSalt","setDestination","reset"]),s=Object(a.d)(i,(function(t){var n=t.addCase;n(o.setAmount,(function(t,n){var e=n.payload;return Object(c.a)(Object(c.a)({},t),{},{amount:e})})),n(o.setDestination,(function(t,n){var e=n.payload;return Object(c.a)(Object(c.a)({},t),{},{destination:e})})),n(o.setSalt,(function(t,n){var e=n.payload;return Object(c.a)(Object(c.a)({},t),{},{salt:e})})),n(o.reset,(function(){return i}))})),f=Object(r.a)({},u,s)},79:function(t,n,e){"use strict";e.d(n,"b",(function(){return l})),e.d(n,"a",(function(){return b})),e.d(n,"d",(function(){return p})),e.d(n,"c",(function(){return g}));var r=e(9),c="toasts",a=e(2),u=e(30),i=e(1),o=e(12),s=e(6),f=e(3),b=Object(i.b)(c,["set","clean"]),d=Object(i.d)({list:[]},(function(t){var n=t.addCase,e=t.addMatcher;n(b.set,(function(t,n){var e=n.payload;t.list=Array.isArray(e)?e:[].concat(Object(u.a)(t.list),[Object(a.a)({},e)])})),n(b.clean,(function(t){t.list=[]})),e((function(t){return Object(o.c)(t)}),(function(t,n){var e=n.payload;if(e.code&&!e.withoutToast){var r=function(t){var n=t.code,e=t.message,r=t.data,c=t.type,u=t.duration,i=void 0===u?null:u,o=t.toastKind,b=void 0===o?"ERROR":o,d={text:"".concat(e," (").concat(n,")"),kind:b};switch(c){case f.g.VALIDATION:var l=r.NO_FIELD?"".concat(r.NO_FIELD," (").concat(n,")"):{uuid:"spa.form.field.generic.error"};d=Object(a.a)(Object(a.a)({},d),{},{text:l,duration:s.w});break;case f.g.CRITICAL:d=Object(a.a)(Object(a.a)({},d),{},{duration:s.kb});break;case f.g.UNKNOWN:d=Object(a.a)(Object(a.a)({},d),{},{text:{uuid:e},duration:s.v})}null!==i&&(d.duration=i);return d}(e);t.list=[].concat(Object(u.a)(t.list),[Object(a.a)({},r)])}}))}));function l(t){return t[c]}l.get=Object(i.e)(l,(function(t){return t.list}));var O=e(11),j=e(8);function p(){var t=Object(j.b)();return{showErrorToast:O.b.useCallback((function(n,e){t(b.set({kind:"ERROR",text:{uuid:n,replace:e},duration:s.v}))}),[t]),showSuccessToast:O.b.useCallback((function(n){t(b.clean()),t(b.set({kind:"SUCCESS",text:{uuid:n},duration:s.v}))}),[t]),showInfoToast:O.b.useCallback((function(n){t(b.clean()),t(b.set({kind:"INFO",text:{uuid:n},duration:s.v}))}),[t]),showToast:O.b.useCallback((function(n){var e=n.message,r=n.replace,c=n.kind,a=n.duration;t(b.set({kind:c,text:{uuid:e,replace:r},duration:a||s.v}))}),[t])}}var g=Object(r.a)({},c,d)},81:function(t,n,e){"use strict";e.d(n,"b",(function(){return j})),e.d(n,"a",(function(){return b})),e.d(n,"d",(function(){return O.a})),e.d(n,"c",(function(){return m}));var r=e(9),c=e(6),a="vu",u={fetching:!1,error:void 0,warning:void 0,_token:c.D,accuracyPercent:c.D,existsHash:c.D,safeDevice:c.D},i=e(2),o=e(12),s=e(1),f=e(113),b=Object(s.b)(a,["clean"]),d=e(0),l=e(5),O=e(109),j=Object(s.c)(a,{sendLoginVu:function(t,n){return Object(l.a)(Object(d.a)().mark((function e(){var r,c,a,u,o,s,b,l,j,p,g;return Object(d.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n.rejectWithValue,c=t.captcha,a=t.password,u=t.username,o=t.channel,s=t.deviceModel,b=t.exchangeToken,l=t.url,j=t.timeout,e.next=4,Object(O.a)({url:l,timeout:j});case 4:return p=e.sent,e.next=7,Object(f.a)({_captcha:c,_password:a,username:u,channel:o,deviceModel:s,_deviceFingerprintData:p.fingerPrintDeviceInfo,_fingerprint:p.fingerprintHash,_randomSeed:p.randomSeed,_exchangeToken:b});case 7:if(g=e.sent,!Object(f.d)(g)){e.next=10;break}return e.abrupt("return",r(Object(i.a)({},g)));case 10:return e.abrupt("return",g);case 11:case"end":return e.stop()}}),e)})))()},sendSecondFactorVu:function(t,n){return Object(l.a)(Object(d.a)().mark((function e(){var r,c,a,u,o,s,b,l;return Object(d.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n.rejectWithValue,c=t.channel,a=t.deviceModel,u=t.exchangeToken,o=t.url,s=t.timeout,e.next=4,Object(O.a)({url:o,timeout:s});case 4:return b=e.sent,e.next=7,Object(f.b)({channel:c,deviceModel:a,_deviceFingerprintData:b.fingerPrintDeviceInfo,_fingerprint:b.fingerprintHash,_randomSeed:b.randomSeed,_exchangeToken:u});case 7:if(l=e.sent,!Object(f.d)(l)){e.next=10;break}return e.abrupt("return",r(Object(i.a)({},l)));case 10:return e.abrupt("return",l);case 11:case"end":return e.stop()}}),e)})))()}}),p=e(3),g=Object(s.d)(u,(function(t){var n=t.addCase,e=t.addMatcher;n(b.clean,(function(){return Object(i.a)({},u)})),n(j.sendLoginVu.fulfilled,(function(t,n){var e=n.payload;if(t.fetching=!1,t.error=u.error,e){var r=e.data,c=r.accuracyPercent,a=r.existsHash,i=r.safeDevice;t.accuracyPercent=c,t.existsHash=a,t.safeDevice=i}})),e((function(t){return Object(o.b)(t,a)}),(function(t){t.fetching=!0,t.error=u.error,t.warning=u.warning})),e((function(t){return Object(o.c)(t,a)}),(function(t,n){var e=n.payload;t.fetching=!1,Object(p.x)(f.c,e.code)?t.warning=e:t.error=e}))}));function v(t){return t[a]}v.fetching=Object(s.e)(v,(function(t){return t.fetching})),v.error=Object(s.e)(v,(function(t){return t.error})),v.warning=Object(s.e)(v,(function(t){return t.warning}));var m=Object(r.a)({},a,g)},90:function(t,n,e){"use strict";e.d(n,"a",(function(){return a})),e.d(n,"b",(function(){return u})),e.d(n,"c",(function(){return i})),e.d(n,"d",(function(){return o}));var r=e(16),c=e(6),a=function(t){return"".concat(t.charAt(c.Sb).toUpperCase()).concat(t.slice(c.fb).toLowerCase())};function u(t){return t.map((function(t){var n=t[1],e=n.indexOf(c.B),r=e!==c.ab?n.substring(c.Sb,e):n,u=n.split(c.B)[1].toLocaleLowerCase(),i=r.split(" ").map((function(t){return t.includes(".")?t.toUpperCase():a(t)})).join(" ");return{value:t[0],label:i.concat(u),searchKey:i}}))}function i(t){if(t){var n=t.split(c.B),e=Object(r.a)(n,2),a=e[0],u=e[1],i=a.length>c.Jb?c.Hb:a.length-c.fb,o=a.slice(c.Sb,i),s=a.length-i;return"".concat(o).concat(c.s.repeat(s)).concat(c.B).concat(u)}}function o(t){if(t){var n=t.substring(t.length-c.M),e=t.substring(c.Sb,t.length-c.M).length;return"".concat(c.s.repeat(e)).concat(n)}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=main~23cc05f1.0be1b71e.chunk.js.map