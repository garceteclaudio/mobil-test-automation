(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[86,292],{215:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return v}));var a=n(0),o=n(5),r=n(16),u=n(11),s=n(39),c=n(271),i=n(38),l=n(270),b=n(82),d=n(488),m=n(503),j=n(512),E=n(494),f=n(8),O=n(187),p=n(33),_=n(518),T=n(117),h=n(6),N=n(497),M=n(51),P=n(50),g=n(136),x=n(469),I=n.n(x),y=n(10);function v(){var e=Object(M.qb)(),t=Object(f.b)(),n=Object(i.c)().textGet,x=u.b.useState(!1),v=Object(r.a)(x,2),U=v[0],S=v[1],A=Object(M.sb)(M.n),F=Object(M.sb)(M.r),R=Object(M.sb)(M.C),q=Object(f.c)(p.e.token),C=Object(f.c)(T.c.fetching),B=Object(f.c)(T.c.warning),k=Object(f.c)(T.c.accountsRequestMoneyOptions),L=Object(f.c)(T.c.accountsRequestMoney),V=Object(f.c)(T.c.requestMoneyMessage),Y=Object(f.c)(T.c.hasFinishedModoOnboarding),D=n({uuid:"spa.modo.request.money.title"}),w=n({uuid:"spa.generic.field.error.required"}),H=n({uuid:"spa.modo.request.money.select.label"}),G=n({uuid:"spa.modo.request.money.amount.label"}),J=n({uuid:"spa.modo.request.money.reason.label"}),K=n({uuid:"spa.modo.request.money.defaultValue.reason"}),X=n({uuid:"spa.modo.request.money.amount.error"}),z=L&&L.length>h.Sb;u.b.useEffect((function(){q&&(Y?(t(T.b.getAccountsRequestMoney({token:q})),S(!0)):e(R,{replace:!0}))}),[t,Y,e,q,R]),u.b.useEffect((function(){if(V){var n={message:V};Object(c.b)({options:n}),t(T.a.cleanRequestMoneyMessage()),e(A)}}),[t,e,A,V]);var Z=s.e.object({amount:Object(s.c)((function(e){return String(e)?Object(O.j)(s.e.number(),h.fb,X):Object(O.d)(s.e.number(),w)})),account:Object(O.d)(s.e.string.required(),w),reason:s.e.string.orUndefined()});return!C&&U&&L?Object(y.jsxs)(N.a,{withFooter:!0,className:I.a.request,hasNotifications:!1,"header-onBack":function(){e(M.a)},children:[Object(y.jsx)("header",{children:Object(y.jsxs)(P.Box,{flex:!0,align:"baseline",children:[Object(y.jsx)(i.b,{"aria-label":D,className:I.a.title,tag:"h1",uuid:"spa.modo.request.money.title.short"}),Object(y.jsx)(g.a,{"aria-hidden":!0,alt:"Modo",uuid:"logoModo"})]})}),Object(y.jsx)("section",{children:z?Object(y.jsxs)(u.b.Fragment,{children:[Object(y.jsx)(i.b,{className:I.a.subtitle,uuid:"spa.modo.request.money.subtitle"}),Object(y.jsxs)(d.a,{schema:Z,warnings:B,onSubmit:function(e){return Q.apply(this,arguments)},children:[Object(y.jsx)(m.a,{label:H,name:"account",options:k}),Object(y.jsx)(j.a,{fixedDecimalScale:!0,decimalScale:h.Jb,decimalSeparator:h.t,label:G,name:"amount",pattern:h.D,prefixCode:h.b}),Object(y.jsx)(E.a,{defaultValue:K,label:J,name:"reason"}),Object(y.jsx)(b.a,{label:{uuid:"spa.modo.request.money.button"},type:"submit"}),Object(y.jsx)(b.a,{label:{uuid:"spa.form.cancel"},variant:"outlined",onClick:W})]})]}):Object(y.jsxs)(u.b.Fragment,{children:[Object(y.jsxs)("div",{children:[Object(y.jsx)(i.b,{tag:"span",uuid:"spa.modo.request.money.empty.accounts"}),Object(y.jsx)(b.a,{className:I.a.linkButton,kind:"plain",label:{uuid:"spa.modo.request.money.empty.accounts.link"},onClick:function(){e(Object(_.a)(F,"legacy.menu.products.item.highProduct"))}})]}),Object(y.jsx)(b.a,{label:{uuid:"spa.form.accept"},onClick:W})]})})]}):Object(y.jsx)(l.a,{});function Q(){return(Q=Object(o.a)(Object(a.a)().mark((function e(n){var o,r,u,s;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(q&&L){e.next=2;break}return e.abrupt("return");case 2:return o=n.amount,r=n.account,u=n.reason,s=L.findIndex((function(e){return e.accountNumber===r})),e.next=6,t(T.b.sendRequestMoney({token:q,amount:String(o),accountCBU:L[s].accountCBU,accountURI:L[s].accountURI,reason:u}));case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function W(){e(A)}}},469:function(e,t,n){e.exports={NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_FORM:"Form",TYPE_FORM:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",request:"_rules_request__1gcZs",title:"_rules_title__38ETz",subtitle:"_rules_subtitle__3XT1K",linkButton:"_rules_linkButton__2KLLj"}},494:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),o=n(19),r=n(16),u=n(11),s=n(50),c=n(41),i=n(488),l=n(498),b=n.n(l),d=n(10),m=["id","name","methods","defaultValue","pattern","withSuggestions","onChange","onBlur"],j=b.a.NAME_INPUT_FIELD,E=b.a.TYPE_INPUT_FIELD,f=u.b.memo((function(e){var t,n=u.b.useState(!1),i=Object(r.a)(n,2),l=i[0],b=i[1],f=e.id,O=e.name,p=e.methods,_=e.defaultValue,T=e.pattern,h=e.withSuggestions,N=void 0===h||h,M=e.onChange,P=e.onBlur,g=Object(o.a)(e,m),x=p.register,I=p.formState,y=p.setValue,v=p.clearErrors,U=I.errors,S="".concat(O),A=U[O];return u.b.useEffect((function(){_&&y(S,_),_||y(S,void 0),N&&b(!0)}),[_,S,y,N,b]),Object(d.jsx)(c.a,{name:j,type:E,children:Object(d.jsx)(s.TextField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({id:f||O},_&&{defaultValue:_}),A&&{error:null===(t=A.message)||void 0===t?void 0:t.toString()}),x(S,{onChange:function(e){M&&M(e);v([S])},onBlur:P})),g),{},{autoComplete:N?"on":"off",pattern:T,onKeyDown:function(e){e.target.value||l||b(!0)}}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function O(e){var t=i.a.useContext();return Object(d.jsx)(f,Object(a.a)({methods:t},e))}O.displayName=j},498:function(e,t,n){e.exports={NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element"}},512:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),o=n(19),r=n(11),u=n(50),s=n(41),c=n(488),i=n(514),l=n.n(i),b=n(10),d=["id","name","methods","defaultValue","onChange","valueAsNumber"],m=l.a.NAME_INPUT_NUMBER,j=l.a.TYPE_INPUT_NUMBER,E={id:m,valueAsNumber:!0},f=r.b.memo((function(e){var t,n=e.id,c=e.name,i=e.methods,l=e.defaultValue,E=e.onChange,f=e.valueAsNumber,O=Object(o.a)(e,d),p=i.register,_=i.formState,T=i.getValues,h=i.setValue,N=i.clearErrors,M=_.errors,P="".concat(c),g=T()[P],x=M[c];return r.b.useEffect((function(){l&&h(P,l,{shouldValidate:!0}),l||h(P,void 0)}),[l,P,h]),Object(b.jsx)(s.a,{name:m,type:j,children:Object(b.jsx)(u.NumberField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({},l&&{defaultValue:l}),{},{id:n||c},x&&{error:null===(t=x.message)||void 0===t?void 0:t.toString()}),p(P,{onChange:function(e){E&&E(e);N([P])},valueAsNumber:f})),{},{value:g},O))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function O(e){var t=c.a.useContext();return Object(b.jsx)(f,Object(a.a)({methods:t},e))}O.displayName=m,O.defaultProps=E},514:function(e,t,n){e.exports={NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=86.1d73cd1d.chunk.js.map