(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[153,199,309],{340:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return j}));n(11);var a=n(38),o=n(82),r=n(489),i=n(488),s=n(503),c=n(187),l=n(39),u=n(99),E=n(8),d=n(150),b=n(147),T=n(270),O=n(431),_=n.n(O),m=n(10);function j(){var e=Object(E.b)(),t=Object(a.c)().textGet,n=t({uuid:"spa.generic.field.error.required"}),O=Object(u.a)().getValueConfig,j=Object(E.c)(b.c.exchangeToken),f=Object(E.c)(d.d.fetching),N=Object(E.c)(d.d.subjectType),h=l.e.object({subjectType:Object(c.d)(l.e.string.required(),n)}),M="".concat(O("onboarding.ddjj.so.form.label.types")).split("|").map((function(e){return{value:t({uuid:"spa.onboarding.ddjj.so.form.combo.".concat(e)}),id:e}})).map((function(e){var t=e.id,n=e.value;return{isDisabled:!1,value:t,label:n,searchKey:n}})),p=M.find((function(e){return e.value===N}));return f?Object(m.jsx)(T.a,{}):Object(m.jsx)(r.a,{"header-onBack":function(){e(d.b.cleanSubjectType())},children:Object(m.jsx)("section",{children:Object(m.jsxs)(i.a,{schema:h,onSubmit:function(t){if(!j)return;e(d.c.updateStatus({status:d.a.SO_FINISHED,exchangeToken:j})),e(d.b.setSubjectType(t))},children:[Object(m.jsx)("header",{children:Object(m.jsx)(a.b,{tag:"h1",uuid:"spa.onboarding.ddjj.so.form.title"})}),Object(m.jsx)("div",{className:_.a.formContainer,children:Object(m.jsx)(s.a,{defaultOption:p,id:"subjectType",label:t({uuid:"spa.onboarding.ddjj.so.form.label"}),name:"subjectType",options:M})}),Object(m.jsx)(o.a,{label:{uuid:"spa.onboarding.ddjj.form.continue"},type:"submit"})]})})})}},431:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",infoContainer:"_rules_infoContainer__NsT2B",formContainer:"_rules_formContainer__3oZ9K",title:"_rules_title__13-ed",importantText:"_rules_importantText__1NiIU",downloadText:"_rules_downloadText__3FDkn"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var a=n(2),o=n(16),r=n(19),i=n(11),s=n(502),c=n(505),l=n(41),u=n(6),E=n(79),d=n(8),b=n(493),T=n.n(b),O=n(10),_=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],m=T.a.NAME_FORM,j=T.a.TYPE_FORM;function f(e){var t=e,n=t.ariaLabel,b=t.ariaLabelledby,T=t.schema,f=t.onSubmit,N=t.children,h=t.warnings,M=t.isRequiredToast,p=t.isResetForm,R=Object(r.a)(t,_),A=Object(d.b)(),P=Object(s.e)({resolver:Object(c.a)(T)}),x=P.handleSubmit,L=P.setError,g=P.formState.errors,C=P.reset,v=Object.keys(g),S=i.b.useState(!1),y=Object(o.a)(S,2),F=y[0],I=y[1],Y=i.b.useCallback((function(){M&&F&&A(E.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:u.w})),I(!1)}),[A,M,F]),k=i.b.useCallback((function(){C()}),[C]);return i.b.useEffect((function(){h&&Object.keys(h.data).map((function(e){var t=e.startsWith(u.Nb)?e.slice(u.fb):e;return L(t,{message:h.data[e]},{shouldFocus:!1}),null})),v.length>u.Sb&&Y(),p&&k()}),[v.length,p,k,L,Y,h]),Object(O.jsx)(s.b,Object(a.a)(Object(a.a)(Object(a.a)({},P),R),{},{children:Object(O.jsx)(l.a,{noValidate:!0,"aria-label":n,"aria-labelledby":b,name:m,tag:"form",type:j,onSubmit:x(f,(function(){return I(!F)})),children:N})}))}f.useContext=s.f,f.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var a=n(2),o=n(19),r=(n(11),n(41)),i=n(136),s=n(82),c=n(38),l=n(101),u=n(491),E=n.n(u),d={name:E.a.NAME_EXTERNAL_CONTAINER,type:E.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},b=n(492),T=n.n(b),O=n(10),_=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function m(e){var t=e,n=t["header-onBack"],u=t["header-title"],E=t.children,d=t.name,b=t.type,m=t.headerClassName,j=t.showLogo,f=Object(o.a)(t,_),N=Boolean(n||u),h=Object(r.c)(!u&&T.a.onlyRow,m),M=Object(r.c)(j&&T.a.step1Logo),p=Object(r.c)(j&&T.a.hasLogo);return Object(O.jsxs)(l.a,{children:[j&&Object(O.jsx)("div",{className:M,children:Object(O.jsx)(i.a,{alt:"logo",uuid:"logo150Login"})}),Object(O.jsx)(r.a,Object(a.a)(Object(a.a)({name:d,tag:"article",type:b},f),{},{children:Object(O.jsxs)("article",{className:p,children:[N&&Object(O.jsxs)("header",{className:h,children:[n&&Object(O.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),u&&Object(O.jsx)(c.b,{tag:"h5",uuid:u})]}),E]})}))]})}m.defaultProps=d},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},503:function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var a=n(272),o=n(2),r=n(16),i=n(19),s=n(11),c=n(50),l=n(41),u=n(488),E=n(516),d=n.n(E),b=n(10),T=["id","name","methods","options","defaultOption","onSelectOption"],O=d.a.NAME_INPUT_SELECT,_=d.a.TYPE_INPUT_SELECT,m=s.b.memo((function(e){var t,n=e.id,a=e.name,u=e.methods,E=e.options,d=e.defaultOption,m=e.onSelectOption,j=Object(i.a)(e,T),f=u.register,N=u.formState,h=u.setValue,M=u.watch,p=N.errors,R="".concat(a),A=s.b.useState(d),P=Object(r.a)(A,2),x=P[0],L=P[1];M(R);var g=s.b.useRef(null),C=p[a];return s.b.useEffect((function(){null!==d&&void 0!==d&&d.value&&h(R,null===d||void 0===d?void 0:d.value,{shouldValidate:!0})}),[null===d||void 0===d?void 0:d.value,R,h]),s.b.useEffect((function(){g.current&&g.current.blur()}),[C]),s.b.useEffect((function(){x||L(d)}),[d,x]),Object(b.jsx)(l.a,{name:O,type:_,children:Object(b.jsx)(c.SelectField,Object(o.a)(Object(o.a)(Object(o.a)({defaultOption:x,id:n||a,options:E},f(R)),C&&{error:null===(t=C.message)||void 0===t?void 0:t.toString()}),{},{ref:g,onSelectOption:function(e){h(R,e.value,{shouldValidate:!0}),m&&m(e)}},j))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function j(e){var t=u.a.useContext(),n=e,r=Object.assign({},(Object(a.a)(n),n));return Object(b.jsx)(m,Object(o.a)({methods:t},r))}},516:function(e,t,n){e.exports={NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=153.fd02018d.chunk.js.map