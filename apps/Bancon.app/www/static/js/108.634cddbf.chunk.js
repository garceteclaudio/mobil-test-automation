(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[108],{617:function(e,t,a){e.exports={NAME_CONSULT_PAYMENTS_TABLE:"ConsultPaymentsTable",TYPE_CONSULT_PAYMENTS_TABLE:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",buttonDownloadAll:"_rules_buttonDownloadAll__1uRW0",actionsButtons:"_rules_actionsButtons__1YrNZ",table:"_rules_table__3SXxw",dropdownButton:"_rules_dropdownButton__1VTtS",dropdownItem:"_rules_dropdownItem__3GAj6",actionTable:"_rules_actionTable__L2kDl",amountCol:"_rules_amountCol__37eUy",accordionData:"_rules_accordionData__4eGap",paymentDetails:"_rules_paymentDetails__296ac",dataCard:"_rules_dataCard__3VO5Q",firstRow:"_rules_firstRow__2HF6v"}},789:function(e,t,a){e.exports={NAME_CONSULT_PAYMENTS_TABLE:"ConsultPaymentsTable",TYPE_CONSULT_PAYMENTS_TABLE:"Section"}},841:function(e,t,a){"use strict";a.d(t,"a",(function(){return V}));var n=a(0),c=a(5),s=a(2),l=a(16),i=a(11),o=a(41),u=a(8),r=a(69),d=a(55),b=a(152),p=a(160),j=a(33),m=a(504),y=a(100),O=a(82),h=a(38),B=a(500),x=a(6),P=a(30),f=a(99),T=a(51),v=a(270),E=a(523),_=a(50),R=a(74),I=[{id:"paymentBatchDate",numeric:!1,label:"spa.suppliers.consultPayments.applicationDate",align:"left"},{id:"paymentBatchFile",numeric:!1,label:"spa.suppliers.consultPayments.fileName",align:"left"},{id:"paymentBatchBankAccountCBUReceiver",numeric:!1,label:"spa.suppliers.consultPayments.cbu.recipient",align:"left"},{id:"paymentBatchReference",numeric:!1,label:"spa.suppliers.consultPayments.paymentReference",align:"left"},{id:"paymentBatchTotalAmount",numeric:!1,label:"spa.suppliers.consultPayments.amount",align:"right"},{id:"paymentBatchStateId",numeric:!1,label:"spa.suppliers.consultPayments.paymentStatus",align:"left"}],N=a(787),g=a(617),M=a.n(g),S=a(10);function A(e){var t=Object(h.c)().textGet,a=Object(u.b)(),n=Object(T.sb)(T.bb),c=Object(T.qb)(),r=i.b.useState([]),p=Object(l.a)(r,2),m=p[0],y=p[1],B=i.b.useState(x.fb),g=Object(l.a)(B,2),A=g[0],D=g[1],w=i.b.useState(!1),C=Object(l.a)(w,2),k=C[0],U=C[1],F=Object(u.c)(b.c.fetchingPayments),L=Object(u.c)(b.c.hasSelectedItem),Y=Object(u.c)(b.c.paymentIds),G=Object(u.c)(b.c.paymentStatus),H=Object(u.c)(b.c.isPaymentActionable),V=Object(u.c)(b.c.isPaymentImputed),q=Object(u.c)(b.c.isPaymentPending),z=Object(u.c)(j.e.token),J=Object(f.a)().getValueConfig,X=Object(j.h)("legacy.payments.supplier.annulment"),W=Object(j.f)("legacy.payments.supplier.annulment"),K=q&&X||V,Q=!G||!H,Z=Object(o.c)(M.a.table,(K||Q)&&M.a.actionTable),$=e.data,ee=e.fetchData,te=e.loadMorePayments;i.b.useEffect((function(){var e=I.map((function(e){return Object(s.a)(Object(s.a)({},e),{},{label:t({uuid:e.label})})})),a=[].concat(Object(P.a)(e),[{id:"options",label:"",numeric:!1,align:"right"}]);return y(a),function(){return y([])}}),[W,V,t]);var ae=Object(R.a)(J("paymentSuppliersIndividual.registersPerPage.list")),ne=Object(S.jsx)(_.Box,{justify:"center",children:F?Object(S.jsx)(v.a,{a11yMsg:t({uuid:"spa.a11y.loading"}),size:"medium"}):Object(S.jsxs)(i.b.Fragment,{children:[Object(S.jsx)(E.a,{}),Object(S.jsx)(O.a,{inline:!0,label:{uuid:"spa.suppliers.consultPayments.see.more"},variant:"text",onClick:function(){te&&z&&(D((function(e){return e+x.fb})),ee())}})]})}),ce=Object(S.jsx)(_.Box,{justify:"center",children:te?ne:null});return Object(S.jsxs)(i.b.Fragment,{children:[Object(S.jsx)(_.EnhancedTable,Object(s.a)(Object(s.a)({disableClickableRows:!0,disableSort:!0,multiple:!0,className:Z,customPagination:ce,headData:m,id:"SupplierConsultPayments",pagination:{count:($||[]).length,rowsPerPage:ae*A,rowsPerPageOptions:[]},rowsData:$.map((function(e){var t=Object(S.jsxs)("ul",{className:M.a.accordionData,children:[Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.company.name"}),Object(S.jsx)("span",{children:e.paymentBatchBankBusinessNameReceiver})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.document"}),Object(S.jsx)("span",{children:e.paymentBatchDocumentIdReceiver})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.cbu"}),Object(S.jsx)("span",{children:e.paymentBatchBankAccountCBU})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.payment.date"}),Object(S.jsx)("span",{children:e.paymentBatchDate})]}),e.paymentBatchStateIdRaw===d.d.IMPUTED&&Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.transferNumber"}),Object(S.jsx)("span",{children:e.paymentBatchBankReceiptNumber})]}),e.paymentBatchStateIdRaw===d.d.REJECTED&&Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.reason.rejection"}),Object(S.jsx)("span",{children:e.paymentBatchRejectionReason})]})]});return Object(s.a)(Object(s.a)({},e),{},{id:e.paymentBatchPayId,children:t})})),selected:Y,toolbarActions:function(){if(!G)return;var e=q&&X&&W;return V||e?Object(S.jsxs)("div",{className:M.a.actionsButtons,children:[V&&Object(S.jsx)(O.a,{disabled:!L,label:{uuid:"spa.suppliers.consultPayments.downloads.vouchers"},size:"small",variant:"solid",onClick:le}),e&&Object(S.jsx)(O.a,{disabled:!L,label:{uuid:"spa.suppliers.voidMultiplePayments.table.title"},size:"small",variant:"solid",onClick:se})]}):void 0}(),onSelectAllRows:function(){if(L&&Y.length>x.Sb)a(b.a.paymentIds([]));else{var e=$.map((function(e){return e.paymentBatchPayId}));a(b.a.paymentIds(e))}},onSelectRow:function(e){var t=e.paymentBatchPayId;if(L&&Y.includes(t)){var n=function(e){return Y.filter((function(t){return t!==e}))}(t);a(b.a.paymentIds(n))}else a(b.a.paymentIds([t].concat(Object(P.a)(Y))))}},Q&&{type:"accordion"}),K&&{type:"checkbox"})),Object(S.jsx)(N.a,{setShowModal:U,showModal:k})]});function se(){c(n)}function le(){U(!k)}}var D=a(490),w=a(80),C=a(618);function k(e){var t=e.data,a=e.fetchData,n=e.loadMorePayments,c=e.handleVoidPayment,s=Object(u.b)(),o=Object(h.c)().textGet,r=Object(w.g)(),p=Object(u.c)(b.c.payments),m=Object(u.c)(b.c.fetchingPayments),y=o({uuid:"spa.supplier.consult.noData"}),B=Object(j.h)("legacy.payments.supplier.annulment"),P=Object(T.sb)(T.W),f=i.b.useState(!1),R=Object(l.a)(f,2),I=R[0],N=R[1],g=i.b.useState(!1),A=Object(l.a)(g,2),k=A[0],U=A[1],F=i.b.useState(),L=Object(l.a)(F,2),Y=L[0],G=L[1];return Object(S.jsxs)(i.b.Fragment,{children:[t.length===x.Sb&&y,t.map((function(e){var a=e.paymentBatchPayId,n=e.paymentBatchBankAccountCBUReceiver,c=e.paymentBatchFile,s=e.paymentBatchProgrammedDate,l=e.paymentBatchReference,i=e.paymentBatchTotalAmount,o=e.paymentBatchStateId;return Object(S.jsx)(_.Card,{className:M.a.dataCard,onClick:function(){return function(e){G(t.find((function(t){return t.paymentBatchPayId===e}))),N(!0)}(a)},children:Object(S.jsx)("section",{children:Object(S.jsxs)("ul",{children:[Object(S.jsx)("li",{className:M.a.firstRow,children:Object(S.jsxs)("div",{children:[Object(S.jsx)(h.b,{tag:"label",uuid:"spa.suppliers.consultPayments.applicationDate"}),s]})}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{tag:"label",uuid:"spa.suppliers.consultPayments.fileName"}),Object(S.jsx)(h.b,{children:c})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{tag:"label",uuid:"spa.suppliers.consultPayments.cbu.recipient"}),Object(S.jsx)(h.b,{children:n})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{tag:"label",uuid:"spa.suppliers.consultPayments.paymentReference"}),Object(S.jsx)(h.b,{children:l})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{tag:"label",uuid:"spa.suppliers.consultPayments.amount"}),i]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{tag:"label",uuid:"spa.suppliers.consultPayments.paymentStatus"}),Object(S.jsx)(h.b,{children:o})]})]})})},a)})),n&&Object(S.jsx)(_.Box,{justify:"center",children:m?Object(S.jsx)(v.a,{a11yMsg:o({uuid:"spa.a11y.loading"}),size:"medium"}):Object(S.jsxs)(i.b.Fragment,{children:[Object(S.jsx)(E.a,{}),Object(S.jsx)(O.a,{label:{uuid:"spa.suppliers.consultPayments.see.more"},onClick:function(){n&&a()}})]})}),Object(S.jsxs)(D.a,{closeOnBgTap:!0,open:I,title:"spa.suppliers.consultPayments.modal.title",onClose:function(){G(void 0),N(!1)},children:[Object(S.jsx)(D.a.Body,{children:Object(S.jsx)("section",{className:M.a.paymentDetails,children:Object(S.jsxs)("ul",{children:[Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.applicationDate"}),Object(S.jsx)(h.b,{children:H(null===Y||void 0===Y?void 0:Y.paymentBatchProgrammedDate)})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.fileName"}),Object(S.jsx)(h.b,{tag:"label",children:H(null===Y||void 0===Y?void 0:Y.paymentBatchFile)})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.cbu.recipient"}),Object(S.jsx)(h.b,{tag:"label",children:H(null===Y||void 0===Y?void 0:Y.paymentBatchBankAccountCBUReceiver)})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.paymentReference"}),Object(S.jsx)(h.b,{tag:"label",children:H(null===Y||void 0===Y?void 0:Y.paymentBatchReference)})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.amount"}),Object(S.jsx)(h.b,{tag:"label",children:H(null===Y||void 0===Y?void 0:Y.paymentBatchTotalAmount)})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.paymentStatus"}),Object(S.jsx)(h.b,{tag:"label",children:H(null===Y||void 0===Y?void 0:Y.paymentBatchStateId)})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.company.name"}),Object(S.jsx)(h.b,{tag:"label",children:H(null===Y||void 0===Y?void 0:Y.paymentBatchBankBusinessNameReceiver)})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.document"}),Object(S.jsx)(h.b,{tag:"label",children:H(null===Y||void 0===Y?void 0:Y.paymentBatchDocumentIdReceiver)})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.cbu"}),Object(S.jsx)(h.b,{tag:"label",children:H(null===Y||void 0===Y?void 0:Y.paymentBatchBankAccountCBU)})]}),Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.payment.date"}),Object(S.jsx)(h.b,{tag:"label",children:H(null===Y||void 0===Y?void 0:Y.paymentBatchDate)})]}),(null===Y||void 0===Y?void 0:Y.paymentBatchStateIdRaw)===d.d.IMPUTED&&Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.transferNumber"}),Object(S.jsx)(h.b,{tag:"label",children:H(null===Y||void 0===Y?void 0:Y.paymentBatchBankReceiptNumber)})]}),(null===Y||void 0===Y?void 0:Y.paymentBatchStateIdRaw)===d.d.REJECTED&&Object(S.jsxs)("li",{children:[Object(S.jsx)(h.b,{uuid:"spa.suppliers.consultPayments.accordion.reason.rejection"}),Object(S.jsx)(h.b,{tag:"label",children:H(null===Y||void 0===Y?void 0:Y.paymentBatchRejectionReason)})]})]})})}),Object(S.jsxs)(D.a.Footer,{children:[(null===Y||void 0===Y?void 0:Y.paymentBatchStateIdRaw)===d.d.IMPUTED&&Object(S.jsx)(O.a,{label:{uuid:"spa.suppliers.consultPayments.dropdown.item.download"},type:"button",onClick:function(){V(),r(P)}}),(null===Y||void 0===Y?void 0:Y.paymentBatchStateIdRaw)===d.d.PENDING&&B&&Object(S.jsx)(O.a,{label:{uuid:"spa.suppliers.consultPayments.dropdown.item.cancel.transfer"},type:"button",onClick:function(){V(),N(!1),U(!0)}})]})]}),Object(S.jsx)(C.a,{setShowModal:U,showModal:k,onContinue:c})]});function H(e){return e||x.j}function V(){if(Y){var e=(null!==p&&void 0!==p?p:[]).find((function(e){return e.paymentBatchPayId===Y.paymentBatchPayId}));e&&s(b.a.selectedRow(e))}}}var U=a(788),F=a(789),L=a.n(F);function Y(e){var t=e.status,a=e.id,n=e.handleShowModal,c=Object(u.b)(),s=Object(T.qb)(),l=Object(T.sb)(T.W),i=Object(u.c)(b.c.isPaymentImputed),o=Object(u.c)(b.c.isPaymentPending),r=Object(j.h)("legacy.payments.supplier.annulment"),p=Object(u.c)(b.c.payments),m=Object(S.jsx)(O.a,{ariaLabel:{uuid:"spa.a11y.buttons.options"},className:M.a.dropdownButton,kind:"plain",label:{uuid:"spa.a11y.buttons.options"},children:Object(S.jsx)(_.Icon,{name:"verticalKebab",size:"small"})});return Object(S.jsxs)(_.Dropdown,{label:m,children:[(i||t===d.d.IMPUTED)&&Object(S.jsx)(_.Dropdown.Item,{children:Object(S.jsx)(O.a,{className:M.a.dropdownItem,kind:"plain",label:{uuid:"spa.suppliers.consultPayments.dropdown.item.download"},onClick:function(){y(),s(l)}})}),(o||t===d.d.PENDING)&&r&&Object(S.jsx)(_.Dropdown.Item,{onClick:function(){y(),n()},children:Object(S.jsx)(O.a,{className:M.a.dropdownItem,kind:"plain",label:{uuid:"spa.suppliers.consultPayments.dropdown.item.cancel.transfer"}})})]});function y(){var e=(null!==p&&void 0!==p?p:[]).find((function(e){return e.paymentBatchPayId===a}));e&&c(b.a.selectedRow(e))}}var G=L.a.NAME_CONSULT_PAYMENTS_TABLE,H=L.a.TYPE_CONSULT_PAYMENTS_TABLE;function V(){var e=Object(u.b)(),t=i.b.useState(!1),a=Object(l.a)(t,2),P=a[0],f=a[1],T=i.b.useState(!1),v=Object(l.a)(T,2),E=v[0],_=v[1],R=Object(u.c)(b.c.contractId),I=Object(u.c)(j.e.token),N=Object(u.c)(r.c.isDesktop),g=Object(u.c)(b.c.selectedRow),D=Object(u.c)(b.c.payments),w=Object(u.c)(b.c.paymentStatus),F=Object(u.c)(b.c.isPaymentImputed),L=Object(u.c)(b.c.debitAccount),V=Object(u.c)(b.c.transferNumber),q=Object(j.h)("legacy.payments.supplier.annulment"),z=Object(u.c)(b.c.loadMorePayments),J=Object(u.c)(b.c.lastSequenceId),X=Object(u.c)(b.c.conceptPay),W=Object(u.c)(b.c.dateFrom),K=Object(u.c)(b.c.dateTo),Q=Object(u.c)(b.c.paymentFilename),Z=Object(u.c)(b.c.paymentReference),$=Object(j.f)("legacy.payments.supplier.annulment");return Object(S.jsxs)(o.a,{name:G,type:H,children:[Object(S.jsx)("header",{className:M.a.header,children:Object(S.jsx)(O.a,{className:M.a.buttonDownloadAll,label:{uuid:"spa.suppliers.consultPayments.download.voucher"},onClick:function(){f(!P)}})}),N?Object(S.jsx)(A,{data:te(),fetchData:ee,loadMorePayments:z}):Object(S.jsx)(k,{data:te(),fetchData:ee,handleVoidPayment:ne,loadMorePayments:z}),Object(S.jsx)(U.a,{setShowModal:f,showModal:P}),Object(S.jsx)(C.a,{setShowModal:_,showModal:E,onContinue:ne})]});function ee(){I&&e(b.b.consultPayments({conceptPay:X,contractId:R,lastBatch:null!==J&&void 0!==J?J:x.Ub,requestDateFrom:W,requestDateTo:K,token:I,status:w,paymentFilename:Q,paymentReference:Z,debitAccount:L,transferNumber:V}))}function te(){return(null!==D&&void 0!==D?D:[]).map((function(e){return Object(s.a)({paymentBatchPayId:e.paymentBatchPayId,paymentBatchProgrammedDate:Object(S.jsx)(m.a,{date:e.paymentBatchProgrammedDate,formatParams:{format:y.a.SHORT}}),paymentBatchFile:e.paymentBatchFile,paymentBatchBankAccountCBUReceiver:e.paymentBatchBankAccountCBUReceiver,paymentBatchReference:e.paymentBatchReference,paymentBatchTotalAmount:Object(S.jsx)(B.a,{amount:e.paymentBatchTotalAmount,className:M.a.amountCol}),paymentBatchStateId:ae(e.paymentBatchStateId),paymentBatchStateIdRaw:e.paymentBatchStateId,paymentBatchBankBusinessNameReceiver:e.paymentBatchBankBusinessNameReceiver,paymentBatchDocumentIdReceiver:e.paymentBatchDocumentIdReceiver,paymentBatchBankAccountCBU:e.paymentBatchBankAccountCBU,paymentBatchDate:Object(S.jsx)(m.a,{date:e.paymentBatchDate,formatParams:{format:y.a.SHORT}}),paymentBatchBankReceiptNumber:e.paymentBatchBankReceiptNumber,paymentBatchRejectionReason:e.paymentBatchRejectionReason},$&&function(e){var t=e.paymentBatchStateId===d.d.IMPUTED,a=e.paymentBatchStateId===d.d.PENDING,n=(!w||!N)&&a&&q;return t||F||n}(e)&&{options:Object(S.jsx)(Y,{handleShowModal:se,id:e.paymentBatchPayId,status:e.paymentBatchStateId})})}))}function ae(e){switch(e){case d.d.IMPUTED:return Object(S.jsx)(h.b,{align:"left",uuid:"spa.suppliers.consultPayments.imputed.label"});case d.d.PENDING:return Object(S.jsx)(h.b,{align:"left",uuid:"spa.suppliers.consultPayments.pending.label"});case d.d.VOIDED:return Object(S.jsx)(h.b,{align:"left",uuid:"spa.suppliers.consultPayments.canceled.label"});case d.d.REJECTED:return Object(S.jsx)(h.b,{align:"left",uuid:"spa.suppliers.consultPayments.rejected.label"});default:return}}function ne(){return ce.apply(this,arguments)}function ce(){return(ce=Object(c.a)(Object(n.a)().mark((function t(){return Object(n.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(I&&g){t.next=2;break}return t.abrupt("return");case 2:return t.next=4,e(p.b.voidPayments({token:I,contractId:R,sequences:[{batchId:g.paymentBatchId,fileName:g.paymentBatchFile,sequenceID:g.paymentBatchPayId,amount:g.paymentBatchTotalAmount,paymentBatchDate:g.paymentBatchDate,receiverCBU:g.paymentBatchBankAccountCBUReceiver,paymentReference:g.paymentBatchReference}]}));case 4:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function se(){_(!E)}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=108.634cddbf.chunk.js.map