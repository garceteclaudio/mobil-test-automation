(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[98,270,272],{201:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return F}));var n=a(0),c=a(5),s=a(2),o=a(16),i=a(11),r=a(542),l=a(8),d=a(69),u=a(148),b=a(33),j=a(187),m=a(100),p=a(6),O=a(50),_=a(82),f=a(38),x=a(500),T=a(504),h=a(515),E=a(488),v=a(270),M=a(523),N=a(320),y=a(308),A=a(497),S=a(51),C=a(519),P=a(458),R=a.n(P),g=a(10);function F(){var e=i.b.useState(!1),t=Object(o.a)(e,2),a=t[0],P=t[1],F=i.b.useState(!1),D=Object(o.a)(F,2),B=D[0],L=D[1],k=i.b.useState(),I=Object(o.a)(k,2),w=I[0],H=I[1],Y=Object(S.sb)(S.m),U=Object(S.sb)(S.k),q=Object(f.c)().textGet,V=Object(l.b)(),G=Object(S.qb)(),X=Object(l.c)(b.e.token),W=Object(l.c)(d.c.isDesktop),J=Object(l.c)(u.c.isProductSelectedUVA),Q=Object(l.c)(u.c.accountSelected),z=Object(l.c)(u.c.simulatedDepositSelected),K=Object(l.c)(u.c.productChannelSelected),Z=Object(l.c)(u.c.currencyByProductSelected),$=Object(l.c)(u.c.instructionData),ee=Object(l.c)(u.c.instructionSelected),te=Object(l.c)(u.c.depositAmountAccountData),ae=Object(l.c)(u.c.fetching),ne=q({uuid:"spa.deposits.creation.confirm.form.ariaLabel"}),ce=q({uuid:"spa.deposits.creation.error.tyc"}),se=q({uuid:"spa.deposits.creation.confirm.affidavit"}),oe=r.Type.object({termConditions:Object(j.d)(r.Type.boolean.equals(!0),ce)}),ie=Number(null===te||void 0===te?void 0:te.amount)>Number(null===Q||void 0===Q?void 0:Q.balance),re=Object(C.a)(Number(null===z||void 0===z?void 0:z.amountKind.quantity)+Number(null===z||void 0===z?void 0:z.interest.quantity),{currencySymbol:Z});return ae?Object(g.jsx)(v.a,{a11yMsg:q({uuid:"spa.deposits.a11y.confirm.loading"})}):Object(g.jsxs)(A.a,{withoutBox:!0,className:R.a.confirmTransaction,"header-onBack":function(){G(U)},children:[Object(g.jsx)(M.a,{}),Object(g.jsx)(O.Card,{className:R.a.wrapper,children:Object(g.jsxs)(E.a,{ariaLabel:ne,schema:oe,onSubmit:function(){return be.apply(this,arguments)},children:[Object(g.jsx)("header",{children:Object(g.jsxs)("div",{className:R.a.header,children:[Object(g.jsxs)("div",{className:R.a.title,children:[Object(g.jsx)(f.b,{tag:"h5",uuid:"spa.deposits.creation.confirm.title"}),Object(g.jsx)(x.a,{amount:null===z||void 0===z?void 0:z.amount.quantity,currency:Z})]}),Object(g.jsxs)("div",{className:R.a.subtitle,children:[Object(g.jsx)(f.b,{tag:"h6",uuid:"spa.deposits.creation.confirm.subtitle.".concat(J?"uvas":"dollar")}),J?Object(g.jsx)(f.b,{replace:re,tag:"h6",uuid:"spa.deposits.amount.uvas"}):Object(g.jsx)(x.a,{amount:null===z||void 0===z?void 0:z.interest.quantity,currency:Z})]})]})}),Object(g.jsx)("section",{className:R.a.info,children:Object(g.jsxs)("div",{children:[Object(g.jsxs)("div",{children:[Object(g.jsx)(f.b,{uuid:"spa.deposits.detail.accreditation.account"}),Object(g.jsx)(f.b,{className:R.a.data,children:null===Q||void 0===Q?void 0:Q.shortLabel})]}),Object(g.jsxs)("div",{children:[Object(g.jsx)(f.b,{uuid:"spa.deposits.detail.term"}),Object(g.jsx)(f.b,{className:R.a.data,replace:String(null===z||void 0===z?void 0:z.term),uuid:"spa.deposits.interestByTerms.days"})]}),Object(g.jsxs)("div",{children:[Object(g.jsx)(f.b,{tag:"span",children:Object(g.jsx)("abbr",{title:q({uuid:"spa.deposits.detail.tna.a11y"}),children:Object(g.jsx)(f.b,{uuid:"spa.deposits.detail.tna"})})}),Object(g.jsx)(f.b,{className:R.a.data,tag:"span",children:Object(g.jsx)(x.a,{amount:null===z||void 0===z?void 0:z.tna,currency:p.D,suffix:p.jb})})]}),Object(g.jsxs)("div",{children:[Object(g.jsx)(f.b,{uuid:"spa.deposits.detail.expiration"}),(null===z||void 0===z?void 0:z.endDate)&&Object(g.jsx)(T.a,{date:z.endDate,formatParams:{format:m.a.SHORT}})]}),Object(g.jsxs)("div",{children:[Object(g.jsx)(f.b,{uuid:"spa.deposits.creation.type"}),Object(g.jsx)(f.b,{className:R.a.data,uuid:K?J?"spa.deposits.productType.".concat(K.currencyId,".").concat(K.productId,".title"):"spa.deposits.productType.".concat(K.currencyId,".title"):p.D})]}),!J&&Object(g.jsxs)("div",{children:[Object(g.jsx)(f.b,{uuid:"spa.deposits.detail.expiration.action"}),Object(g.jsx)(f.b,{className:R.a.data,children:null===$||void 0===$?void 0:$.renewalName})]})]})}),Object(g.jsxs)("section",{children:[Object(g.jsxs)("div",{className:R.a.messages,children:[J&&Object(g.jsx)(f.b,{className:R.a.precancel,uuid:"spa.deposits.creation.precancel.message"}),Object(g.jsx)(f.b,{className:R.a.affidavit,children:Object(g.jsx)("span",{dangerouslySetInnerHTML:{__html:se}})})]}),Object(g.jsx)("div",{className:R.a.termsAndConditions,children:Object(g.jsx)(h.a,{isChecked:w,isDisabled:ie,label:Object(g.jsxs)("div",{className:R.a.termsAndConditions,children:[Object(g.jsx)(f.b,{tag:"span",uuid:"spa.form.accept"}),Object(g.jsx)(_.a,{disabled:ie,kind:"plain",label:{uuid:"spa.deposits.creation.tyc"},type:"button",onClick:ue})]}),name:"termConditions",onChange:function(){H(!w)}})})]}),Object(g.jsx)("footer",{children:Object(g.jsx)("div",{className:R.a.actions,children:Object(g.jsx)(le,{})})})]})}),Object(g.jsx)(N.ModalTermsAndConditions,{handleAccept:function(){H(!0)},handleCancel:function(){H(!1)},setShowModal:P,showModal:a}),Object(g.jsx)(y.ModalCancel,{setShowModal:L,showModal:B})]});function le(){var e=(0,E.a.useContext().getValues)().termConditions;return Object(g.jsxs)(i.b.Fragment,{children:[Object(g.jsx)(_.a,Object(s.a)(Object(s.a)({},W&&{inline:!0}),{},{disabled:ie||Boolean(!e),label:{uuid:"spa.form.confirm"},type:"submit"})),Object(g.jsx)(_.a,Object(s.a)(Object(s.a)({},W&&{inline:!0}),{},{label:{uuid:"spa.form.cancel"},variant:"text",onClick:de}))]})}function de(){L(!B)}function ue(){P(!a)}function be(){return(be=Object(c.a)(Object(n.a)().mark((function e(){var t,a,c,s,o,i,r,l,d,b,j,m;return Object(n.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(X&&z&&Q&&K){e.next=2;break}return e.abrupt("return");case 2:return t=z.amount,a=z.interest,c=z.tna,s=z.term,o=z.simulateId,i=z.constituteDate,r=z.endDate,l=z.depositTypeText,d=z.renovationTypeText,b=z.uvaQuantity,j=Q.idProduct,m=K.productId,e.next=7,V(u.b.constituteDeposit({token:X,amount:t,term:Number(s),depositType:m,renovationType:ee,debitAccount:{value:j},creditAccount:{value:j},uvaQuantity:{currency:null===b||void 0===b?void 0:b.currency,quantity:null===b||void 0===b?void 0:b.quantity},tna:c,interest:a,depositTypeText:l,renovationTypeText:d,constituteDate:i,endDate:r,simulateId:o}));case 7:G(Y);case 8:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},308:function(e,t,a){"use strict";a.r(t),a.d(t,"DEF_MODAL_PROPS",(function(){return O})),a.d(t,"ModalCancel",(function(){return _}));a(11);var n=a(50),c=a(8),s=a(148),o=a(69),i=a(79),r=a(6),l=a(82),d=a(490),u=a(38),b=a(51),j=a(435),m=a.n(j),p=a(10),O={isFromTransacton:!1};function _(e){var t=e,a=t.showModal,j=t.setShowModal,O=t.handleAccept,_=t.isFromTransacton,f=Object(c.b)(),x=Object(b.qb)(),T=Object(b.sb)(b.i),h="confirm-cancellation-button",E=Object(c.c)(o.c.isMobile),v=Object(c.c)(o.c.isWebMobile);return E||v?Object(p.jsxs)(n.BottomSheet,{className:m.a.bottomSheetCancel,initialFocusElementId:h,isVisible:a,onClose:A,children:[Object(p.jsx)(n.Separator,{className:m.a.separator}),Object(p.jsx)(u.b,{className:m.a.title,tag:"h4",uuid:M()}),Object(p.jsx)(u.b,{className:m.a.body,uuid:"spa.deposits.creation.modal.cancel.description"}),Object(p.jsx)(n.Separator,{className:m.a.separator}),N()]}):Object(p.jsxs)(d.a,{className:m.a.modalCancel,id:"cancel-deposit",initialFocusElementId:h,open:a,title:M(),onClose:A,children:[Object(p.jsx)(d.a.Body,{children:Object(p.jsx)(u.b,{uuid:"spa.deposits.creation.modal.cancel.description"})}),Object(p.jsx)(d.a.Footer,{children:N()})]});function M(){return _?"spa.deposits.transaction.cancel.modal.title":"spa.deposits.creation.modal.cancel.title"}function N(){var e=E||v?m.a.bottomSheetFooter:m.a.modalFooter;return Object(p.jsxs)(n.Box,{align:"end",className:e,children:[Object(p.jsx)(l.a,{inline:!0,label:{uuid:"spa.global.yes"},type:"button",variant:"outlined",onClick:y}),Object(p.jsx)(l.a,{inline:!0,"data-focus-id":h,label:{uuid:"spa.global.no"},type:"button",onClick:A})]})}function y(){j(!1),f(s.a.clean()),x(T),f(i.a.set({kind:"SUCCESS",text:{uuid:_?"spa.deposits.transaction.cancel.toast.title":"spa.deposits.creation.request.canceled"},duration:r.v})),O&&O()}function A(){j(!a)}}_.defaultProps=O},320:function(e,t,a){"use strict";a.r(t),a.d(t,"DEF_MODAL_PROPS",(function(){return x})),a.d(t,"ModalTermsAndConditions",(function(){return T}));var n=a(30),c=a(40),s=a(16),o=a(11),i=a(521),r=a(50),l=a(6),d=a(148),u=a(69),b=a(8),j=a(82),m=a(490),p=a(38),O=a(435),_=a.n(O),f=a(10),x={};function T(e){var t=e,a=t.showModal,O=t.setShowModal,x=t.handleAccept,T=t.handleCancel,h=Object(p.c)().textGet,E=o.b.useRef(null),v=o.b.useState([]),M=Object(s.a)(v,2),N=M[0],y=M[1],A=Object(b.c)(u.c.isMobile),S=Object(b.c)(u.c.isWebMobile),C=Object(b.c)(d.c.isProductSelectedUVA),P=o.b.useCallback((function(e){e.preventDefault();var t=e.target.getAttribute("href");window.cordova.InAppBrowser.open(t,i.b.system,"location=yes")}),[]);o.b.useEffect((function(){if(A){E&&E.current&&function e(t){var a,s=Object(c.a)(t.childNodes);try{var o=function(){var t=a.value;t.tagName&&"a"===t.tagName.toLowerCase()&&y((function(e){return[].concat(Object(n.a)(e),[t])})),e(t)};for(s.s();!(a=s.n()).done;)o()}catch(i){s.e(i)}finally{s.f()}}(E.current)}}),[A]),o.b.useEffect((function(){if(N.length&&A)return N.forEach((function(e){e.addEventListener("click",P)})),function(){return N.forEach((function(e){return e.removeEventListener("click",P)}))}}),[N,A,P]);var R="confirm-tyc-button",g=h({uuid:C?"spa.deposits.creation.tyc.uvas":"spa.deposits.creation.tyc.dollar"});return A||S?Object(f.jsxs)(r.BottomSheet,{className:_.a.bottomSheetTermsAndConditions,initialFocusElementId:R,isVisible:a,onClose:k,children:[Object(f.jsx)(r.Separator,{className:_.a.separator}),Object(f.jsx)(p.b,{className:_.a.title,tag:"h4",uuid:"spa.deposits.creation.tyc"}),D(),Object(f.jsx)(r.Separator,{className:_.a.separator}),F()]}):Object(f.jsxs)(m.a,{className:_.a.modalTermsAndConditions,initialFocusElementId:R,open:a,title:"spa.deposits.creation.tyc",onClose:k,children:[Object(f.jsx)(m.a.Body,{children:D()}),Object(f.jsx)(m.a.Footer,{children:F()})]});function F(){var e=A||S?_.a.bottomSheetFooter:_.a.modalFooter;return Object(f.jsxs)(r.Box,{align:"end",className:e,children:[Object(f.jsx)(j.a,{inline:!0,label:{uuid:"spa.form.cancel"},type:"button",variant:"outlined",onClick:L}),Object(f.jsx)(j.a,{inline:!0,"data-focus-id":R,label:{uuid:"spa.form.accept"},type:"button",onClick:B})]})}function D(){var e=A||S?_.a.bottomSheetBody:_.a.modalBody;return Object(f.jsx)(r.Box,{className:e,mt:1,children:Object(f.jsx)(p.b,{color:"gray-dark",uuid:l.D,children:Object(f.jsx)("span",{ref:E,dangerouslySetInnerHTML:{__html:g}})})})}function B(){O(!1),x&&x()}function L(){k(),T&&T()}function k(){O(!a)}}T.defaultProps=x},435:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",modalCancel:"_rules_modalCancel__3p7fv",modalFooter:"_rules_modalFooter__diCuH",modalTermsAndConditions:"_rules_modalTermsAndConditions__1DLcO",modalBody:"_rules_modalBody__2xIYg",bottomSheetTermsAndConditions:"_rules_bottomSheetTermsAndConditions__2I7bt",title:"_rules_title__2HlRB",bottomSheetBody:"_rules_bottomSheetBody__TaT3s",bottomSheetFooter:"_rules_bottomSheetFooter__2HYeG",bottomSheetCancel:"_rules_bottomSheetCancel__1fOYL",body:"_rules_body__3yiYt",separator:"_rules_separator__3vejd"}},458:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",confirmTransaction:"_rules_confirmTransaction__33RmT",wrapper:"_rules_wrapper__2I89u",header:"_rules_header__2eSSU",title:"_rules_title__3HGqz",subtitle:"_rules_subtitle__2PrOW",info:"_rules_info__3NPxs",data:"_rules_data__2kw75",termsAndConditions:"_rules_termsAndConditions__3UfRX",messages:"_rules_messages__3uTWt",precancel:"_rules_precancel__1YopN",affidavit:"_rules_affidavit__21G43",actions:"_rules_actions__TIfNR"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=98.ad986e73.chunk.js.map