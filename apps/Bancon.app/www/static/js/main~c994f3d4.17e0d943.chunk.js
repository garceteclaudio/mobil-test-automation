(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[247],{111:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return u})),n.d(t,"c",(function(){return s}));var r=n(9),a="network",c=n(1),u=Object(c.b)(a,["set"]),i=Object(c.d)({status:"online"},(function(e){(0,e.addCase)(u.set,(function(e,t){var n=t.payload;e.status=n}))}));function o(e){return e[a]}o.status=Object(c.e)(o,(function(e){return e.status}));var s=Object(r.a)({},a,i)},158:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"c",(function(){return d})),n.d(t,"b",(function(){return j})),n.d(t,"d",(function(){return l}));var r=n(9),a=n(62),c="notifications",u={communicationsUnreadCount:0,communications:[],communicationSelected:void 0,notificationsActive:a.f.all,totalPages:0,pageNumber:1,fetching:!1,fetchingUnread:!1,readFetching:!1,error:void 0},i=n(2),o=n(1),s=n(12),b=n(0),f=n(5),j=Object(o.c)(c,{getNotificationsUnreadCount:function(e,t){return Object(f.a)(Object(b.a)().mark((function n(){var r,c,u;return Object(b.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.rejectWithValue,c=e.accessToken){n.next=4;break}return n.abrupt("return",null);case 4:return n.next=6,Object(a.c)({accessToken:c});case 6:if(u=n.sent){n.next=9;break}return n.abrupt("return",null);case 9:if(!Object(a.h)(u)){n.next=11;break}return n.abrupt("return",r(Object(i.a)(Object(i.a)({},u),a.e[u.code])));case 11:return n.abrupt("return",u);case 12:case"end":return n.stop()}}),n)})))()},getNotifications:function(e,t){return Object(f.a)(Object(b.a)().mark((function n(){var r,c,u;return Object(b.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.rejectWithValue,c=e.accessToken){n.next=4;break}return n.abrupt("return",null);case 4:return n.next=6,Object(a.a)({accessToken:c});case 6:if(u=n.sent){n.next=9;break}return n.abrupt("return",null);case 9:if(!Object(a.h)(u)){n.next=11;break}return n.abrupt("return",r(Object(i.a)(Object(i.a)({},u),a.e[u.code])));case 11:return n.abrupt("return",u);case 12:case"end":return n.stop()}}),n)})))()},getNotificationsByType:function(e,t){return Object(f.a)(Object(b.a)().mark((function n(){var r,c,u,o,s;return Object(b.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.rejectWithValue,c=e.accessToken,u=e.pageNumber,o=e.unread,c){n.next=4;break}return n.abrupt("return",null);case 4:return n.next=6,Object(a.b)({accessToken:c,unread:o,pageNumber:u});case 6:if(s=n.sent){n.next=9;break}return n.abrupt("return",null);case 9:if(!Object(a.h)(s)){n.next=11;break}return n.abrupt("return",r(Object(i.a)(Object(i.a)({},s),a.e[s.code])));case 11:return n.abrupt("return",s);case 12:case"end":return n.stop()}}),n)})))()},markAsReadCommunication:function(e,t){return Object(f.a)(Object(b.a)().mark((function n(){var r,c,u,o;return Object(b.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.rejectWithValue,c=e.accessToken,u=e.idCommunication,c){n.next=4;break}return n.abrupt("return",null);case 4:return n.next=6,Object(a.d)({accessToken:c,idCommunication:u});case 6:if(o=n.sent){n.next=9;break}return n.abrupt("return",null);case 9:if(!Object(a.h)(o)){n.next=11;break}return n.abrupt("return",r(Object(i.a)(Object(i.a)({},o),a.e[o.code])));case 11:return n.abrupt("return",o);case 12:case"end":return n.stop()}}),n)})))()},readCommunication:function(e,t){return Object(f.a)(Object(b.a)().mark((function n(){var r,c,u,o;return Object(b.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.rejectWithValue,c=e.accessToken,u=e.idCommunication,c){n.next=4;break}return n.abrupt("return",null);case 4:return n.next=6,Object(a.g)({accessToken:c,idCommunication:u});case 6:if(o=n.sent){n.next=9;break}return n.abrupt("return",null);case 9:if(!Object(a.h)(o)){n.next=11;break}return n.abrupt("return",r(Object(i.a)(Object(i.a)({},o),a.e[o.code])));case 11:return n.abrupt("return",o);case 12:case"end":return n.stop()}}),n)})))()}}),p=Object(o.b)(c,["setNotificationsActive","clean","cleanNotificationsList","cleanNotificationSelected"]),O=Object(o.d)(u,(function(e){var t=e.addCase,n=e.addMatcher;t(p.clean,(function(){return Object(i.a)({},u)})),t(p.setNotificationsActive,(function(e,t){var n=t.payload;e.notificationsActive=n})),t(p.cleanNotificationsList,(function(e){e.communications=[]})),t(p.cleanNotificationSelected,(function(e){e.communicationSelected=u.communicationSelected})),t(j.getNotificationsUnreadCount.fulfilled,(function(e,t){var n=t.payload;e.fetchingUnread=!1,n&&(e.communicationsUnreadCount=n.data.communicationsUnreadCount)})),t(j.getNotificationsUnreadCount.pending,(function(e){e.fetchingUnread=!0,e.error=u.error})),t(j.getNotifications.fulfilled,(function(e,t){var n=t.payload;if(e.fetching=!1,n){var r=n.data.communications;e.communications=r}})),t(j.getNotifications.pending,(function(e){e.fetching=!0,e.error=u.error})),t(j.getNotificationsByType.fulfilled,(function(e,t){var n=t.payload;if(e.fetching=!1,n){var r=n.data,a=r.communications,c=r.totalPages,u=r.pageNumber;e.communications=a,e.totalPages=c,e.pageNumber=u}})),t(j.getNotificationsByType.pending,(function(e){e.fetching=!0,e.error=u.error})),t(j.readCommunication.fulfilled,(function(e,t){var n=t.payload;e.readFetching=!1,n&&(e.communicationSelected=n.data)})),t(j.readCommunication.pending,(function(e){e.readFetching=!0})),n((function(e){return Object(s.c)(e,c)}),(function(e,t){var n=t.payload;e.fetching=!1,e.fetchingUnread=!1,e.error=n}))}));function d(e){return e[c]}d.communicationsUnreadCount=Object(o.e)(d,(function(e){return e.communicationsUnreadCount})),d.communicationsList=Object(o.e)(d,(function(e){return e.communications})),d.communicationSelected=Object(o.e)(d,(function(e){return e.communicationSelected})),d.totalPages=Object(o.e)(d,(function(e){return e.totalPages})),d.pageNumber=Object(o.e)(d,(function(e){return e.pageNumber})),d.communicationsFetching=Object(o.e)(d,(function(e){return e.fetching})),d.communicationsFetchingUnread=Object(o.e)(d,(function(e){return e.fetchingUnread})),d.communicationReadFetching=Object(o.e)(d,(function(e){return e.readFetching})),d.notificationsActive=Object(o.e)(d,(function(e){return e.notificationsActive})),d.error=Object(o.e)(d,(function(e){return e.error}));var l=Object(r.a)({},c,O)},49:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(1),a=n(18),c=Object(r.b)(a.b,["clean","showPresentation","finishPresentation","cleanEmail","setPersonalData","cleanValidationCodeEmail","setPhone","setAddress","cleanSetPhone","cleanValidationCodePhone","cleanRenaper","goToScanDniFront","setProvince","cleanLocalityAndNeighborhood","setNeighborhood","cleanPersonalData","cleanAddresData","cleanBranchOfficeData","hideDownloadApp","cleanTemplate","cleanWarnings","setActivity"])},54:function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var r=n(19),a=n(0),c=n(2),u=n(5),i=n(1),o=n(18),s=n(24),b=n(109),f=["exchangeToken","deviceModel","url","timeout"],j=Object(i.c)(o.b,{sendEmail:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,n.next=3,Object(s.o)({_email:e.email,_exchangeToken:e.exchangeToken});case 3:if(u=n.sent){n.next=6;break}return n.abrupt("return",null);case 6:if(!Object(s.u)(u)){n.next=8;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},u),s.f[u.code])));case 8:return n.abrupt("return",u);case 9:case"end":return n.stop()}}),n)})))()},sendCodeEmail:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,n.next=3,Object(s.m)({_validationCode:e.validationCode,_exchangeToken:e.exchangeToken});case 3:if(u=n.sent){n.next=6;break}return n.abrupt("return",null);case 6:if(!Object(s.u)(u)){n.next=8;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},u),s.f[u.code])));case 8:return n.abrupt("return",u);case 9:case"end":return n.stop()}}),n)})))()},getPersonalData:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u,i;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,u=e.exchangeToken,n.next=4,Object(s.e)({_exchangeToken:u});case 4:if(i=n.sent){n.next=7;break}return n.abrupt("return",null);case 7:if(!Object(s.u)(i)){n.next=9;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},i),s.f[i.code])));case 9:return n.abrupt("return",i);case 10:case"end":return n.stop()}}),n)})))()},sendPhone:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,n.next=3,Object(s.r)({_mobilePhoneCodeArea:e.mobilePhoneCodeArea,_mobilePhoneNumber:e.mobilePhoneNumber,_exchangeToken:e.exchangeToken});case 3:if(u=n.sent){n.next=6;break}return n.abrupt("return",null);case 6:if(!Object(s.u)(u)){n.next=8;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},u),s.f[u.code])));case 8:return n.abrupt("return",u);case 9:case"end":return n.stop()}}),n)})))()},sendPersonalData:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u,i,o,b,f,j;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,u=e.exchangeToken,i=e.countryBirth,o=e.activity,b=e.maritalStatus,f=e.occupation,n.next=4,Object(s.q)({_exchangeToken:u,countryBirth:i,activity:o,occupation:f,maritalStatus:b});case 4:if(j=n.sent){n.next=7;break}return n.abrupt("return",null);case 7:if(!Object(s.u)(j)){n.next=9;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},j),s.f[j.code])));case 9:return n.abrupt("return",j);case 10:case"end":return n.stop()}}),n)})))()},sendCodePhone:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,n.next=3,Object(s.n)({_validationCode:e.validationCode,_exchangeToken:e.exchangeToken});case 3:if(u=n.sent){n.next=6;break}return n.abrupt("return",null);case 6:if(!Object(s.u)(u)){n.next=8;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},u),s.f[u.code])));case 8:return n.abrupt("return",u);case 9:case"end":return n.stop()}}),n)})))()},sendFrontDocument:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,n.next=3,Object(s.p)({_exchangeToken:e.exchangeToken,_documentToSave:e.documentToSave,_documentData:e.documentData});case 3:if(u=n.sent){n.next=6;break}return n.abrupt("return",null);case 6:if(!Object(s.u)(u)){n.next=8;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},u),s.f[u.code])));case 8:return n.abrupt("return",u);case 9:case"end":return n.stop()}}),n)})))()},sendBackDocument:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,n.next=3,Object(s.k)({_exchangeToken:e.exchangeToken,_documentToSave:e.documentToSave,_documentData:e.documentData,_deviceFingerprintData:e.fingerPrintDeviceInfo});case 3:if(u=n.sent){n.next=6;break}return n.abrupt("return",null);case 6:if(!Object(s.u)(u)){n.next=8;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},u),s.f[u.code])));case 8:return n.abrupt("return",u);case 9:case"end":return n.stop()}}),n)})))()},sendSelfie:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,n.next=3,Object(s.s)({_exchangeToken:e.exchangeToken,_imagesToSave:e.imagesToSave});case 3:if(u=n.sent){n.next=6;break}return n.abrupt("return",null);case 6:if(!Object(s.u)(u)){n.next=8;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},u),s.f[u.code])));case 8:return n.abrupt("return",u);case 9:case"end":return n.stop()}}),n)})))()},preStep8:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u,i;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,u=e.exchangeToken,n.next=4,Object(s.g)({_exchangeToken:u});case 4:if(i=n.sent){n.next=7;break}return n.abrupt("return",null);case 7:if(!Object(s.u)(i)){n.next=9;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},i),s.f[i.code])));case 9:return n.abrupt("return",i);case 10:case"end":return n.stop()}}),n)})))()},getLocalities:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u,i,o;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,u=e.province,i=e.exchangeToken,n.next=4,Object(s.c)({provinceId:u,_exchangeToken:i});case 4:if(o=n.sent){n.next=7;break}return n.abrupt("return",null);case 7:if(!Object(s.u)(o)){n.next=9;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},o),s.f[o.code])));case 9:return n.abrupt("return",o);case 10:case"end":return n.stop()}}),n)})))()},getNeighborhoods:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u,i,o,b;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,u=e.locality,i=e.exchangeToken,o=e.province,n.next=4,Object(s.d)({localityId:u,_exchangeToken:i,provinceId:o});case 4:if(b=n.sent){n.next=7;break}return n.abrupt("return",null);case 7:if(!Object(s.u)(b)){n.next=9;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},b),s.f[b.code])));case 9:return n.abrupt("return",b);case 10:case"end":return n.stop()}}),n)})))()},sendAddressData:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u,i;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,u=e.exchangeToken,n.next=4,Object(s.j)(Object(c.a)({_exchangeToken:u},e));case 4:if(i=n.sent){n.next=7;break}return n.abrupt("return",null);case 7:if(!Object(s.u)(i)){n.next=9;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},i),s.f[i.code])));case 9:return n.abrupt("return",i);case 10:case"end":return n.stop()}}),n)})))()},preStep9:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u,i;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,u=e.exchangeToken,n.next=4,Object(s.h)({_exchangeToken:u});case 4:if(i=n.sent){n.next=7;break}return n.abrupt("return",null);case 7:if(!Object(s.u)(i)){n.next=9;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},i),s.f[i.code])));case 9:return n.abrupt("return",i);case 10:case"end":return n.stop()}}),n)})))()},sendBranchOfficeData:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u,i,o,b;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,u=e.exchangeToken,i=e.branch,o=e.termConditions,n.next=4,Object(s.l)({_exchangeToken:u,branch:i,termConditions:o});case 4:if(b=n.sent){n.next=7;break}return n.abrupt("return",null);case 7:if(!Object(s.u)(b)){n.next=9;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},b),s.f[b.code])));case 9:return n.abrupt("return",b);case 10:case"end":return n.stop()}}),n)})))()},securitySealList:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t.rejectWithValue,e){n.next=3;break}return n.abrupt("return",null);case 3:return n.next=5,Object(s.i)(Object(c.a)({},e));case 5:if(u=n.sent){n.next=8;break}return n.abrupt("return",null);case 8:if(!Object(s.u)(u)){n.next=10;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},u),s.f[u.code])));case 10:return n.abrupt("return",u);case 11:case"end":return n.stop()}}),n)})))()},downloadTemplate:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var r,u,i,o;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=t.rejectWithValue,u=e.exchangeToken,i=e.templateType,n.next=4,Object(s.b)({_exchangeToken:u,templateType:i});case 4:if(o=n.sent){n.next=7;break}return n.abrupt("return",null);case 7:if(!Object(s.u)(o)){n.next=9;break}return n.abrupt("return",r(Object(c.a)(Object(c.a)({},o),s.f[o.code])));case 9:return n.abrupt("return",o);case 10:case"end":return n.stop()}}),n)})))()},createUser:function(e,t){return Object(u.a)(Object(a.a)().mark((function n(){var u,i,o,j,p,O,d,l,h,x,m;return Object(a.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return u=t.rejectWithValue,i=e.exchangeToken,o=e.deviceModel,j=e.url,p=e.timeout,O=Object(r.a)(e,f),n.next=4,Object(b.a)({url:j,timeout:p});case 4:return d=n.sent,l=d.fingerPrintDeviceInfo,h=d.fingerprintHash,x=d.randomSeed,n.next=10,Object(s.a)(Object(c.a)({_exchangeToken:i,_deviceFingerprintData:l,_fingerprint:h,_randomSeed:x,_deviceModel:o},O));case 10:if(m=n.sent){n.next=13;break}return n.abrupt("return",null);case 13:if(!Object(s.u)(m)){n.next=15;break}return n.abrupt("return",u(Object(c.a)(Object(c.a)({},m),s.f[m.code])));case 15:return n.abrupt("return",m);case 16:case"end":return n.stop()}}),n)})))()}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=main~c994f3d4.17e0d943.chunk.js.map