(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[94],{207:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return b}));var n=a(2),c=a(16),r=a(11),i=a(8),s=a(518),l=a(89),o=a(6),u=a(270),d=a(51),E=a(641),_=a(10);function b(){var e=Object(d.qb)(),t=Object(d.rb)().id,a=void 0===t?o.D:t,b=r.b.useState(o.D),M=Object(c.a)(b,2),T=M[0],O=M[1],m=r.b.useState([]),f=Object(c.a)(m,2),j=f[0],N=f[1],A=Object(i.c)(l.e.legacyFeatures),P=Object(d.sb)(d.n),h=Object(d.sb)(d.s),p=Object(l.f)(a),x=Object(d.ub)(),R=Object(c.a)(x,1)[0];return r.b.useEffect((function(){window.scrollTo({top:o.Sb,left:o.Sb,behavior:"smooth"})}),[]),r.b.useEffect((function(){var t;if(!1!==p){var n=A[a];if(null===p||p.sections&&!p.sections.length||n){if(n){var c=Object(s.a)(h,a);return void e({pathname:c,search:"?".concat(R)},{replace:!0})}e(P)}else if(null===(t=p.sections)||void 0===t||!t.length){var r=Object(s.a)(h,p.legacy);e(r,{replace:!0})}}}),[a,p,A,e,R,P,h]),r.b.useEffect((function(){function e(t){var a,c,r=null!==(a=A[t.legacy])&&void 0!==a&&a.url.includes("https")?null===(c=A[t.legacy])||void 0===c?void 0:c.url:t.legacy;return Object(n.a)(Object(n.a)({},t),{},{url:Object(s.a)(h,r),sections:(t.sections||[]).map(e)})}if(p){var t=p.sections||[],c=t.map(e);if(a!==T&&(O(a),c!==j)){var r=t.map(e);N(r)}}}),[a,p,A,T,j,h]),p?Object(_.jsx)(E.a,{item:p,sections:j}):Object(_.jsx)(u.a,{})}},597:function(e,t,a){e.exports={NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_CARD:"Card",NAME_LATERAL_MENU:"CardLateralMenu",TYPE_LATERAL_MENU:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_MODAL:"Modal",TYPE_MODAL:"Element",disabled:"_rules_disabled__ZPdNp",clickable:"_rules_clickable__3XF1m",mainTitle:"_rules_mainTitle__SZuES",info:"_rules_info__4dq3Q",closeButton:"_rules_closeButton__2SFOS",main_title:"_rules_main_title__2gLoQ"}},628:function(e,t,a){e.exports={NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_CARD:"Card",NAME_LATERAL_MENU:"CardLateralMenu",TYPE_LATERAL_MENU:"Element"}},629:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",landingSection:"_rules_landingSection__3MG8h",title:"_rules_title__2IOX4",subtitle:"_rules_subtitle__P7LwF",cards:"_rules_cards__8dN7Q",card:"_rules_card__-OnhU",fooContainer:"_rules_fooContainer__20HY4",footerTitle:"_rules_footerTitle__MpD2-",footerDescription:"_rules_footerDescription__pRimw"}},641:function(e,t,a){"use strict";a.d(t,"a",(function(){return F}));var n=a(16),c=a(11),r=a(6),i=a(38),s=a(2),l=a(19),o=a(50),u=a(41),d=a(33),E=a(79),_=a(513),b=a(82),M=a(556),T=a.n(M),O=a(628),m=a.n(O),f=a(490),j=a(597),N=a.n(j),A=a(10),P=["modal.info.report-credit-card.firstItem","modal.info.report-credit-card.secondItem","modal.info.report-credit-card.thirdItem"];function h(e){var t=e,a=t.isModalOpen,n=t.handleModal;return Object(A.jsxs)(f.a,{closeOnBgTap:!0,hasCloseIcon:!1,open:a,title:"spa.report-credit-card.modal.title",onClose:n,children:[Object(A.jsx)(f.a.Body,{children:P.map((function(e){return Object(A.jsx)(i.b,{className:N.a.info,uuid:e},e)}))}),Object(A.jsx)("div",{className:N.a.closeButton,children:Object(A.jsx)(b.a,{label:{uuid:"spa.report-credit-card.modal.buttonText"},size:"small",variant:"text",onClick:n})})]})}var p=["className","textHeader","href","isModal","isClickable","callback","id"],x=(T.a.NAME_CARD,m.a.NAME_LATERAL_MENU),R=m.a.TYPE_LATERAL_MENU;function L(e){var t=Object(i.c)().textGet,a=e,r=a.className,M=a.textHeader,T=a.href,O=a.isModal,m=a.isClickable,f=a.callback,j=a.id,P=Object(l.a)(a,p),L=c.b.useRef(null),v=Boolean(f),C=Object(d.h)(j),S=Object(d.f)(j),g=f||function(){return I(!0)},F=Object(u.c)(!y()&&N.a.disabled),H=Object(E.d)().showErrorToast,D=c.b.useState(!1),k=Object(n.a)(D,2),Y=k[0],I=k[1],B=t({uuid:M});return y()?Object(A.jsx)(u.a,{className:F,name:x,type:R,children:function(){if(v||O)return Object(A.jsxs)(c.b.Fragment,{children:[Object(A.jsx)(b.a,{flowId:j,kind:"plain",label:{uuid:M},onClick:g,children:U()}),O&&Object(A.jsx)(h,{handleModal:w,isModalOpen:Y})]});return Object(A.jsx)(_.a,{preventNavigateCallback:X,to:T,children:U()})}()}):null;function U(){return Object(A.jsxs)(o.Card,Object(s.a)(Object(s.a)({className:Object(u.c)(r,m&&N.a.clickable)},P),{},{children:[Object(A.jsx)("header",{children:Object(A.jsx)(i.b,{className:N.a.mainTitle,tag:"span",uuid:M})}),Object(A.jsx)("footer",{ref:L,children:Object(A.jsx)(o.Icon,{name:"right",size:"small"})})]}))}function y(){return!!O||S}function X(){return C||H("spa.feature.error.permission",B),C}function w(){return I(!1)}}L.defaultProps={isClickable:!1,isModal:!1},L.displayName=x;var v=a(51),C=a(497),S=a(629),g=a.n(S);function F(e){var t=e,a=t.item,s=t.sections,l=Object(v.sb)(v.n),o=Object(v.qb)(),u=Object(v.rb)().id,d=void 0===u?"":u,E=c.b.useState(!1),_=Object(n.a)(E,2),b=_[0],M=_[1],T=c.b.useState(r.D),O=Object(n.a)(T,2),m=O[0],f=O[1];return c.b.useLayoutEffect((function(){a&&a.sections&&(M(!1),a.sections.map((function(e){return e.sections&&M(!0),e})),f("menu.products.title.".concat(d)))}),[a,d,M]),Object(A.jsxs)(C.a,{withFooter:!0,withoutBox:!0,className:g.a.landingSection,"header-onBack":function(){o(l)},children:[b?s.map((function(e){return Object(A.jsxs)("div",{children:[Object(A.jsx)(i.b,{className:g.a.title,tag:"h4",uuid:e.name}),e.description&&Object(A.jsx)(i.b,{className:g.a.subtitle,tag:"h6",uuid:e.description}),Object(A.jsx)("div",{className:g.a.cards,children:(e.sections||[]).map((function(e){return Object(A.jsx)(L,{isClickable:!0,callback:e.callback,className:g.a.card,href:e.url,id:j(e),isModal:e.modal,textHeader:e.name},e.id)}))})]},e.id)})):Object(A.jsxs)(c.b.Fragment,{children:[Object(A.jsx)(i.b,{className:g.a.title,tag:"h4",uuid:m}),Object(A.jsx)("div",{className:g.a.cards,children:s.map((function(e){return Object(A.jsx)(L,{isClickable:!0,className:g.a.card,href:e.url,id:j(e),textHeader:e.name},e.id)}))})]}),function(){var e=[];if(a&&a.footerInfo)for(var t=r.Sb;t<(null===(n=a.footerInfo)||void 0===n?void 0:n.quantity);t++){var n;e.push(Object(A.jsxs)("div",{className:g.a.fooContainer,children:[Object(A.jsx)(i.b,{className:g.a.footerTitle,uuid:"".concat(a.footerInfo.title,".").concat(t)}),Object(A.jsx)(i.b,{className:g.a.footerDescription,uuid:"".concat(a.footerInfo.description,".").concat(t)})]},"footer_".concat(t)))}return e.map((function(e){return e}))}()]});function j(e){return e.legacy&&!e.legacy.includes("http")?e.legacy:e.id}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvTGVnYWN5L2luZGV4LnRzeCIsIndlYnBhY2s6Ly8vLi4vYmFuY29yLWNvbXBvbmVudHMvRWxlbWVudC9DYXJkL0xhdGVyYWxNZW51L19ydWxlcy5tb2R1bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi4vYmFuY29yLWNvbXBvbmVudHMvRWxlbWVudC9DYXJkL0xhdGVyYWxNZW51L19pbmRleC5zY3NzIiwid2VicGFjazovLy8uL3NyYy9zZWN0aW9ucy9MYW5kaW5nU2VjdGlvbi9fcnVsZXMubW9kdWxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4uL2JhbmNvci1jb21wb25lbnRzL0VsZW1lbnQvQ2FyZC9MYXRlcmFsTWVudS9SZXBvcnRDcmVkaXRDYXJkTW9kYWwudHN4Iiwid2VicGFjazovLy8uLi9iYW5jb3ItY29tcG9uZW50cy9FbGVtZW50L0NhcmQvTGF0ZXJhbE1lbnUvaW5kZXgudHN4Iiwid2VicGFjazovLy8uL3NyYy9zZWN0aW9ucy9MYW5kaW5nU2VjdGlvbi9pbmRleC50c3giXSwibmFtZXMiOlsiTGVnYWN5IiwibmF2aWdhdGUiLCJ1c2VOYXZpZ2F0ZSIsIl91c2VQYXJhbXMkaWQiLCJ1c2VQYXJhbXMiLCJpZCIsIkVNUFRZX1NUUklORyIsIl9SZWFjdCR1c2VTdGF0ZSIsIlJlYWN0IiwidXNlU3RhdGUiLCJfUmVhY3QkdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkiLCJyb3V0ZSIsInNldFJvdXRlIiwiX1JlYWN0JHVzZVN0YXRlMyIsIl9SZWFjdCR1c2VTdGF0ZTQiLCJzZWN0aW9uTGlzdCIsInNldFNlY3Rpb25MaXN0IiwibGVnYWN5RGF0YSIsInVzZVNlbGVjdG9yIiwiU2VsZWN0b3JTbGljZUxlZ2FjeSIsImxlZ2FjeUZlYXR1cmVzIiwidXJsSG9tZSIsInVzZVBhdGgiLCJST1VURV9QQVRIX0hPTUUiLCJ1cmxSZW5kZXIiLCJST1VURV9QQVRIX0xFR0FDWV9SRU5ERVIiLCJpdGVtIiwidXNlTWVudUl0ZW0iLCJfdXNlU2VhcmNoUGFyYW1zIiwidXNlU2VhcmNoUGFyYW1zIiwic2VhcmNoUGFyYW1zIiwidXNlRWZmZWN0Iiwid2luZG93Iiwic2Nyb2xsVG8iLCJ0b3AiLCJaRVJPIiwibGVmdCIsImJlaGF2aW9yIiwiX2l0ZW0kc2VjdGlvbnMiLCJsZWdhY3lSZWZlcmVuY2UiLCJzZWN0aW9ucyIsImxlbmd0aCIsInVybExlZ2FjeVJlbmRlciIsImdldExlZ2FjeVBhdGgiLCJwYXRobmFtZSIsInNlYXJjaCIsImNvbmNhdCIsInJlcGxhY2UiLCJ1cmxMZWdhY3kiLCJsZWdhY3kiLCJoYW5kbGVJdGVtTWFwcGluZ0xlZ2FjeSIsIl9pdGVtIiwiX2xlZ2FjeURhdGEkX2l0ZW0kbGVnIiwiX2xlZ2FjeURhdGEkX2l0ZW0kbGVnMiIsImhyZWYiLCJ1cmwiLCJpbmNsdWRlcyIsIl9vYmplY3RTcHJlYWQiLCJtYXAiLCJpdGVtTGlzdCIsIm1hcExpc3QiLCJfanN4IiwiTGFuZGluZ1NlY3Rpb24iLCJMb2FkaW5nIiwibW9kdWxlIiwiZXhwb3J0cyIsImluZm9MaXN0IiwiUmVwb3J0Q3JlZGl0Q2FyZE1vZGFsIiwicHJvcHMiLCJfcmVmIiwiaXNNb2RhbE9wZW4iLCJoYW5kbGVNb2RhbCIsIl9qc3hzIiwiTW9kYWwiLCJjbG9zZU9uQmdUYXAiLCJoYXNDbG9zZUljb24iLCJvcGVuIiwidGl0bGUiLCJvbkNsb3NlIiwiY2hpbGRyZW4iLCJCb2R5IiwiVGV4dCIsImNsYXNzTmFtZSIsIlJ1bGVzIiwiaW5mbyIsInV1aWQiLCJjbG9zZUJ1dHRvbiIsIkJ1dHRvbiIsImxhYmVsIiwic2l6ZSIsInZhcmlhbnQiLCJvbkNsaWNrIiwiTkFNRV9MQVRFUkFMX01FTlUiLCJOYW1lc3BhY2VDYXJkIiwiTkFNRV9DQVJEIiwiTmFtZXNwYWNlQ2FyZExhdGVyYWxNZW51IiwiVFlQRV9MQVRFUkFMX01FTlUiLCJMYXRlcmFsTWVudUNhcmQiLCJ0ZXh0R2V0IiwidXNlVGV4dCIsInRleHRIZWFkZXIiLCJpc01vZGFsIiwiaXNDbGlja2FibGUiLCJjYWxsYmFjayIsInJlc3QiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJfZXhjbHVkZWQiLCJmb290ZXJSZWYiLCJ1c2VSZWYiLCJoYXNDYWxsYmFjayIsIkJvb2xlYW4iLCJpc1Blcm1pc3Npb24iLCJ1c2VQZXJtaXNzaW9uRmVhdHVyZSIsImlzQXZhaWxhYmxlIiwidXNlQXZhaWxhYmxlRmVhdHVyZSIsImJ1dHRvbkNhbGxiYWNrIiwic2V0U2hvd01vZGFsIiwiY2xhc3NOYW1lcyIsImdldENsYXNzTmFtZSIsImhhbmRsZUlzQXZhaWxhYmxlIiwiZGlzYWJsZWQiLCJzaG93RXJyb3JUb2FzdCIsInVzZVNob3dUb2FzdCIsInNob3dNb2RhbCIsInRleHRSZXBsYWNlIiwiQ29tcG9uZW50IiwibmFtZSIsInR5cGUiLCJGcmFnbWVudCIsImZsb3dJZCIsImtpbmQiLCJnZXRDYXJkQ29udGVudCIsImhhbmRsZUNsb3NlTW9kYWwiLCJMaW5rIiwicHJldmVudE5hdmlnYXRlQ2FsbGJhY2siLCJ0byIsImdldEVsZW1lbnQiLCJDYXJkIiwiY2xpY2thYmxlIiwibWFpblRpdGxlIiwidGFnIiwicmVmIiwiSWNvbiIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwibW9yZVNlY3Rpb25zIiwic2V0TW9yZVNlY3Rpb25zIiwibWVudVRpdGxlIiwic2V0TWVudVRpdGxlIiwidXNlTGF5b3V0RWZmZWN0Iiwic2VjdGlvbiIsIkludGVybmFsQ29udGFpbmVyIiwid2l0aEZvb3RlciIsIndpdGhvdXRCb3giLCJsYW5kaW5nU2VjdGlvbiIsImRlc2NyaXB0aW9uIiwic3VidGl0bGUiLCJjYXJkcyIsImNhcmQiLCJoYW5kbGVWYWxpZGF0ZUlEIiwibW9kYWwiLCJmb290ZXJTZWN0aW9ucyIsImZvb3RlckluZm8iLCJpIiwiX2l0ZW0kZm9vdGVySW5mbyIsInF1YW50aXR5IiwicHVzaCIsImZvb0NvbnRhaW5lciIsImZvb3RlclRpdGxlIiwiZm9vdGVyRGVzY3JpcHRpb24iLCJmb290ZXJTZWN0aW9u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RyxPQUdUNkcsRUFBSzFKLEVBQ2hCLENBMEJKLEMiLCJmaWxlIjoic3RhdGljL2pzLzk0Ljc2N2RjNzFmLmNodW5rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJAcGtnL3JlYWN0XCI7XG5cbmltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSBcIkBhcHAvYmFuY29uLWRhdGFcIjtcbmltcG9ydCB0eXBlIHsgTlNBUElsZWdhY3kgfSBmcm9tIFwiQGFwcC9iYW5jb24tZGF0YS9hcGkvbGVnYWN5XCI7XG5pbXBvcnQgeyBnZXRMZWdhY3lQYXRoIH0gZnJvbSBcIkBhcHAvYmFuY29uLWRhdGEvdXRpbHMvbGVnYWN5XCI7XG5pbXBvcnQgeyBTZWxlY3RvclNsaWNlTGVnYWN5LCB1c2VNZW51SXRlbSB9IGZyb20gXCJAYXBwL2JhbmNvbi1kYXRhL3NsaWNlcy9sZWdhY3lcIjtcbmltcG9ydCB7IEVNUFRZX1NUUklORywgWkVSTyB9IGZyb20gXCJAYXBwL2JhbmNvbi1kYXRhL2NvbnN0YW50c1wiO1xuXG5pbXBvcnQgeyBMb2FkaW5nIH0gZnJvbSBcIkBhcHAvYmFuY29yLWNvbXBvbmVudHMvRWxlbWVudC9Mb2FkaW5nXCI7XG5cbmltcG9ydCB7XG4gICAgdXNlTmF2aWdhdGUsXG4gICAgdXNlUGF0aCxcbiAgICB1c2VQYXJhbXMsXG4gICAgUk9VVEVfUEFUSF9IT01FLFxuICAgIFJPVVRFX1BBVEhfTEVHQUNZX1JFTkRFUixcbiAgICB1c2VTZWFyY2hQYXJhbXMsXG59IGZyb20gXCJ+L3JvdXRlc1wiO1xuXG5pbXBvcnQgeyBMYW5kaW5nU2VjdGlvbiB9IGZyb20gXCJ+L3NlY3Rpb25zL0xhbmRpbmdTZWN0aW9uXCI7XG5pbXBvcnQgdHlwZSB7IE1lbnVJdGVtIH0gZnJvbSBcIn4vY29udGFpbmVycy9JbnRlcm5hbC9fTWVudS90eXBlc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMZWdhY3koKSB7XG4gICAgY29uc3QgbmF2aWdhdGUgPSB1c2VOYXZpZ2F0ZSgpO1xuICAgIGNvbnN0IHsgaWQgPSBFTVBUWV9TVFJJTkcgfSA9IHVzZVBhcmFtcygpO1xuXG4gICAgY29uc3QgW3JvdXRlLCBzZXRSb3V0ZV0gPSBSZWFjdC51c2VTdGF0ZTxzdHJpbmc+KEVNUFRZX1NUUklORyk7XG4gICAgY29uc3QgW3NlY3Rpb25MaXN0LCBzZXRTZWN0aW9uTGlzdF0gPSBSZWFjdC51c2VTdGF0ZTxNZW51SXRlbVtdPihbXSk7XG5cbiAgICBjb25zdCBsZWdhY3lEYXRhID0gdXNlU2VsZWN0b3IoU2VsZWN0b3JTbGljZUxlZ2FjeS5sZWdhY3lGZWF0dXJlcyk7XG5cbiAgICBjb25zdCB1cmxIb21lID0gdXNlUGF0aChST1VURV9QQVRIX0hPTUUpO1xuICAgIGNvbnN0IHVybFJlbmRlciA9IHVzZVBhdGgoUk9VVEVfUEFUSF9MRUdBQ1lfUkVOREVSKTtcbiAgICBjb25zdCBpdGVtID0gdXNlTWVudUl0ZW0oaWQpO1xuICAgIGNvbnN0IFtzZWFyY2hQYXJhbXNdID0gdXNlU2VhcmNoUGFyYW1zKCk7XG5cbiAgICAvLyBPbiByZW5kZXIsIG5hdmlnYXRlIHRvIHRoZSB0b3Agb2YgdGhlIHBhZ2VcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oeyB0b3A6IFpFUk8sIGxlZnQ6IFpFUk8sIGJlaGF2aW9yOiBcInNtb290aFwiIH0pO1xuICAgIH0sIFtdKTtcblxuICAgIC8vIElmIGl0ZW0gaXNuJ3QgYXZhaWxhYmxlLCBsb2FkaW5nLCBvciBuZWVkcyBhIHJlZGlyZWN0aW9uLCBoYW5kbGUgaXQgaGVyZS5cbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICAvLyBpdGVtIGlzIHN0aWxsIGJlaW5nIGxvYWRlZCwgd2FpdCB1bnRpbCByZXNvbHZlZC5cbiAgICAgICAgaWYgKGl0ZW0gPT09IGZhbHNlKSByZXR1cm47XG4gICAgICAgIC8vIGlmIGtleSBpcyBub3Qgd2l0aGluIGZlYXR1cmVHcm91cCAobWVudSBpdGVtcykgaXQgd2lsbCBjaGVjayBpZiBpdHMgb24gbGVnYWN5RmVhdHVyZShsaW5rcyBvdXRzaWRlIG1lbnUpXG5cbiAgICAgICAgLy9UT0RPOiBBbmFsaXphciBwb3NpYmxlIG1lam9yYSBwYXJhIGxhIHNvbHVjacOzbiBkZWwgZW52w61vIGRlIHBhcsOhbWV0cm9zIHBhcmEgVVJMIExlZ2FjeVxuICAgICAgICBjb25zdCBsZWdhY3lSZWZlcmVuY2UgPSBsZWdhY3lEYXRhW2lkXTtcbiAgICAgICAgaWYgKGl0ZW0gPT09IG51bGwgfHwgKGl0ZW0uc2VjdGlvbnMgJiYgIWl0ZW0uc2VjdGlvbnMubGVuZ3RoKSB8fCBsZWdhY3lSZWZlcmVuY2UpIHtcbiAgICAgICAgICAgIGlmIChsZWdhY3lSZWZlcmVuY2UpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB1cmxMZWdhY3lSZW5kZXIgPSBnZXRMZWdhY3lQYXRoKHVybFJlbmRlciwgaWQpO1xuICAgICAgICAgICAgICAgIG5hdmlnYXRlKFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZTogdXJsTGVnYWN5UmVuZGVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2VhcmNoOiBgPyR7c2VhcmNoUGFyYW1zfWAsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgcmVwbGFjZTogdHJ1ZSB9LFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmF2aWdhdGUodXJsSG9tZSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBpdGVtIGF2YWlsYWJsZSwgaWYgaXQgaGFzIHNlY3Rpb25zLCBkbyBub3RoaW5nLlxuICAgICAgICBpZiAoaXRlbS5zZWN0aW9ucz8ubGVuZ3RoKSByZXR1cm47XG4gICAgICAgIGNvbnN0IHVybExlZ2FjeSA9IGdldExlZ2FjeVBhdGgodXJsUmVuZGVyLCBpdGVtLmxlZ2FjeSk7XG4gICAgICAgIG5hdmlnYXRlKHVybExlZ2FjeSwgeyByZXBsYWNlOiB0cnVlIH0pO1xuICAgIH0sIFtpZCwgaXRlbSwgbGVnYWN5RGF0YSwgbmF2aWdhdGUsIHNlYXJjaFBhcmFtcywgdXJsSG9tZSwgdXJsUmVuZGVyXSk7XG5cbiAgICAvL0lmIHRoZSByb3V0ZSB1cGRhdGVzIGFuZCBoYXMgZGlmZmVyZW50IHNlY3Rpb25zLCBpdCB3aWxsIHVwZGF0ZSBzZWN0aW9ucyB0byByZW5kZXJcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBmdW5jdGlvbiBoYW5kbGVJdGVtTWFwcGluZ0xlZ2FjeShfaXRlbTogTlNBUElsZWdhY3kuRmVhdHVyZUdyb3VwKTogTWVudUl0ZW0ge1xuICAgICAgICAgICAgLy9jaGVjayBsZWdhY3kgbGFuZGluZyBleHRlcm5hbCB1cmxcbiAgICAgICAgICAgIGNvbnN0IGhyZWYgPSBsZWdhY3lEYXRhW19pdGVtLmxlZ2FjeV0/LnVybC5pbmNsdWRlcyhcImh0dHBzXCIpXG4gICAgICAgICAgICAgICAgPyBsZWdhY3lEYXRhW19pdGVtLmxlZ2FjeV0/LnVybFxuICAgICAgICAgICAgICAgIDogX2l0ZW0ubGVnYWN5O1xuXG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLl9pdGVtLFxuICAgICAgICAgICAgICAgIHVybDogZ2V0TGVnYWN5UGF0aCh1cmxSZW5kZXIsIGhyZWYpLFxuICAgICAgICAgICAgICAgIHNlY3Rpb25zOiAoX2l0ZW0uc2VjdGlvbnMgfHwgW10pLm1hcChoYW5kbGVJdGVtTWFwcGluZ0xlZ2FjeSksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGl0ZW0pIHtcbiAgICAgICAgICAgIGNvbnN0IGl0ZW1MaXN0ID0gaXRlbS5zZWN0aW9ucyB8fCBbXTtcbiAgICAgICAgICAgIGNvbnN0IHNlY3Rpb25zID0gaXRlbUxpc3QubWFwKGhhbmRsZUl0ZW1NYXBwaW5nTGVnYWN5KTtcbiAgICAgICAgICAgIC8vY2hlY2tzIGlmIHRoZSBjb250ZW50IHRoYXQgbmVlZHMgdG8gYmUgcmVuZGVyZWQgaXMgZGlmZmVyZW50IHdoZW4gdGhlIHJvdXRlIHVwZGF0ZXNcbiAgICAgICAgICAgIGlmIChpZCAhPT0gcm91dGUpIHtcbiAgICAgICAgICAgICAgICBzZXRSb3V0ZShpZCk7XG4gICAgICAgICAgICAgICAgaWYgKHNlY3Rpb25zICE9PSBzZWN0aW9uTGlzdCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtYXBMaXN0ID0gaXRlbUxpc3QubWFwKGhhbmRsZUl0ZW1NYXBwaW5nTGVnYWN5KTtcbiAgICAgICAgICAgICAgICAgICAgc2V0U2VjdGlvbkxpc3QobWFwTGlzdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwgW2lkLCBpdGVtLCBsZWdhY3lEYXRhLCByb3V0ZSwgc2VjdGlvbkxpc3QsIHVybFJlbmRlcl0pO1xuXG4gICAgaWYgKCFpdGVtKSByZXR1cm4gPExvYWRpbmcgLz47XG5cbiAgICByZXR1cm4gPExhbmRpbmdTZWN0aW9uIGl0ZW09e2l0ZW19IHNlY3Rpb25zPXtzZWN0aW9uTGlzdH0gLz47XG59XG4iLCIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiTkFNRV9YU1wiOlwieHNcIixcIk5BTUVfU01cIjpcInNtXCIsXCJOQU1FX01EXCI6XCJtZFwiLFwiTkFNRV9MR1wiOlwibGdcIixcIk5BTUVfVEhFTUVQTEFURk9STVwiOlwiVGhlbWVQbGF0Zm9ybVwiLFwiVFlQRV9USEVNRVBMQVRGT1JNXCI6XCJCdW5kbGVcIixcIk5BTUVfQ09OU1VNRVJfVEhFTUVQTEFURk9STVwiOlwiVGhlbWVQbGF0Zm9ybUNvbnN1bWVyXCIsXCJUWVBFX0NPTlNVTUVSX1RIRU1FUExBVEZPUk1cIjpcIkVsZW1lbnRcIixcIk5BTUVfUFJPVklERVJfVEhFTUVQTEFURk9STVwiOlwiVGhlbWVQbGF0Zm9ybVByb3ZpZGVyXCIsXCJUWVBFX1BST1ZJREVSX1RIRU1FUExBVEZPUk1cIjpcIlByb3ZpZGVyXCIsXCJOQU1FX1RFWFRcIjpcIlRleHRcIixcIlRZUEVfVEVYVFwiOlwiRWxlbWVudFwiLFwiTkFNRV9CVVRUT05cIjpcIkJ1dHRvblwiLFwiVFlQRV9CVVRUT05cIjpcIkVsZW1lbnRcIixcIk5BTUVfQ0FSRFwiOlwiQ2FyZFwiLFwiTkFNRV9MQVRFUkFMX01FTlVcIjpcIkNhcmRMYXRlcmFsTWVudVwiLFwiVFlQRV9MQVRFUkFMX01FTlVcIjpcIkVsZW1lbnRcIixcIk5BTUVfTElOS1wiOlwiTGlua1wiLFwiVFlQRV9MSU5LXCI6XCJFbGVtZW50XCIsXCJOQU1FX01PREFMXCI6XCJNb2RhbFwiLFwiVFlQRV9NT0RBTFwiOlwiRWxlbWVudFwiLFwiZGlzYWJsZWRcIjpcIl9ydWxlc19kaXNhYmxlZF9fWlBkTnBcIixcImNsaWNrYWJsZVwiOlwiX3J1bGVzX2NsaWNrYWJsZV9fM1hGMW1cIixcIm1haW5UaXRsZVwiOlwiX3J1bGVzX21haW5UaXRsZV9fU1p1RVNcIixcImluZm9cIjpcIl9ydWxlc19pbmZvX180ZHEzUVwiLFwiY2xvc2VCdXR0b25cIjpcIl9ydWxlc19jbG9zZUJ1dHRvbl9fMlNGT1NcIixcIm1haW5fdGl0bGVcIjpcIl9ydWxlc19tYWluX3RpdGxlX18yZ0xvUVwifTsiLCIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbm1vZHVsZS5leHBvcnRzID0ge1wiTkFNRV9YU1wiOlwieHNcIixcIk5BTUVfU01cIjpcInNtXCIsXCJOQU1FX01EXCI6XCJtZFwiLFwiTkFNRV9MR1wiOlwibGdcIixcIk5BTUVfVEhFTUVQTEFURk9STVwiOlwiVGhlbWVQbGF0Zm9ybVwiLFwiVFlQRV9USEVNRVBMQVRGT1JNXCI6XCJCdW5kbGVcIixcIk5BTUVfQ09OU1VNRVJfVEhFTUVQTEFURk9STVwiOlwiVGhlbWVQbGF0Zm9ybUNvbnN1bWVyXCIsXCJUWVBFX0NPTlNVTUVSX1RIRU1FUExBVEZPUk1cIjpcIkVsZW1lbnRcIixcIk5BTUVfUFJPVklERVJfVEhFTUVQTEFURk9STVwiOlwiVGhlbWVQbGF0Zm9ybVByb3ZpZGVyXCIsXCJUWVBFX1BST1ZJREVSX1RIRU1FUExBVEZPUk1cIjpcIlByb3ZpZGVyXCIsXCJOQU1FX1RFWFRcIjpcIlRleHRcIixcIlRZUEVfVEVYVFwiOlwiRWxlbWVudFwiLFwiTkFNRV9CVVRUT05cIjpcIkJ1dHRvblwiLFwiVFlQRV9CVVRUT05cIjpcIkVsZW1lbnRcIixcIk5BTUVfQ0FSRFwiOlwiQ2FyZFwiLFwiTkFNRV9MQVRFUkFMX01FTlVcIjpcIkNhcmRMYXRlcmFsTWVudVwiLFwiVFlQRV9MQVRFUkFMX01FTlVcIjpcIkVsZW1lbnRcIn07IiwiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcIk5BTUVfVEhFTUVQTEFURk9STVwiOlwiVGhlbWVQbGF0Zm9ybVwiLFwiVFlQRV9USEVNRVBMQVRGT1JNXCI6XCJCdW5kbGVcIixcIk5BTUVfQ09OU1VNRVJfVEhFTUVQTEFURk9STVwiOlwiVGhlbWVQbGF0Zm9ybUNvbnN1bWVyXCIsXCJUWVBFX0NPTlNVTUVSX1RIRU1FUExBVEZPUk1cIjpcIkVsZW1lbnRcIixcIk5BTUVfUFJPVklERVJfVEhFTUVQTEFURk9STVwiOlwiVGhlbWVQbGF0Zm9ybVByb3ZpZGVyXCIsXCJUWVBFX1BST1ZJREVSX1RIRU1FUExBVEZPUk1cIjpcIlByb3ZpZGVyXCIsXCJOQU1FX1RFWFRcIjpcIlRleHRcIixcIlRZUEVfVEVYVFwiOlwiRWxlbWVudFwiLFwiTkFNRV9YU1wiOlwieHNcIixcIk5BTUVfU01cIjpcInNtXCIsXCJOQU1FX01EXCI6XCJtZFwiLFwiTkFNRV9MR1wiOlwibGdcIixcImxhbmRpbmdTZWN0aW9uXCI6XCJfcnVsZXNfbGFuZGluZ1NlY3Rpb25fXzNNRzhoXCIsXCJ0aXRsZVwiOlwiX3J1bGVzX3RpdGxlX18ySU9YNFwiLFwic3VidGl0bGVcIjpcIl9ydWxlc19zdWJ0aXRsZV9fUDdMd0ZcIixcImNhcmRzXCI6XCJfcnVsZXNfY2FyZHNfXzhkTjdRXCIsXCJjYXJkXCI6XCJfcnVsZXNfY2FyZF9fLU9uaFVcIixcImZvb0NvbnRhaW5lclwiOlwiX3J1bGVzX2Zvb0NvbnRhaW5lcl9fMjBIWTRcIixcImZvb3RlclRpdGxlXCI6XCJfcnVsZXNfZm9vdGVyVGl0bGVfX01wRDItXCIsXCJmb290ZXJEZXNjcmlwdGlvblwiOlwiX3J1bGVzX2Zvb3RlckRlc2NyaXB0aW9uX19wUmltd1wifTsiLCJpbXBvcnQgUmVhY3QgZnJvbSBcIkBwa2cvcmVhY3RcIjtcbmltcG9ydCB0eXBlIHsgUHJvcERlZmF1bHRzLCBQcm9wRWxlbWVudCwgUHJvcFR5cGVzIH0gZnJvbSBcIkBwa2cvcmVhY3Qtc3Rvcnlib29rL0NvbXBvbmVudFwiO1xuXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiLi4vLi4vQnV0dG9uXCI7XG5pbXBvcnQgeyBNb2RhbCB9IGZyb20gXCIuLi8uLi9Nb2RhbFwiO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gXCIuLi8uLi9UZXh0XCI7XG5cbmltcG9ydCBSdWxlcyBmcm9tIFwiLi9fcnVsZXMubW9kdWxlLnNjc3NcIjtcblxuY29uc3QgaW5mb0xpc3Q6IHN0cmluZ1tdID0gW1xuICAgIFwibW9kYWwuaW5mby5yZXBvcnQtY3JlZGl0LWNhcmQuZmlyc3RJdGVtXCIsXG4gICAgXCJtb2RhbC5pbmZvLnJlcG9ydC1jcmVkaXQtY2FyZC5zZWNvbmRJdGVtXCIsXG4gICAgXCJtb2RhbC5pbmZvLnJlcG9ydC1jcmVkaXQtY2FyZC50aGlyZEl0ZW1cIixcbl07XG5cbmV4cG9ydCB0eXBlIFByb3BSZXBvcnRDcmVkaXRDYXJkTW9kYWwgPSBQcm9wRWxlbWVudCAmIHtcbiAgICBpc01vZGFsT3BlbjogYm9vbGVhbjtcbiAgICBoYW5kbGVNb2RhbDogKCkgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBERUZfTEFURVJBTF9NRU5VOiBQcm9wRGVmYXVsdHM8UHJvcFJlcG9ydENyZWRpdENhcmRNb2RhbD4gPSB7fTtcblxuZXhwb3J0IHR5cGUgUHJvcFR5cGVzTGF0ZXJhbE1lbnUgPSBQcm9wVHlwZXM8UHJvcFJlcG9ydENyZWRpdENhcmRNb2RhbCwgdHlwZW9mIERFRl9MQVRFUkFMX01FTlU+O1xuZXhwb3J0IGZ1bmN0aW9uIFJlcG9ydENyZWRpdENhcmRNb2RhbChwcm9wczogUHJvcFJlcG9ydENyZWRpdENhcmRNb2RhbCkge1xuICAgIGNvbnN0IHsgaXNNb2RhbE9wZW4sIGhhbmRsZU1vZGFsIH0gPSBwcm9wcyBhcyBQcm9wVHlwZXNMYXRlcmFsTWVudTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxNb2RhbFxuICAgICAgICAgICAgY2xvc2VPbkJnVGFwXG4gICAgICAgICAgICBoYXNDbG9zZUljb249e2ZhbHNlfVxuICAgICAgICAgICAgb3Blbj17aXNNb2RhbE9wZW59XG4gICAgICAgICAgICB0aXRsZT1cInNwYS5yZXBvcnQtY3JlZGl0LWNhcmQubW9kYWwudGl0bGVcIlxuICAgICAgICAgICAgb25DbG9zZT17aGFuZGxlTW9kYWx9PlxuICAgICAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgICAgICAge2luZm9MaXN0Lm1hcCgoaXRlbSkgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8VGV4dCBrZXk9e2l0ZW19IGNsYXNzTmFtZT17UnVsZXMuaW5mb30gdXVpZD17aXRlbX0gLz5cbiAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtSdWxlcy5jbG9zZUJ1dHRvbn0+XG4gICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBsYWJlbD17eyB1dWlkOiBcInNwYS5yZXBvcnQtY3JlZGl0LWNhcmQubW9kYWwuYnV0dG9uVGV4dFwiIH19XG4gICAgICAgICAgICAgICAgICAgIHNpemU9XCJzbWFsbFwiXG4gICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlTW9kYWx9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L01vZGFsPlxuICAgICk7XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcIkBwa2cvcmVhY3RcIjtcbmltcG9ydCB7IENhcmQsIEljb24gfSBmcm9tIFwiQGFwcC9iYW5jb24tdWlcIjtcblxuaW1wb3J0IHsgQ29tcG9uZW50LCBnZXRDbGFzc05hbWUgfSBmcm9tIFwiQHBrZy9yZWFjdC1zdG9yeWJvb2svQ29tcG9uZW50XCI7XG5pbXBvcnQgdHlwZSB7IFByb3BEZWZhdWx0cywgUHJvcEVsZW1lbnQsIFByb3BUeXBlcyB9IGZyb20gXCJAcGtnL3JlYWN0LXN0b3J5Ym9vay9Db21wb25lbnRcIjtcbmltcG9ydCB7IHVzZUF2YWlsYWJsZUZlYXR1cmUsIHVzZVBlcm1pc3Npb25GZWF0dXJlIH0gZnJvbSBcIkBhcHAvYmFuY29uLWRhdGEvc2xpY2VzL3Nlc3Npb25cIjtcbmltcG9ydCB7IHVzZVNob3dUb2FzdCB9IGZyb20gXCJAYXBwL2JhbmNvbi1kYXRhL3NsaWNlcy90b2FzdFwiO1xuaW1wb3J0IHsgVGV4dCwgdXNlVGV4dCB9IGZyb20gXCIuLi8uLi9UZXh0XCI7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSBcIi4uLy4uL0xpbmtcIjtcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCIuLi8uLi9CdXR0b25cIjtcbmltcG9ydCBOYW1lc3BhY2VDYXJkIGZyb20gXCIuLi9faW5kZXguc2Nzc1wiO1xuaW1wb3J0IE5hbWVzcGFjZUNhcmRMYXRlcmFsTWVudSBmcm9tIFwiLi9faW5kZXguc2Nzc1wiO1xuaW1wb3J0IHsgUmVwb3J0Q3JlZGl0Q2FyZE1vZGFsIH0gZnJvbSBcIi4vUmVwb3J0Q3JlZGl0Q2FyZE1vZGFsXCI7XG5cbmltcG9ydCBSdWxlcyBmcm9tIFwiLi9fcnVsZXMubW9kdWxlLnNjc3NcIjtcblxuZXhwb3J0IGNvbnN0IHsgTkFNRV9DQVJEIH0gPSBOYW1lc3BhY2VDYXJkO1xuZXhwb3J0IGNvbnN0IHsgTkFNRV9MQVRFUkFMX01FTlUsIFRZUEVfTEFURVJBTF9NRU5VIH0gPSBOYW1lc3BhY2VDYXJkTGF0ZXJhbE1lbnU7XG5cbmV4cG9ydCB0eXBlIFByb3BDYXJkTGF0ZXJhbE1lbnUgPSBQcm9wRWxlbWVudCAmIHtcbiAgICB0ZXh0SGVhZGVyOiBzdHJpbmc7XG4gICAgaHJlZjogc3RyaW5nO1xuICAgIGlzTW9kYWw/OiBib29sZWFuO1xuICAgIGlzQ2xpY2thYmxlPzogYm9vbGVhbjtcbiAgICBpZDogc3RyaW5nO1xuICAgIGNhbGxiYWNrOiAoKSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGNvbnN0IERFRl9MQVRFUkFMX01FTlU6IFByb3BEZWZhdWx0czxQcm9wQ2FyZExhdGVyYWxNZW51PiA9IHtcbiAgICBpc0NsaWNrYWJsZTogZmFsc2UsXG4gICAgaXNNb2RhbDogZmFsc2UsXG59O1xuXG5leHBvcnQgdHlwZSBQcm9wVHlwZXNMYXRlcmFsTWVudSA9IFByb3BUeXBlczxQcm9wQ2FyZExhdGVyYWxNZW51LCB0eXBlb2YgREVGX0xBVEVSQUxfTUVOVT47XG5leHBvcnQgZnVuY3Rpb24gTGF0ZXJhbE1lbnVDYXJkKHByb3BzOiBQcm9wQ2FyZExhdGVyYWxNZW51KSB7XG4gICAgY29uc3QgeyB0ZXh0R2V0IH0gPSB1c2VUZXh0KCk7XG5cbiAgICBjb25zdCB7IGNsYXNzTmFtZSwgdGV4dEhlYWRlciwgaHJlZiwgaXNNb2RhbCwgaXNDbGlja2FibGUsIGNhbGxiYWNrLCBpZCwgLi4ucmVzdCB9ID1cbiAgICAgICAgcHJvcHMgYXMgUHJvcFR5cGVzTGF0ZXJhbE1lbnU7XG4gICAgY29uc3QgZm9vdGVyUmVmID0gUmVhY3QudXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcbiAgICBjb25zdCBoYXNDYWxsYmFjayA9IEJvb2xlYW4oY2FsbGJhY2spO1xuICAgIGNvbnN0IGlzUGVybWlzc2lvbiA9IHVzZVBlcm1pc3Npb25GZWF0dXJlKGlkKTtcbiAgICBjb25zdCBpc0F2YWlsYWJsZSA9IHVzZUF2YWlsYWJsZUZlYXR1cmUoaWQpO1xuICAgIGNvbnN0IGJ1dHRvbkNhbGxiYWNrID0gY2FsbGJhY2sgfHwgaGFuZGxlT3Blbk1vZGFsO1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBnZXRDbGFzc05hbWUoIWhhbmRsZUlzQXZhaWxhYmxlKCkgJiYgUnVsZXMuZGlzYWJsZWQpO1xuICAgIGNvbnN0IHsgc2hvd0Vycm9yVG9hc3QgfSA9IHVzZVNob3dUb2FzdCgpO1xuICAgIGNvbnN0IFtzaG93TW9kYWwsIHNldFNob3dNb2RhbF0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG5cbiAgICBjb25zdCB0ZXh0UmVwbGFjZSA9IHRleHRHZXQoe1xuICAgICAgICB1dWlkOiB0ZXh0SGVhZGVyLFxuICAgIH0pO1xuXG4gICAgaWYgKCFoYW5kbGVJc0F2YWlsYWJsZSgpKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxDb21wb25lbnQgY2xhc3NOYW1lPXtjbGFzc05hbWVzfSBuYW1lPXtOQU1FX0xBVEVSQUxfTUVOVX0gdHlwZT17VFlQRV9MQVRFUkFMX01FTlV9PlxuICAgICAgICAgICAge2dldEVsZW1lbnQoKX1cbiAgICAgICAgPC9Db21wb25lbnQ+XG4gICAgKTtcblxuICAgIGZ1bmN0aW9uIGdldENhcmRDb250ZW50KCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPENhcmQgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWUoY2xhc3NOYW1lLCBpc0NsaWNrYWJsZSAmJiBSdWxlcy5jbGlja2FibGUpfSB7Li4ucmVzdH0+XG4gICAgICAgICAgICAgICAgPGhlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgPFRleHQgY2xhc3NOYW1lPXtSdWxlcy5tYWluVGl0bGV9IHRhZz1cInNwYW5cIiB1dWlkPXt0ZXh0SGVhZGVyfSAvPlxuICAgICAgICAgICAgICAgIDwvaGVhZGVyPlxuXG4gICAgICAgICAgICAgICAgPGZvb3RlciByZWY9e2Zvb3RlclJlZn0+XG4gICAgICAgICAgICAgICAgICAgIDxJY29uIG5hbWU9XCJyaWdodFwiIHNpemU9XCJzbWFsbFwiIC8+XG4gICAgICAgICAgICAgICAgPC9mb290ZXI+XG4gICAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0RWxlbWVudCgpIHtcbiAgICAgICAgaWYgKGhhc0NhbGxiYWNrIHx8IGlzTW9kYWwpIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBmbG93SWQ9e2lkfVxuICAgICAgICAgICAgICAgICAgICAgICAga2luZD1cInBsYWluXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXt7IHV1aWQ6IHRleHRIZWFkZXIgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2J1dHRvbkNhbGxiYWNrfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtnZXRDYXJkQ29udGVudCgpfVxuICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAge2lzTW9kYWwgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgPFJlcG9ydENyZWRpdENhcmRNb2RhbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZU1vZGFsPXtoYW5kbGVDbG9zZU1vZGFsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzTW9kYWxPcGVuPXtzaG93TW9kYWx9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxMaW5rIHByZXZlbnROYXZpZ2F0ZUNhbGxiYWNrPXtwcmV2ZW50TmF2aWdhdGVDYWxsYmFja30gdG89e2hyZWZ9PlxuICAgICAgICAgICAgICAgIHtnZXRDYXJkQ29udGVudCgpfVxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZUlzQXZhaWxhYmxlKCkge1xuICAgICAgICBpZiAoaXNNb2RhbCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaXNBdmFpbGFibGU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcHJldmVudE5hdmlnYXRlQ2FsbGJhY2soKSB7XG4gICAgICAgIGlmICghaXNQZXJtaXNzaW9uKSB7XG4gICAgICAgICAgICBzaG93RXJyb3JUb2FzdChcInNwYS5mZWF0dXJlLmVycm9yLnBlcm1pc3Npb25cIiwgdGV4dFJlcGxhY2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGlzUGVybWlzc2lvbjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVPcGVuTW9kYWwoKSB7XG4gICAgICAgIHJldHVybiBzZXRTaG93TW9kYWwodHJ1ZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFuZGxlQ2xvc2VNb2RhbCgpIHtcbiAgICAgICAgcmV0dXJuIHNldFNob3dNb2RhbChmYWxzZSk7XG4gICAgfVxufVxuXG5MYXRlcmFsTWVudUNhcmQuZGVmYXVsdFByb3BzID0gREVGX0xBVEVSQUxfTUVOVTtcbkxhdGVyYWxNZW51Q2FyZC5kaXNwbGF5TmFtZSA9IE5BTUVfTEFURVJBTF9NRU5VO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJAcGtnL3JlYWN0XCI7XG5pbXBvcnQgdHlwZSB7IFByb3BEZWZhdWx0cywgUHJvcEVsZW1lbnQsIFByb3BUeXBlcyB9IGZyb20gXCJAcGtnL3JlYWN0LXN0b3J5Ym9vay9Db21wb25lbnRcIjtcblxuaW1wb3J0IHsgRU1QVFlfU1RSSU5HLCBaRVJPIH0gZnJvbSBcIkBhcHAvYmFuY29uLWRhdGEvY29uc3RhbnRzXCI7XG5pbXBvcnQgdHlwZSB7IE5TQVBJbGVnYWN5IH0gZnJvbSBcIkBhcHAvYmFuY29uLWRhdGEvYXBpL2xlZ2FjeVwiO1xuXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSBcIkBhcHAvYmFuY29yLWNvbXBvbmVudHMvRWxlbWVudC9UZXh0XCI7XG5pbXBvcnQgeyBMYXRlcmFsTWVudUNhcmQgfSBmcm9tIFwiQGFwcC9iYW5jb3ItY29tcG9uZW50cy9FbGVtZW50L0NhcmQvTGF0ZXJhbE1lbnVcIjtcblxuaW1wb3J0IHsgdXNlUGF0aCwgdXNlTmF2aWdhdGUsIFJPVVRFX1BBVEhfSE9NRSwgdXNlUGFyYW1zIH0gZnJvbSBcIn4vcm91dGVzXCI7XG5pbXBvcnQgdHlwZSB7IE1lbnVJdGVtIH0gZnJvbSBcIn4vY29udGFpbmVycy9JbnRlcm5hbC9fTWVudS90eXBlc1wiO1xuaW1wb3J0IHsgSW50ZXJuYWxDb250YWluZXIgfSBmcm9tIFwifi9jb250YWluZXJzL0ludGVybmFsXCI7XG5cbmltcG9ydCBSdWxlcyBmcm9tIFwiLi9fcnVsZXMubW9kdWxlLnNjc3NcIjtcblxuZXhwb3J0IHR5cGUgUHJvcExhbmRpbmdTZWN0aW9uID0gUHJvcEVsZW1lbnQgJiB7XG4gICAgaXRlbT86IE1lbnVJdGVtIHwgTlNBUElsZWdhY3kuRmVhdHVyZUdyb3VwO1xuICAgIHNlY3Rpb25zOiBNZW51SXRlbVtdO1xufTtcblxuZXhwb3J0IGNvbnN0IERFRl9MQU5ESU5HX1NFQ1RJT046IE9taXQ8UHJvcERlZmF1bHRzPFByb3BMYW5kaW5nU2VjdGlvbj4sIFwiaXRlbVwiPiA9IHt9O1xuXG5leHBvcnQgdHlwZSBQcm9wVHlwZXNQcm9wTGFuZGluZ1NlY3Rpb24gPSBQcm9wVHlwZXM8UHJvcExhbmRpbmdTZWN0aW9uLCB0eXBlb2YgREVGX0xBTkRJTkdfU0VDVElPTj47XG5cbmV4cG9ydCBmdW5jdGlvbiBMYW5kaW5nU2VjdGlvbihwcm9wczogUHJvcExhbmRpbmdTZWN0aW9uKSB7XG4gICAgY29uc3QgeyBpdGVtLCBzZWN0aW9ucyB9ID0gcHJvcHMgYXMgUHJvcFR5cGVzUHJvcExhbmRpbmdTZWN0aW9uO1xuXG4gICAgY29uc3QgdXJsSG9tZSA9IHVzZVBhdGgoUk9VVEVfUEFUSF9IT01FKTtcblxuICAgIGNvbnN0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcbiAgICBjb25zdCB7IGlkID0gXCJcIiB9ID0gdXNlUGFyYW1zKCk7XG5cbiAgICBjb25zdCBbbW9yZVNlY3Rpb25zLCBzZXRNb3JlU2VjdGlvbnNdID0gUmVhY3QudXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xuICAgIGNvbnN0IFttZW51VGl0bGUsIHNldE1lbnVUaXRsZV0gPSBSZWFjdC51c2VTdGF0ZTxzdHJpbmc+KEVNUFRZX1NUUklORyk7XG5cbiAgICAvLyBDaGVjayBpZiBpdGVtIGhhcyBuZXN0ZWQgc2VjdGlvbnMgYW5kIGdldCBsYW5kaW5nIHRpdGxlXG4gICAgUmVhY3QudXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKGl0ZW0gJiYgaXRlbS5zZWN0aW9ucykge1xuICAgICAgICAgICAgc2V0TW9yZVNlY3Rpb25zKGZhbHNlKTtcbiAgICAgICAgICAgIGl0ZW0uc2VjdGlvbnMubWFwKChzZWN0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHNlY3Rpb24uc2VjdGlvbnMpIHNldE1vcmVTZWN0aW9ucyh0cnVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2VjdGlvbjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc2V0TWVudVRpdGxlKGBtZW51LnByb2R1Y3RzLnRpdGxlLiR7aWR9YCk7XG4gICAgICAgIH1cbiAgICB9LCBbaXRlbSwgaWQsIHNldE1vcmVTZWN0aW9uc10pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPEludGVybmFsQ29udGFpbmVyXG4gICAgICAgICAgICB3aXRoRm9vdGVyXG4gICAgICAgICAgICB3aXRob3V0Qm94XG4gICAgICAgICAgICBjbGFzc05hbWU9e1J1bGVzLmxhbmRpbmdTZWN0aW9ufVxuICAgICAgICAgICAgaGVhZGVyLW9uQmFjaz17aGFuZGxlQmFja30+XG4gICAgICAgICAgICB7bW9yZVNlY3Rpb25zID8gKFxuICAgICAgICAgICAgICAgIHNlY3Rpb25zLm1hcCgoc2VjdGlvbikgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17c2VjdGlvbi5pZH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBjbGFzc05hbWU9e1J1bGVzLnRpdGxlfSB0YWc9XCJoNFwiIHV1aWQ9e3NlY3Rpb24ubmFtZX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtzZWN0aW9uLmRlc2NyaXB0aW9uICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBjbGFzc05hbWU9e1J1bGVzLnN1YnRpdGxlfSB0YWc9XCJoNlwiIHV1aWQ9e3NlY3Rpb24uZGVzY3JpcHRpb259IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1J1bGVzLmNhcmRzfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7KHNlY3Rpb24uc2VjdGlvbnMgfHwgW10pLm1hcCgoY2FyZCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGF0ZXJhbE1lbnVDYXJkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2NhcmQuaWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0NsaWNrYWJsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s9e2NhcmQuY2FsbGJhY2t9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1J1bGVzLmNhcmR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPXtjYXJkLnVybH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtoYW5kbGVWYWxpZGF0ZUlEKGNhcmQpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNNb2RhbD17Y2FyZC5tb2RhbH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRIZWFkZXI9e2NhcmQubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApKVxuICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgICAgICAgIDxUZXh0IGNsYXNzTmFtZT17UnVsZXMudGl0bGV9IHRhZz1cImg0XCIgdXVpZD17bWVudVRpdGxlfSAvPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17UnVsZXMuY2FyZHN9PlxuICAgICAgICAgICAgICAgICAgICAgICAge3NlY3Rpb25zLm1hcCgoY2FyZCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMYXRlcmFsTWVudUNhcmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtjYXJkLmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0NsaWNrYWJsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1J1bGVzLmNhcmR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9e2NhcmQudXJsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD17aGFuZGxlVmFsaWRhdGVJRChjYXJkKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dEhlYWRlcj17Y2FyZC5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICB7Z2V0Rm9vdGVycygpfVxuICAgICAgICA8L0ludGVybmFsQ29udGFpbmVyPlxuICAgICk7XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVWYWxpZGF0ZUlEKGNhcmQ6IE1lbnVJdGVtKSB7XG4gICAgICAgIGNvbnN0IHZhbGlkYXRlVGV4dCA9IFwiaHR0cFwiO1xuXG4gICAgICAgIGlmIChjYXJkLmxlZ2FjeSAmJiAhY2FyZC5sZWdhY3kuaW5jbHVkZXModmFsaWRhdGVUZXh0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGNhcmQubGVnYWN5O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNhcmQuaWQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0Rm9vdGVycygpIHtcbiAgICAgICAgY29uc3QgZm9vdGVyU2VjdGlvbnMgPSBbXTtcbiAgICAgICAgaWYgKGl0ZW0gJiYgaXRlbS5mb290ZXJJbmZvKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gWkVSTzsgaSA8IGl0ZW0uZm9vdGVySW5mbz8ucXVhbnRpdHk7IGkrKykge1xuICAgICAgICAgICAgICAgIGZvb3RlclNlY3Rpb25zLnB1c2goXG4gICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtgZm9vdGVyXyR7aX1gfSBjbGFzc05hbWU9e1J1bGVzLmZvb0NvbnRhaW5lcn0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17UnVsZXMuZm9vdGVyVGl0bGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXVpZD17YCR7aXRlbS5mb290ZXJJbmZvLnRpdGxlfS4ke2l9YH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17UnVsZXMuZm9vdGVyRGVzY3JpcHRpb259XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXVpZD17YCR7aXRlbS5mb290ZXJJbmZvLmRlc2NyaXB0aW9ufS4ke2l9YH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PixcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmb290ZXJTZWN0aW9ucy5tYXAoKGZvb3RlclNlY3Rpb24pID0+IGZvb3RlclNlY3Rpb24pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZUJhY2soKSB7XG4gICAgICAgIG5hdmlnYXRlKHVybEhvbWUpO1xuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceMappingURL=94.767dc71f.chunk.js.map