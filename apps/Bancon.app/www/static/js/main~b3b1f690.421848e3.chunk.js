(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[242],{113:function(t,n,e){"use strict";e.d(n,"c",(function(){return s})),e.d(n,"d",(function(){return d})),e.d(n,"a",(function(){return b})),e.d(n,"b",(function(){return T}));var r=e(0),u=e(2),c=e(5),a=e(4),o=e(21),i=e(3),s=Object(u.a)({},i.i);function d(t){if(!t||!Object(o.a)(t))return!0;var n=t;return Object(i.u)(s,n.code)}var f={REGISTER:"session.register.device.vu",SECOND_FACTOR:"session.secondfactor.register.device.vu"};function b(t){return O.apply(this,arguments)}function O(){return(O=Object(c.a)(Object(r.a)().mark((function t(n){var e,c,o;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e="".concat(a.d.BANCOR_NO_AUTH_API,"/").concat(f.REGISTER),t.next=3,Object(a.a)({method:a.c.POST,url:e,body:Object(u.a)({},n),excludeFromServiceError:!0});case 3:if(c=t.sent){t.next=6;break}return t.abrupt("return",null);case 6:return o=c.json,t.abrupt("return",o);case 8:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function T(t){return p.apply(this,arguments)}function p(){return(p=Object(c.a)(Object(r.a)().mark((function t(n){var e,c,o,i;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e="".concat(a.d.BANCOR_AUTH_API,"/").concat(f.SECOND_FACTOR),c=n._exchangeToken,t.next=4,Object(a.a)({method:a.c.POST,url:e,body:Object(u.a)({},n),excludeFromServiceError:!0,token:c});case 4:if(o=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:return i=o.json,t.abrupt("return",i);case 9:case"end":return t.stop()}}),t)})))).apply(this,arguments)}},122:function(t,n,e){"use strict";e.d(n,"b",(function(){return a})),e.d(n,"a",(function(){return o})),e.d(n,"c",(function(){return i}));var r=e(2),u=e(21),c=e(3),a=function(t){return t.STATUS_NEW="NEW",t.STATUS_DRAFT="DRAFT",t.STATUS_PENDING="PENDING",t.STATUS_SCHEDULED="SCHEDULED",t.STATUS_RUNNING="RUNNING",t.STATUS_ACCEPTED="ACCEPTED",t.STATUS_PROCESSING="PROCESSING",t.STATUS_FINISHED="FINISHED",t.STATUS_CANCELLED="CANCELLED",t.STATUS_RETURNED="RETURNED",t.STATUS_FAILED="FAILED",t.STATUS_ANNULED="ANNULED",t.STATUS_AUTHORIZED="AUTHORIZED",t.STATUS_PENDING_SIGNATURE="PENDING_SIGNATURE",t.STATUS_IMPUTED="IMPUTED",t}({}),o=Object(r.a)({},c.i);function i(t){if(!t||!Object(u.a)(t))return!0;var n=t;return Object(c.u)(o,n.code)}},129:function(t,n,e){"use strict";e.d(n,"a",(function(){return s})),e.d(n,"c",(function(){return d})),e.d(n,"b",(function(){return b}));var r=e(0),u=e(5),c=e(4),a=e(2),o=e(21),i=e(3),s=Object(a.a)(Object(a.a)({},i.i),{},{COR055W:{type:i.g.ERROR}});function d(t){if(!t||!Object(o.a)(t))return!0;var n=t;return Object(i.u)(s,n.code)}var f="payment.suppliers.annulment.send";function b(t){return O.apply(this,arguments)}function O(){return(O=Object(u.a)(Object(r.a)().mark((function t(n){var e,u,a,o,i,s,d;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e="".concat(c.d.BANCOR_AUTH_API,"/").concat(f),u=n.token,a=n.contractId,o=n.sequences,i=n.amount,t.next=4,Object(c.a)({method:c.c.POST,url:e,token:u,body:{contractId:a,sequences:o,amount:i}});case 4:if(s=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:return d=s.json,t.abrupt("return",d);case 9:case"end":return t.stop()}}),t)})))).apply(this,arguments)}},47:function(t,n,e){"use strict";e.d(n,"c",(function(){return d})),e.d(n,"i",(function(){return f})),e.d(n,"j",(function(){return b})),e.d(n,"d",(function(){return j})),e.d(n,"e",(function(){return R})),e.d(n,"f",(function(){return N})),e.d(n,"g",(function(){return C})),e.d(n,"b",(function(){return k})),e.d(n,"h",(function(){return U})),e.d(n,"a",(function(){return y}));var r=e(0),u=e(2),c=e(19),a=e(5),o=e(4),i=e(3),s=e(21),d=Object(u.a)(Object(u.a)({},i.i),{},{COR055W:{type:i.g.VALIDATION},COR071W:{type:i.g.VALIDATION},API307W:{type:i.g.VALIDATION}});function f(t){if(!t||!Object(s.a)(t))return!0;var n=t;return Object(i.u)(d,n.code)}function b(t){if(!t||!Object(s.a)(t))return!0;var n=t;return Object(i.u)(d,n.code)}var O=["token"],T=["token"],p=["token"],A=["token"],_=["token"],E=["token"],I={ID_ACTIVITY_GENERATE_PAYMENT_PRE:"paymentsSuppliers.generate.pre",ID_ACTIVITY_GENERATE_PAYMENT_SEND:"paymentsSuppliers.generate.send",ID_ACTIVITY_SUPPLIERS_ACCOUNTS:"transferaccounts.list",ID_ACTIVITY_SUPPLIERS_TEMPLATE_GET_ID:"massivefiles.getTemplate",ID_ACTIVITY_SUPPLIERS_TEMPLATE_DONWLOAD:"massivefiles.downloadTemplate",ID_ACTIVITY_SUPPLIERS_DOWNLOAD_ERROR_FILE:"suppliersfiles.error.download"};function j(t){return l.apply(this,arguments)}function l(){return(l=Object(a.a)(Object(r.a)().mark((function t(n){var e,a,s,d,b,T;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e="".concat(o.d.BANCOR_AUTH_API,"/").concat(I.ID_ACTIVITY_GENERATE_PAYMENT_PRE),a=n.token,s=Object(c.a)(n,O),d=Object(u.a)({},s),t.next=5,Object(o.a)({method:o.c.POST,url:e,body:d,token:a});case 5:if(b=t.sent){t.next=8;break}return t.abrupt("return",null);case 8:if(T=b.json,!Object(i.w)(T,f)){t.next=11;break}return t.abrupt("return",Object(i.y)(null===T||void 0===T?void 0:T.code));case 11:return t.abrupt("return",T);case 12:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function R(t){return S.apply(this,arguments)}function S(){return(S=Object(a.a)(Object(r.a)().mark((function t(n){var e,a,i,s,d,f;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.token,a=Object(c.a)(n,T),i=Object(u.a)({},a),s="".concat(o.d.BANCOR_AUTH_API,"/").concat(I.ID_ACTIVITY_GENERATE_PAYMENT_SEND),t.next=5,Object(o.a)({method:o.c.POST,url:s,excludeFromServiceError:!0,body:i,token:e});case 5:if(d=t.sent){t.next=8;break}return t.abrupt("return",null);case 8:return f=d.json,t.abrupt("return",f);case 10:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function N(t){return D.apply(this,arguments)}function D(){return(D=Object(a.a)(Object(r.a)().mark((function t(n){var e,u,c,a;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.token,u="".concat(o.d.BANCOR_AUTH_API,"/").concat(I.ID_ACTIVITY_SUPPLIERS_ACCOUNTS),t.next=4,Object(o.a)({method:o.c.POST,url:u,excludeFromServiceError:!0,token:e});case 4:if(c=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(a=c.json,!Object(i.w)(a,f)){t.next=10;break}return t.abrupt("return",Object(i.y)(null===a||void 0===a?void 0:a.code));case 10:return t.abrupt("return",c.json);case 11:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function C(t){return P.apply(this,arguments)}function P(){return(P=Object(a.a)(Object(r.a)().mark((function t(n){var e,a,s,d,f,O;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.token,a=Object(c.a)(n,p),s="".concat(o.d.BANCOR_AUTH_API,"/").concat(I.ID_ACTIVITY_SUPPLIERS_TEMPLATE_GET_ID),d=Object(u.a)({},a),t.next=5,Object(o.a)({method:o.c.POST,url:s,body:d,token:e});case 5:if(f=t.sent){t.next=8;break}return t.abrupt("return",null);case 8:if(O=f.json,!Object(i.w)(O,b)){t.next=11;break}return t.abrupt("return",Object(i.y)(null===O||void 0===O?void 0:O.code));case 11:return t.abrupt("return",f.json);case 12:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function k(t){return v.apply(this,arguments)}function v(){return(v=Object(a.a)(Object(r.a)().mark((function t(n){var e,a,s,d,f,O;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.token,a=Object(c.a)(n,A),s="".concat(o.d.BANCOR_AUTH_API,"/").concat(I.ID_ACTIVITY_SUPPLIERS_TEMPLATE_DONWLOAD),d=Object(u.a)({},a),t.next=5,Object(o.a)({method:o.c.POST,url:s,body:d,token:e});case 5:if(f=t.sent){t.next=8;break}return t.abrupt("return",null);case 8:if(O=f.json,!Object(i.w)(O,b)){t.next=11;break}return t.abrupt("return",Object(i.y)(null===O||void 0===O?void 0:O.code));case 11:return t.abrupt("return",f.json);case 12:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function U(t){return h.apply(this,arguments)}function h(){return(h=Object(a.a)(Object(r.a)().mark((function t(n){var e,a,s,d,b,O;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.token,a=Object(c.a)(n,_),s="".concat(o.d.BANCOR_AUTH_API,"/").concat(I.ID_ACTIVITY_GENERATE_PAYMENT_PRE),d=Object(u.a)({},a),t.next=5,Object(o.a)({method:o.c.POST,url:s,token:e,body:d});case 5:if(b=t.sent){t.next=8;break}return t.abrupt("return",null);case 8:if(O=b.json,!Object(i.w)(O,f)){t.next=11;break}return t.abrupt("return",Object(i.y)(null===O||void 0===O?void 0:O.code));case 11:return t.abrupt("return",b.json);case 12:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function y(t){return x.apply(this,arguments)}function x(){return(x=Object(a.a)(Object(r.a)().mark((function t(n){var e,a,s,d,b,O;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.token,a=Object(c.a)(n,E),s="".concat(o.d.BANCOR_AUTH_API,"/").concat(I.ID_ACTIVITY_SUPPLIERS_DOWNLOAD_ERROR_FILE),d=Object(u.a)({},a),t.next=5,Object(o.a)({method:o.c.POST,url:s,token:e,body:d});case 5:if(b=t.sent){t.next=8;break}return t.abrupt("return",null);case 8:if(O=b.json,!Object(i.w)(O,f)){t.next=11;break}return t.abrupt("return",Object(i.y)(null===O||void 0===O?void 0:O.code));case 11:return t.abrupt("return",b.json);case 12:case"end":return t.stop()}}),t)})))).apply(this,arguments)}},6:function(t,n,e){"use strict";e.d(n,"D",(function(){return r})),e.d(n,"C",(function(){return u})),e.d(n,"Ub",(function(){return c})),e.d(n,"hb",(function(){return a})),e.d(n,"Kb",(function(){return o})),e.d(n,"Ib",(function(){return i})),e.d(n,"N",(function(){return s})),e.d(n,"K",(function(){return d})),e.d(n,"Db",(function(){return f})),e.d(n,"Sb",(function(){return b})),e.d(n,"fb",(function(){return O})),e.d(n,"Jb",(function(){return T})),e.d(n,"Hb",(function(){return p})),e.d(n,"M",(function(){return A})),e.d(n,"J",(function(){return _})),e.d(n,"Bb",(function(){return E})),e.d(n,"Ab",(function(){return I})),e.d(n,"A",(function(){return j})),e.d(n,"Gb",(function(){return l})),e.d(n,"H",(function(){return R})),e.d(n,"Cb",(function(){return S})),e.d(n,"gb",(function(){return N})),e.d(n,"lb",(function(){return D})),e.d(n,"Nb",(function(){return C})),e.d(n,"j",(function(){return P})),e.d(n,"O",(function(){return k})),e.d(n,"k",(function(){return v})),e.d(n,"s",(function(){return U})),e.d(n,"t",(function(){return h})),e.d(n,"e",(function(){return y})),e.d(n,"mb",(function(){return x})),e.d(n,"B",(function(){return m})),e.d(n,"jb",(function(){return w})),e.d(n,"b",(function(){return L})),e.d(n,"Pb",(function(){return F})),e.d(n,"bb",(function(){return Y})),e.d(n,"xb",(function(){return B})),e.d(n,"ab",(function(){return G})),e.d(n,"Fb",(function(){return M})),e.d(n,"I",(function(){return V})),e.d(n,"ob",(function(){return H})),e.d(n,"ib",(function(){return g})),e.d(n,"F",(function(){return W})),e.d(n,"c",(function(){return K})),e.d(n,"wb",(function(){return z})),e.d(n,"qb",(function(){return J})),e.d(n,"zb",(function(){return q})),e.d(n,"f",(function(){return Z})),e.d(n,"G",(function(){return $})),e.d(n,"Qb",(function(){return X})),e.d(n,"pb",(function(){return Q})),e.d(n,"h",(function(){return tt})),e.d(n,"vb",(function(){return nt})),e.d(n,"tb",(function(){return et})),e.d(n,"Rb",(function(){return rt})),e.d(n,"sb",(function(){return ut})),e.d(n,"rb",(function(){return ct})),e.d(n,"ub",(function(){return at})),e.d(n,"X",(function(){return ot})),e.d(n,"g",(function(){return it})),e.d(n,"i",(function(){return st})),e.d(n,"eb",(function(){return dt})),e.d(n,"m",(function(){return ft})),e.d(n,"o",(function(){return bt})),e.d(n,"y",(function(){return Ot})),e.d(n,"w",(function(){return Tt})),e.d(n,"v",(function(){return pt})),e.d(n,"z",(function(){return At})),e.d(n,"kb",(function(){return _t})),e.d(n,"x",(function(){return Et})),e.d(n,"u",(function(){return It})),e.d(n,"n",(function(){return jt})),e.d(n,"Tb",(function(){return lt})),e.d(n,"cb",(function(){return Rt})),e.d(n,"T",(function(){return St})),e.d(n,"W",(function(){return Nt})),e.d(n,"R",(function(){return Dt})),e.d(n,"S",(function(){return Ct})),e.d(n,"V",(function(){return Pt})),e.d(n,"U",(function(){return kt})),e.d(n,"Lb",(function(){return vt})),e.d(n,"Mb",(function(){return Ut})),e.d(n,"E",(function(){return ht})),e.d(n,"yb",(function(){return yt})),e.d(n,"d",(function(){return xt})),e.d(n,"nb",(function(){return mt})),e.d(n,"Q",(function(){return wt})),e.d(n,"db",(function(){return Lt})),e.d(n,"Z",(function(){return Ft})),e.d(n,"L",(function(){return Yt})),e.d(n,"Ob",(function(){return Bt})),e.d(n,"a",(function(){return Gt})),e.d(n,"l",(function(){return Mt})),e.d(n,"Eb",(function(){return Vt})),e.d(n,"p",(function(){return Ht})),e.d(n,"r",(function(){return gt})),e.d(n,"q",(function(){return Wt})),e.d(n,"P",(function(){return Kt})),e.d(n,"Y",(function(){return zt}));var r="",u=" ",c="0",a="1",o="2",i="3",s="4",d="5",f="6",b=0,O=1,T=2,p=3,A=4,_=5,E=6,I=7,j=8,l=30,R=50,S=60,N=180,D="|",C="_",P="-",k="#",v=24,U="\u2022",h=".",y=",",x="+",m="@",w="%",L="$",F="U$S",Y=60,B=1e3,G=-1,M=10,V="FINISHED",H="PROCESSING",g="PENDING",W="FAILED",K=G,z=":id",J={JOINER_PROP:"&",JOINER_VALUE:"="},q={SAP:"SAP",BANTOTAL:"BT"},Z="corporate",$={REQUEST_CREDIT_CARD:"creditCards.requestCreditCard.send",CREDIT_CARDS_READ:"creditCards.read",LOANS_READ:"loans.read",LANDMARKS_LIST:"landmarks.list",OFFERT_TO_UPDATE_SECURITY_DATA_EMAIL:"offerToUpdateSecurityData.checkIfEmailNeedsToBeRefreshed",OFFERT_TO_UPDATE_SECURITY_DATA_TOKEN:"offerToUpdateSecurityData.checkIfTokenNeedsToBeRefreshed",OFFERT_TO_UPDATE_SECURITY_DATA_MODO:"offerToUpdateSecurityData.checkIfMODONeedsToBeRefreshed",OFFERT_TO_UPDATE_SECURITY_DATA_TYC:"spa.session.acceptTermsAndConditions",PREFERENCES_OTP_CONFIGURATION_VALIDATE_DEVICE:"preferences.otp.configuration.validate.device",PREFERENCES_BIOMETRY_FINGERPRINT:"preferences.fingerprint.pre",MODIFY_USER_DATA:"preferences.userData.modify.send",ONBOARDING:"onboarding.wizard.personaldata.pre",LIST_LOANS_BT:"spa.loanbt.list",GENERATE_OFFER_LOANS_BT:"spa.loanbt.generateOffer"},X=[$.OFFERT_TO_UPDATE_SECURITY_DATA_EMAIL,$.OFFERT_TO_UPDATE_SECURITY_DATA_TOKEN,$.OFFERT_TO_UPDATE_SECURITY_DATA_MODO,$.OFFERT_TO_UPDATE_SECURITY_DATA_TYC,$.PREFERENCES_OTP_CONFIGURATION_VALIDATE_DEVICE,$.PREFERENCES_BIOMETRY_FINGERPRINT,$.MODIFY_USER_DATA,$.ONBOARDING,$.LIST_LOANS_BT,$.GENERATE_OFFER_LOANS_BT],Q={CURRENT_ACCOUNT:"CC"},tt="spa.currency.label.",nt=/^\d{1,8}$/,et=/\d/g,rt=/\s/g,ut=/\./g,ct=/[$a-zA-Z0-9 ]*/g,at=/^[a-zA-Z0-9 ]*$/,ot={ES_AR:"es-AR"},it={ARG_ISO:"ARS"},st={ARS:L,USD:F},dt={MAX_BADGE:99,SHOW_MORE_LINK:"/communications/details",MAX_LENGTH_COMMUNICATION_TEXT:50},ft="5350",bt=15,Ot=2e3,Tt=4e3,pt=6e3,At=8e3,_t=0,Et=5e3,It=5e3,jt="dark-green",lt=48,Rt=57,St="seed",Nt="TOKEN",Dt="EMAIL",Ct="MODO",Pt="TYC",kt="seedUser",vt="softToken",Ut="otpSMS",ht="API509E",yt={PASSWORD:"Password",SOFT_TOKEN:"SoftToken",BIOMETRY:"Biometry"},xt="BANCOR",mt="Prepaga",wt={BACKSPACE:"Backspace",ARROW_LEFT:"ArrowLeft",ARROW_RIGHT:"ArrowRight",ARROW_DOWN:"ArrowDown",ARROW_UP:"ArrowUp",DELETE:"Delete",TAB:"Tab",SPACE:" ",ENTER:"Enter",HOME:"Home",END:"End",PAGE_UP:"PageUp",PAGE_DOWN:"PageDown",ESCAPE:"Escape",UNIDENTIFIED:"Unidentified"},Lt={BUTTON:"BUTTON"},Ft={MODO:"modo"},Yt="button, [href], input, select, textarea, [tabindex]:not([tabindex='-1'])",Bt="US",Gt="AR",Mt="DBVSNotFound",Vt="promotions.widget",Ht={ACTIVE:"Active",RECORD:"Record"},gt={ARS:"ARS",USD:"USD"},Wt="22_42_80_50",Kt={CARD:"card",TABLE:"table"},zt="PENDIENTE"},64:function(t,n,e){"use strict";e.d(n,"b",(function(){return f})),e.d(n,"i",(function(){return b})),e.d(n,"c",(function(){return _})),e.d(n,"a",(function(){return I})),e.d(n,"d",(function(){return l})),e.d(n,"e",(function(){return S})),e.d(n,"f",(function(){return D})),e.d(n,"g",(function(){return P})),e.d(n,"h",(function(){return v}));var r=e(0),u=e(2),c=e(19),a=e(16),o=e(5),i=e(4),s=e(3),d=e(21),f=Object(u.a)(Object(u.a)({},s.i),{},{COR055W:{type:s.g.ERROR}});function b(t){if(!t||!Object(d.a)(t))return!0;var n=t;return Object(s.u)(f,n.code)}var O=["token"],T=["token"],p=["token"],A={ID_ACTIVITY_CONSULT_PAYMENTS:"paymentSuppliersIndividual.list",ID_ACTIVITY_CONTRACT_ID:"paymentSuppliers.redirect",ID_ACTIVITY_DOWNLOAD:"paymentSuppliersIndividual.download",ID_ACTIVITY_ACCOUNT_LIST:"accounts.list",ID_ACTIVITY_ACCOUNT_LIST_PERMISSION:"accounts.list.authorized.to.perform.debits",ID_ACTIVITY_ADHERED_AGREEMENT:"paymentSuppliers.adhere.send"};function _(t){return E.apply(this,arguments)}function E(){return(E=Object(o.a)(Object(r.a)().mark((function t(n){var e,a,o,d,f,T;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e="".concat(i.d.BANCOR_AUTH_API,"/").concat(A.ID_ACTIVITY_CONSULT_PAYMENTS),a=n.token,o=Object(c.a)(n,O),d=Object(u.a)({},o),t.next=5,Object(i.a)({method:i.c.POST,url:e,body:d,token:a});case 5:if(f=t.sent){t.next=8;break}return t.abrupt("return",null);case 8:if(T=f.json,!Object(s.w)(T,b)){t.next=11;break}return t.abrupt("return",Object(s.y)(null===T||void 0===T?void 0:T.code));case 11:return t.abrupt("return",T);case 12:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function I(t){return j.apply(this,arguments)}function j(){return(j=Object(o.a)(Object(r.a)().mark((function t(n){var e,u,c,a;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e="".concat(i.d.BANCOR_AUTH_API,"/").concat(A.ID_ACTIVITY_ADHERED_AGREEMENT),u=n.token,t.next=4,Object(i.a)({method:i.c.POST,url:e,token:u});case 4:if(c=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:return a=c.json,t.abrupt("return",a);case 9:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function l(t){return R.apply(this,arguments)}function R(){return(R=Object(o.a)(Object(r.a)().mark((function t(n){var e,u,c,a;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e="".concat(i.d.BANCOR_AUTH_API,"/").concat(A.ID_ACTIVITY_CONTRACT_ID),u=n.token,t.next=4,Object(i.a)({method:i.c.POST,url:e,token:u});case 4:if(c=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(a=c.json,!Object(s.w)(a,b)){t.next=10;break}return t.abrupt("return",Object(s.y)(null===a||void 0===a?void 0:a.code));case 10:return t.abrupt("return",a);case 11:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function S(t){return N.apply(this,arguments)}function N(){return(N=Object(o.a)(Object(r.a)().mark((function t(n){var e,a,o,d,f,O,p;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e="".concat(i.d.BANCOR_AUTH_API,"/").concat(A.ID_ACTIVITY_DOWNLOAD),a=n.token,o=Object(c.a)(n,T),d=Object(u.a)({},o),f=h(d),t.next=6,Object(i.a)({method:i.c.POST,url:e,body:f,token:a});case 6:if(O=t.sent){t.next=9;break}return t.abrupt("return",null);case 9:if(p=O.json,!Object(s.w)(p,b)){t.next=12;break}return t.abrupt("return",Object(s.y)(null===p||void 0===p?void 0:p.code));case 12:return t.abrupt("return",p);case 13:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function D(t){return C.apply(this,arguments)}function C(){return(C=Object(o.a)(Object(r.a)().mark((function t(n){var e,a,o,d,f,O,T;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e="".concat(i.d.BANCOR_AUTH_API,"/").concat(A.ID_ACTIVITY_DOWNLOAD),a=n.token,o=Object(c.a)(n,p),d=Object(u.a)({},o),f=h(d),t.next=6,Object(i.a)({method:i.c.POST,url:e,body:f,token:a});case 6:if(O=t.sent){t.next=9;break}return t.abrupt("return",null);case 9:if(T=O.json,!Object(s.w)(T,b)){t.next=12;break}return t.abrupt("return",Object(s.y)(null===T||void 0===T?void 0:T.code));case 12:return t.abrupt("return",T);case 13:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function P(t){return k.apply(this,arguments)}function k(){return(k=Object(o.a)(Object(r.a)().mark((function t(n){var e,u,c,a;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.token,u="".concat(i.d.BANCOR_AUTH_API,"/").concat(A.ID_ACTIVITY_ACCOUNT_LIST),t.next=4,Object(i.a)({method:i.c.POST,url:u,excludeFromServiceError:!0,token:e});case 4:if(c=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(a=c.json,!Object(s.w)(a,b)){t.next=10;break}return t.abrupt("return",Object(s.y)(null===a||void 0===a?void 0:a.code));case 10:return t.abrupt("return",a);case 11:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function v(t){return U.apply(this,arguments)}function U(){return(U=Object(o.a)(Object(r.a)().mark((function t(n){var e,u,c,a,o,d;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.token,u=n.idPermissions,c=n.productTypes,a="".concat(i.d.BANCOR_AUTH_API,"/").concat(A.ID_ACTIVITY_ACCOUNT_LIST_PERMISSION),t.next=4,Object(i.a)({method:i.c.POST,url:a,excludeFromServiceError:!0,token:e,body:{idPermissions:u,productTypes:c}});case 4:if(o=t.sent){t.next=7;break}return t.abrupt("return",null);case 7:if(d=o.json,!Object(s.w)(d,b)){t.next=10;break}return t.abrupt("return",Object(s.y)(null===d||void 0===d?void 0:d.code));case 10:return t.abrupt("return",d);case 11:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function h(t){return Object.entries(t).reduce((function(t,n){var e=Object(a.a)(n,2),r=e[0],u=e[1];return"undefined"!==u&&(t[r]=u),t}),{})}},8:function(t,n,e){"use strict";e.d(n,"b",(function(){return a})),e.d(n,"c",(function(){return o})),e.d(n,"a",(function(){return i}));var r=e(1),u=e(285),c=Object(r.f)({Reducer:function(t,n){return Object(u.a)(t,n)}}),a=c.useDispatch,o=c.useSelector,i=c.Store},83:function(t,n,e){"use strict";e.d(n,"b",(function(){return s})),e.d(n,"c",(function(){return f})),e.d(n,"a",(function(){return O}));var r=e(0),u=e(5),c=e(3),a=e(4),o=e(122);e.d(n,"d",(function(){return o.a})),e.d(n,"e",(function(){return o.b})),e.d(n,"f",(function(){return o.c}));var i={PENDING:"widgets.pending",READ_TRANSACTION:"core.readTransaction",CANCEL_TRANSACTION:"core.cancelTransaction"};function s(t){return d.apply(this,arguments)}function d(){return(d=Object(u.a)(Object(r.a)().mark((function t(n){var e,u,s;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.accessToken,t.next=3,Object(a.a)({method:a.c.POST,url:"".concat(a.d.BANCOR_AUTH_API,"/").concat(i.PENDING),token:e});case 3:if(u=t.sent){t.next=6;break}return t.abrupt("return",null);case 6:if(s=u.json,!Object(c.w)(s,o.c)){t.next=9;break}return t.abrupt("return",Object(c.y)(null===s||void 0===s?void 0:s.code));case 9:return t.abrupt("return",s);case 10:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function f(t){return b.apply(this,arguments)}function b(){return(b=Object(u.a)(Object(r.a)().mark((function t(n){var e,u,s,d;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.accessToken,u=n.idTransaction,t.next=3,Object(a.a)({method:a.c.POST,url:"".concat(a.d.BANCOR_AUTH_API,"/").concat(i.READ_TRANSACTION),token:e,body:{idTransaction:u}});case 3:if(s=t.sent){t.next=6;break}return t.abrupt("return",null);case 6:if(d=s.json,!Object(c.w)(d,o.c)){t.next=9;break}return t.abrupt("return",Object(c.y)(null===d||void 0===d?void 0:d.code));case 9:return t.abrupt("return",d);case 10:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function O(t){return T.apply(this,arguments)}function T(){return(T=Object(u.a)(Object(r.a)().mark((function t(n){var e,u,s,d;return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=n.accessToken,u=n.idTransaction,t.next=3,Object(a.a)({method:a.c.POST,url:"".concat(a.d.BANCOR_AUTH_API,"/").concat(i.CANCEL_TRANSACTION),token:e,body:{idTransaction:u}});case 3:if(s=t.sent){t.next=6;break}return t.abrupt("return",null);case 6:if(d=s.json,!Object(c.w)(d,o.c)){t.next=9;break}return t.abrupt("return",Object(c.y)(null===d||void 0===d?void 0:d.code));case 9:return t.abrupt("return",d);case 10:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=main~b3b1f690.421848e3.chunk.js.map