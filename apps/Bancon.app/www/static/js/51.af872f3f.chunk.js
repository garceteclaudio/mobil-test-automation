(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[51],{366:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return _}));var a=n(0),c=n(5),r=n(11),o=n(39),i=n(80),s=n(8),u=n(187),d=n(138),l=n(33),b=n(6),j=n(38),O=n(494),m=n(82),f=n(488),h=n(608),p=n(522),E=n(489),x=n(51),C=n(307),T=n(433),g=n.n(T),v=n(10);function _(){var e=Object(s.b)(),t=Object(j.c)().textGet,n=Object(i.g)(),T=Object(x.sb)(x.O),_=Object(s.c)(d.c.exchangeToken),N=Object(s.c)(d.c.documentTypes);r.b.useEffect((function(){N.length||e(d.b.pre({exchangeToken:b.D}))}),[e,N]);var P=Object(s.c)(d.c.recoverData),y=(null===P||void 0===P?void 0:P.usernameToRecover)||b.D,S=(null===P||void 0===P?void 0:P.documentNumber)||b.D,M=Object(s.c)(d.c.fetching),A=Object(s.c)(d.c.warning),I=function(){var e=t({uuid:"spa.documentType.error.cuit"}),n=t({uuid:"spa.documentType.error.cdi"}),a=t({uuid:"spa.documentType.error.passport"}),c=t({uuid:"spa.generic.field.error.required"}),r=o.e.object({usernameToRecover:Object(u.d)(o.e.string.required(),c)});return Object(o.a)(r,Object(h.b)({textErrorCdi:n,textErrorCuit:e,textErrorPassport:a,textErrorRequired:c}))}(),R=t({uuid:"".concat(C.KEY_PREFIX,".user.label")});return Object(v.jsx)(E.a,{"header-onBack":function(){e(l.a.cleanUser()),n(T)},"header-title":"".concat(C.KEY_PREFIX,".title"),children:Object(v.jsx)("section",{children:Object(v.jsxs)(f.a,{schema:I,warnings:A,onSubmit:function(e){return k.apply(this,arguments)},children:[Object(v.jsx)("div",{className:g.a.textSubtitle,children:Object(v.jsx)(j.b,{uuid:"".concat(C.KEY_PREFIX,".step1.text")})}),Object(v.jsxs)("div",{className:g.a.alignInputs,children:[Object(v.jsx)(h.a,{documentNumberDefValue:S,documentTypeDefValue:p.a,documentTypeList:N}),Object(v.jsx)(O.a,{withoutSpaces:!0,defaultValue:y,id:"usernameToRecover",label:R,name:"usernameToRecover"})]}),Object(v.jsx)(m.a,{label:{uuid:"spa.form.continue"},loading:M,type:"submit"})]})})});function k(){return(k=Object(c.a)(Object(a.a)().mark((function t(n){var c,r,o,i;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return c=n.usernameToRecover,r=n.documentType,o=n.documentNumber,i={usernameToRecover:c,documentType:r,documentNumber:o},t.next=4,e(d.b.step1({exchangeToken:_,recoverData:i}));case 4:e(d.a.setRecoverData(i));case 5:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},367:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return j}));var a=n(0),c=n(5),r=(n(11),n(8)),o=n(138),i=n(6),s=n(270),u=n(576),d=n(489),l=n(307),b=n(10);function j(){var e=Object(r.b)(),t=Object(r.c)(o.c.hasPin),n=Object(r.c)(o.c.fetching),j=Object(r.c)(o.c.exchangeToken);return n?Object(b.jsx)(s.a,{}):Object(b.jsx)(d.a,{"header-onBack":function(){e(o.a.cleanExchangeToken())},"header-title":"".concat(l.KEY_PREFIX,".title"),children:Object(b.jsx)(u.a,{handleByCode:function(){return O.apply(this,arguments)},handleByPin:function(){return m.apply(this,arguments)},hasPin:t,textSubtitle:"".concat(l.KEY_PREFIX,".step2.text")})});function O(){return(O=Object(c.a)(Object(a.a)().mark((function t(){return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e(o.b.byCode({exchangeToken:j}));case 2:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function m(){return(m=Object(c.a)(Object(a.a)().mark((function t(){return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e(o.b.byPin({exchangeToken:j}));case 2:e(o.a.setVerificationCode(i.D));case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},368:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return g}));var a=n(0),c=n(5),r=n(11),o=n(39),i=n(8),s=n(187),u=n(138),d=n(38),l=n(82),b=n(494),j=n(488),O=n(489),m=n(79),f=n(99),h=n(6),p=n(535),E=n(433),x=n.n(E),C=n(307),T=n(10);function g(){var e=Object(i.b)(),t=Object(d.c)().textGet,n=Object(f.a)().getValueConfig,E=Object(i.c)(u.c.exchangeToken),g=Object(i.c)(u.c.fetching),v=Object(i.c)(u.c.isValidationCodeSent),_=Object(i.c)(u.c.warning),N=Object(p.a)(n),P=t({uuid:"".concat(C.KEY_PREFIX,".byCodeStep1.code.label")}),y=t({uuid:"spa.generic.field.error.required"}),S=o.e.object({validationCode:Object(s.d)(o.e.string.required(),y)}),M=r.b.useCallback((function(){e(m.a.set({kind:"SUCCESS",text:{uuid:"spa.recoverPassword.byCodeStep1.text1"},duration:h.v})),e(u.a.cleanIsValidationCodeSent())}),[e]);return r.b.useEffect((function(){v&&M()}),[M,v]),Object(T.jsx)(O.a,{"header-onBack":function(){e(u.a.cleanRecoverBy())},"header-title":"".concat(C.KEY_PREFIX,".title"),children:Object(T.jsx)("section",{children:Object(T.jsxs)(j.a,{schema:S,warnings:_,onSubmit:function(e){return A.apply(this,arguments)},children:[Object(T.jsx)(d.b,{className:x.a.byCodeInvitationCode,uuid:"".concat(C.KEY_PREFIX,".byCodeStep1.text2")}),Object(T.jsx)("div",{className:x.a.alignInputs,children:Object(T.jsx)(b.a,{id:"validationCode",label:P,maxLength:N,name:"validationCode"})}),Object(T.jsx)(l.a,{label:{className:x.a.textSubtitle,uuid:"spa.form.continue"},loading:g,type:"submit"}),Object(T.jsxs)("div",{className:x.a.alignInvitationCode,children:[Object(T.jsx)(d.b,{tag:"span",uuid:"spa.generic.byCode.notReceive.text"}),Object(T.jsx)(l.a,{className:x.a.haveCode,kind:"plain",label:{uuid:"spa.generic.byCode.resend.link"},onClick:function(){return I.apply(this,arguments)}})]})]})})});function A(){return(A=Object(c.a)(Object(a.a)().mark((function t(n){var c;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return c=n.validationCode,t.next=3,e(u.b.byCodeStep1({exchangeToken:E,validationCode:c}));case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function I(){return(I=Object(c.a)(Object(a.a)().mark((function t(){return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e(u.b.resendCode({exchangeToken:E,resendChannel:C.RESEND_CHANNEL_MAIL}));case 2:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},369:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return g}));var a=n(0),c=n(5),r=n(11),o=n(39),i=n(187),s=n(8),u=n(138),d=n(6),l=n(38),b=n(82),j=n(494),O=n(488),m=n(489),f=n(79),h=n(99),p=n(535),E=n(433),x=n.n(E),C=n(307),T=n(10);function g(){var e=Object(s.b)(),t=Object(l.c)().textGet,n=Object(h.a)().getValueConfig,E=Object(s.c)(u.c.exchangeToken),g=Object(s.c)(u.c.mobileNumber)||d.D,v=Object(s.c)(u.c.fetching),_=Object(s.c)(u.c.warning),N=Object(p.a)(n),P=t({uuid:"spa.generic.field.error.required"}),y=o.e.object({verificationCode:Object(i.d)(o.e.string.required(),P)}),S=r.b.useCallback((function(){e(f.a.set({kind:"SUCCESS",text:{uuid:"".concat(C.KEY_PREFIX,".byCodeStep2.text1"),replace:g},duration:d.v})),e(u.a.cleanMobileNumber())}),[e,g]);r.b.useEffect((function(){g&&S()}),[S,g]);var M=t({uuid:"".concat(C.KEY_PREFIX,".byCodeStep2.code.label")});return Object(T.jsx)(m.a,{"header-onBack":function(){e(u.a.cleanRecoverBy())},"header-title":"".concat(C.KEY_PREFIX,".title"),children:Object(T.jsx)("section",{children:Object(T.jsxs)(O.a,{schema:y,warnings:_,onSubmit:function(e){return A.apply(this,arguments)},children:[Object(T.jsx)(l.b,{className:x.a.byCodeInvitationCode,uuid:"".concat(C.KEY_PREFIX,".byCodeStep2.text2")}),Object(T.jsx)("div",{className:x.a.alignInputs,children:Object(T.jsx)(j.a,{id:"verification",label:M,maxLength:N,name:"verificationCode"})}),Object(T.jsx)(b.a,{label:{className:x.a.textSubtitle,uuid:"spa.form.continue"},loading:v,type:"submit"}),Object(T.jsxs)("div",{className:x.a.alignInvitationCode,children:[Object(T.jsx)(l.b,{tag:"span",uuid:"spa.generic.byCode.notReceive.text"}),Object(T.jsx)(b.a,{className:x.a.haveCode,kind:"plain",label:{uuid:"spa.generic.byCode.resend.link"},onClick:function(){return I.apply(this,arguments)}})]})]})})});function A(){return(A=Object(c.a)(Object(a.a)().mark((function t(n){var c;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return c=n.verificationCode,t.next=3,e(u.b.byCodeStep2({exchangeToken:E,verificationCode:c}));case 3:e(u.a.setVerificationCode(c));case 4:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function I(){return(I=Object(c.a)(Object(a.a)().mark((function t(){return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e(u.b.resendCode({exchangeToken:E,resendChannel:C.RESEND_CHANNEL_SMS}));case 2:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},490:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var a=n(2),c=n(19),r=n(11),o=n(41),i=n(50),s=n(495),u=n.n(s),d=(n(496),n(38)),l=n(82),b=n(10),j=["ariaLabelledBy","id","children","title","onClose","hasCloseIcon"],O=u.a.TYPE_MODAL,m=u.a.NAME_MODAL;function f(e){var t=e,n=t.ariaLabelledBy,s=t.id,u=t.children,f=t.title,h=t.onClose,p=t.hasCloseIcon,E=Object(c.a)(t,j),x="modal-header-".concat(s||""),C="string"===typeof f?x:n,T="string"===typeof f?Object(b.jsx)(d.b,{id:x,tag:"h4",uuid:f}):f;return Object(b.jsx)(o.a,{name:m,tag:"div",type:O,children:Object(b.jsxs)(i.Modal,Object(a.a)(Object(a.a)({ariaLabelledBy:C,onClose:h},E),{},{children:[Object(b.jsx)(i.Modal.Header,{children:f&&Object(b.jsxs)(r.b.Fragment,{children:[T,p&&Object(b.jsx)(l.a,{icon:"close",kind:"icon",label:{uuid:"spa.a11y.buttons.close.modal"},onClick:h})]})}),u]}))})}f.defaultProps={ariaLabelledBy:"",closeOnBgTap:!0,hasCloseIcon:!0,initialFocusElementId:"",title:""},f.Body=function(e){var t=e.children;return Object(b.jsx)(i.Modal.Body,{children:t})},f.Footer=function(e){var t=e.children,n=e.className;return Object(b.jsx)(i.Modal.Footer,{className:n,children:t})}},495:function(e,t,n){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},496:function(e,t,n){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},512:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var a=n(2),c=n(19),r=n(11),o=n(50),i=n(41),s=n(488),u=n(514),d=n.n(u),l=n(10),b=["id","name","methods","defaultValue","onChange","valueAsNumber"],j=d.a.NAME_INPUT_NUMBER,O=d.a.TYPE_INPUT_NUMBER,m={id:j,valueAsNumber:!0},f=r.b.memo((function(e){var t,n=e.id,s=e.name,u=e.methods,d=e.defaultValue,m=e.onChange,f=e.valueAsNumber,h=Object(c.a)(e,b),p=u.register,E=u.formState,x=u.getValues,C=u.setValue,T=u.clearErrors,g=E.errors,v="".concat(s),_=x()[v],N=g[s];return r.b.useEffect((function(){d&&C(v,d,{shouldValidate:!0}),d||C(v,void 0)}),[d,v,C]),Object(l.jsx)(i.a,{name:j,type:O,children:Object(l.jsx)(o.NumberField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({},d&&{defaultValue:d}),{},{id:n||s},N&&{error:null===(t=N.message)||void 0===t?void 0:t.toString()}),p(v,{onChange:function(e){m&&m(e);T([v])},valueAsNumber:f})),{},{value:_},h))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function h(e){var t=s.a.useContext();return Object(l.jsx)(f,Object(a.a)({methods:t},e))}h.displayName=j,h.defaultProps=m},514:function(e,t,n){e.exports={NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element"}},517:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var a=n(2),c=n(19),r=n(11),o=n(50),i=n(41),s=n(488),u=n(529),d=n.n(u),l=n(10),b=["id","name","autoFocus","methods","withSuggestions","onChange"],j=d.a.NAME_INPUT_PASSWORD,O=d.a.TYPE_INPUT_PASSWORD,m={id:j},f=r.b.memo((function(e){var t,n=e.id,r=e.name,s=e.autoFocus,u=e.methods,d=e.withSuggestions,m=void 0===d||d,f=e.onChange,h=Object(c.a)(e,b),p=u.register,E=u.formState,x=u.clearErrors,C=E.errors,T="".concat(r),g=C[r];return Object(l.jsx)(i.a,{name:j,type:O,children:Object(l.jsx)(o.PasswordField,Object(a.a)(Object(a.a)(Object(a.a)({autoComplete:m?"on":"off",autoFocus:s,id:n||r},g&&{error:null===(t=g.message)||void 0===t?void 0:t.toString()}),p(T,{required:!0,onChange:function(e){f&&f(e);x([T])}})),h))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function h(e){var t=s.a.useContext();return Object(l.jsx)(f,Object(a.a)({methods:t},e))}h.displayName=j,h.defaultProps=m},524:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(2),c=n(16),r=n(11),o=n(531),i=n.n(o),s=n(10),u=i.a.NAME_STEPPER;i.a.TYPE_STEPPER;function d(e){var t=e,n=t.steps,o=t.handleFallback,i=t.handleChangeStep,u=Object.entries(n).filter((function(e){return Boolean(e[1].condition)})).map((function(e){var t=Object(c.a)(e,2),n=t[0],r=t[1],o=r.component;return Object(s.jsx)(o,Object(a.a)({},r.props||{}),n)}),{}).shift(),d=r.b.useState(null===u||void 0===u?void 0:u.key),l=Object(c.a)(d,2),b=l[0],j=l[1];return r.b.useEffect((function(){!u&&o&&o()}),[o,u]),r.b.useEffect((function(){b!==(null===u||void 0===u?void 0:u.key)&&i&&i(),j(null===u||void 0===u?void 0:u.key)}),[b,i,null===u||void 0===u?void 0:u.key]),u||null}d.displayName=u,d.defaultProps={handleChangeStep:function(){},handleFallback:function(){}}},529:function(e,t,n){e.exports={NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element"}},531:function(e,t,n){e.exports={NAME_STEPPER:"Stepper",TYPE_STEPPER:"Element"}},576:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));n(11);var a=n(50),c=n(41),r=n(38),o=n(82),i=n(577),s=n.n(i),u=n(578),d=n.n(u),l=n(10),b=d.a.NAME_CONTACT_METHODS,j=d.a.TYPE_CONTACT_METHODS;function O(e){var t=e,n=t.hasPin,i=t.handleByCode,u=t.handleByPin,d=t.textSubtitle;return Object(l.jsxs)(c.a,{name:b,tag:"section",type:j,children:[Object(l.jsx)("div",{className:s.a.textSubtitle,children:Object(l.jsx)(r.b,{uuid:d})}),Object(l.jsxs)(o.a,{className:s.a.contactMethodButton,disabled:!n,kind:"plain",label:{uuid:"spa.method.debitCardAndPin.button"},onClick:u,children:[Object(l.jsxs)("div",{className:s.a.alignIconPrimary,children:[Object(l.jsx)(a.Icon,{name:"card",size:"small",stroke:"gray-light"}),Object(l.jsx)(r.b,{tag:"span",uuid:"spa.method.debitCardAndPin.button"})]}),Object(l.jsx)("div",{className:s.a.alignIconSecondary,children:Object(l.jsx)(a.Icon,{name:"right",size:"xsmall",stroke:"gray-600"})})]}),Object(l.jsxs)(o.a,{className:s.a.contactMethodButton,kind:"plain",label:{uuid:"spa.method.smsAndMail.button"},onClick:i,children:[Object(l.jsxs)("div",{className:s.a.alignIconPrimary,children:[Object(l.jsx)(a.Icon,{name:"mail",size:"small",stroke:"gray-light"}),Object(l.jsx)(r.b,{tag:"span",uuid:"spa.method.smsAndMail.button"})]}),Object(l.jsx)("div",{className:s.a.alignIconSecondary,children:Object(l.jsx)(a.Icon,{name:"right",size:"xsmall",stroke:"gray-600"})})]})]})}O.defaultProps={}},577:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_CONTACT_METHODS:"ContactMethods",TYPE_CONTACT_METHODS:"Section",textSubtitle:"_rules_textSubtitle__2Rry5",contactMethodButton:"_rules_contactMethodButton__3-wEs",alignIconPrimary:"_rules_alignIconPrimary__3EXbD",alignIconSecondary:"_rules_alignIconSecondary__3FHXW"}},578:function(e,t,n){e.exports={NAME_CONTACT_METHODS:"ContactMethods",TYPE_CONTACT_METHODS:"Section"}},579:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return E}));var a=n(2),c=n(19),r=n(6),o=n(187),i=(n(11),n(41)),s=n(39),u=n(517),d=n(38),l=n(580),b=n.n(l),j=n(512),O=n(10),m=["onChange","onBlur"],f=b.a.NAME_DEBIT_CARD_AND_PIN_SECTION,h=b.a.TYPE_DEBIT_CARD_AND_PIN_SECTION,p=function(e){return s.e.object({debitCardLastFour:Object(o.g)(e),pinCode:Object(o.n)(e)})};function E(e){var t=e,n=t.onChange,o=t.onBlur,s=Object(c.a)(t,m),l=Object(d.c)().textGet,b=l({uuid:"spa.byPin.debitCardLastFour.input.label"}),p=l({uuid:"spa.byPin.pin.input.label"});return Object(O.jsxs)(i.a,Object(a.a)(Object(a.a)({name:f,tag:"section",type:h},s),{},{children:[Object(O.jsx)(j.a,{allowLeadingZeros:!0,label:b,maxLength:r.M,name:"debitCardLastFour",regexPattern:/\d/g,valueAsNumber:!1,onBlur:o,onChange:n}),Object(O.jsx)(u.a,{label:p,maxLength:r.M,name:"pinCode",regexPattern:/\d/g,onChange:n})]}))}E.defaultProps={}},580:function(e,t,n){e.exports={NAME_DEBIT_CARD_AND_PIN_SECTION:"DebitCardAndPinSection",TYPE_DEBIT_CARD_AND_PIN_SECTION:"Section"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=51.af872f3f.chunk.js.map