(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[99,283],{209:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return D}));var n=a(0),o=a(5),r=a(2),l=a(16),c=a(38),i=a(11),s=a(497),u=a(8),_=a(151),d=a(501),b=a(499),m=a(33),O=a(600),p=a(270),j=a(630),E=a(765),T=a(6),f=a(80),x=a(20),M=a(621),h=a(74),A=a(99),g=a(768),N=a(50),P=a(82),R=a(36),v=a(335),L=a(437),C=a.n(L),k=a(10);function D(){var e=Object(f.g)(),t=Object(u.b)(),a=Object(b.a)(),L=Object(R.i)().isDesktop,D=Object(A.a)().getValueConfig,F=i.b.useState(!0),w=Object(l.a)(F,2),H=w[0],y=w[1],I=Object(u.c)(m.e.token),S=Object(u.c)(_.c.error),Y=Object(u.c)(_.c.fetchingLoanList),B=Object(u.c)(_.c.fetchingOffer),U=Object(u.c)(_.c.offer),V=Object(u.c)(m.e.isCorporateEnvironment),J=Object(u.c)(_.c.loanList),Q=Object(u.c)(_.c.filename),X=Object(u.c)(_.c.content),z=Object(h.a)(D("spa.loan.offer.url")),W=Object(h.a)(D("spa.loan.offer.url.corporate")),G=V?W:z,q=Object(m.h)("legacy.menu.products.loanbt.downloadSettlementVoucher"),K=Object(m.h)("legacy.menu.products.loanbt.downloadContractFile"),Z=Object(m.h)("legacy.menu.products.loanbt.downloadReceipt"),$=Object(m.h)("legacy.menu.products.loanbt.read"),ee=Object(m.h)("legacy.menu.products.loanbt.create"),te=!V&&ee;return i.b.useEffect((function(){I&&Q&&X&&(a(Q,Object(d.a)(X)),t(_.a.cleanReceipt()))}),[X,t,Q,a,I]),i.b.useEffect((function(){I&&(t(_.a.clean()),te&&t(_.b.getLoanOffer({token:I})),$&&t(_.b.getLoanList({token:I})))}),[t,I,te,$]),Y||B||S||void 0===U&&te?Object(k.jsxs)(s.a,{withoutBox:!0,className:C.a.internalContainer,"header-onBack":re,children:[(Y||B)&&!S&&Object(k.jsx)(p.a,{}),S&&Object(k.jsx)(O.a,{})]}):Object(k.jsx)(s.a,{withoutBox:!0,className:C.a.internalContainer,"header-onBack":re,children:Object(k.jsxs)(i.b.Fragment,{children:[(null===J||void 0===J?void 0:J.some((function(e){var t;return(null===(t=e.loanStateName)||void 0===t?void 0:t.toUpperCase())===T.Y})))&&Object(k.jsx)(j.a,{message:"spa.loan.alert.body",title:"spa.loan.alert.title"}),te&&Object(k.jsx)(E.a,Object(r.a)({},function(){if(!U||!U.loanID)return{title:"spa.widget.loan.offer.text",buttonLabel:"spa.loan.simulate.view.more",to:z};return{amount:null===U||void 0===U?void 0:U.loanProductMaxAmountNet,body:"spa.widget.loan.offer.amount",buttonLabel:"spa.widget.loan.simulate",title:"spa.widget.loan.offer.text",onClick:function(){e(x.u)}}}())),$&&Object(k.jsxs)(i.b.Fragment,{children:[Object(k.jsxs)("div",{className:C.a.tenureHeader,children:[Object(k.jsx)(c.b,{tag:"h4",uuid:"spa.loan.title"}),L&&Object(k.jsxs)("div",{children:[Object(k.jsx)(P.a,{kind:"plain",label:T.D,onClick:function(){y(!0)},children:Object(k.jsx)(N.Icon,{name:"menu",stroke:H?"primary":"gray-600"})}),Object(k.jsx)(P.a,{kind:"plain",label:T.D,onClick:function(){y(!1)},children:Object(k.jsx)(N.Icon,{name:"bullet",stroke:H?"gray-600":"primary"})})]})]}),function(){if(H)return Object(k.jsxs)("div",{className:C.a.cardsLoan,children:[J&&J.map((function(e){return Object(k.jsx)(M.a,{amount:e.loanTotalAmount,amountText:"spa.loans.amount",avatarName:"sack",cardLabel:"cardLavel",date:e.loanCreationDate,dateText:"spa.loans.date",hasOperationTag:!1,operationOptions:ae(e.loanId),title:e.productName,onClick:function(){return t=e.loanId,void($&&ne(t));var t}},e.loanId)})),(!J||J.length===T.Sb)&&Object(k.jsx)(g.a,{isCorporate:V,to:G})]});return Object(k.jsx)(v.default,{getOperationOptions:ae})}()]})]})});function ae(e){var t=[{}];return $&&t.push({label:"spa.loans.options.detail",onOptionClick:function(){return ne(e)}}),V?q&&t.push({label:"spa.loans.options.settlement.receipt",onOptionClick:le.bind(null,e)}):K&&t.push({label:"spa.loans.options.contract",onOptionClick:ie.bind(null,e)}),Z&&t.push({label:"spa.loans.options.last.voucher",onOptionClick:ce.bind(null,e)}),[].concat(t)}function ne(e){return oe.apply(this,arguments)}function oe(){return(oe=Object(o.a)(Object(n.a)().mark((function a(o){return Object(n.a)().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:if(I){a.next=2;break}return a.abrupt("return");case 2:return a.next=4,t(_.b.getLoanDetail({token:I,idLoan:o})).unwrap();case 4:e(x.t);case 5:case"end":return a.stop()}}),a)})))).apply(this,arguments)}function re(){e(x.m)}function le(e){I&&t(_.b.downloadSettlmentReceipt({idLoan:e,token:I}))}function ce(e){I&&t(_.b.downloadLastReceipt({idLoan:e,token:I}))}function ie(e){I&&t(_.b.downloadContractFile({idLoan:e,token:I}))}}},335:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return E}));var n=a(2),o=(a(11),a(8)),r=a(151),l=a(50),c=a(6),i=a(38),s=a(504),u=a(100),_=a(582),d=a(519),b=a(437),m=a.n(b),O=a(10),p=[{id:"product",label:"spa.loanbt.table.loan",numeric:!1,align:"center"},{id:"amount",label:"spa.loans.amount",numeric:!1,align:"center"},{id:"date",label:"spa.loans.date",numeric:!1,align:"center"}],j=[{id:"actions",label:c.D,numeric:!1,align:"right",width:c.J}];function E(e){var t=e.getOperationOptions,a=Object(o.c)(r.c.loanList),b=Object(i.c)().textGet;return Object(O.jsx)(l.BasicTable,{className:m.a.table,classNameContainer:m.a.tableContainer,headData:[].concat(p,j).map((function(e){return Object(n.a)(Object(n.a)({},e),{},{label:e.label===c.D?c.D:b({uuid:e.label})})})),id:"tenure",rowsData:(a||[]).map((function(e){var t,a=e.loanId,n=e.loanTotalAmount,o=e.loanCreationDate;return{id:a,product:e.productName,amount:(t=n,Object(d.a)(t||c.Sb,{minimumFractionDigits:c.Jb})),date:Object(O.jsx)(s.a,{date:o,formatParams:{format:u.a.SHORT}}),actions:Object(O.jsx)(_.a,{"aria-label":b({uuid:"spa.a11y.buttons.options"}),options:E(a)})}}))});function E(e){return t(e)}}},437:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",internalContainer:"_rules_internalContainer__2_bHW",title:"_rules_title__3lbJU",subtitle:"_rules_subtitle__3oo1s",cardsLoan:"_rules_cardsLoan__1eE2M",table:"_rules_table__1qIEY",tableContainer:"_rules_tableContainer__3XHPJ",tenureHeader:"_rules_tenureHeader__rIwBt",loanDetail:"_rules_loanDetail__3x6Nw",cardsDetail:"_rules_cardsDetail__3z-n2",amount:"_rules_amount__3zCU5",sectionAccordion:"_rules_sectionAccordion__1e8x1",contentAccordion:"_rules_contentAccordion__3xTRR",cardLoanAmount:"_rules_cardLoanAmount__2xM2V",tab:"_rules_tab__Af0jH",contentInfo:"_rules_contentInfo__Jppi2",value:"_rules_value__khzS9",accordionSummary:"_rules_accordionSummary__39l_v",titleQuotas:"_rules_titleQuotas__1Aw1N",tagQuotas:"_rules_tagQuotas__2K_5V",accordionDetails:"_rules_accordionDetails__16TUv",contentQuotas:"_rules_contentQuotas__2Yur7",tabsHeader:"_rules_tabsHeader__2oxaX",tag:"_rules_tag__3zWev",pictureName:"_rules_pictureName__2t_6i",modalInstallments:"_rules_modalInstallments__2dcN-",modalBody:"_rules_modalBody__3C3m2",modalFooter:"_rules_modalFooter__2_W5d"}},600:function(e,t,a){"use strict";a.d(t,"a",(function(){return i}));var n=a(38),o=(a(11),a(50)),r=a(601),l=a.n(r),c=a(10);function i(){return Object(c.jsxs)("section",{className:l.a.ErrorRoute,children:[Object(c.jsx)(o.Icon,{name:"error",size:"xlarge",stroke:"gray-light"}),Object(c.jsxs)("div",{className:l.a.ErrorText,children:[Object(c.jsx)(n.b,{tag:"h6",uuid:"spa.error.route.title"}),Object(c.jsx)(n.b,{tag:"p",uuid:"spa.error.route.body"})]})]})}},601:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",ErrorRoute:"_rules_ErrorRoute__2xxFQ",ErrorText:"_rules_ErrorText__31F_8"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=99.bb7aae56.chunk.js.map