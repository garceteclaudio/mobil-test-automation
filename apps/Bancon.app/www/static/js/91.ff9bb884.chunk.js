(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[91,199,313],{229:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return h}));var a=n(0),s=n(5),r=n(16),o=n(11),c=n(80),i=n(45),l=n(99),u=n(171),b=n(50),E=n(6),_=n(38),O=n(489),j=n(270),T=n(51),d=n(481),x=n.n(d),m=n(10),N="softTokenDate",M="softTokenValue";function h(){var e=Object(c.g)(),t=Object(l.a)().getValueConfig,n=Object(T.sb)(T.O),d=Number(t("safeway.otps.soft.duration")),h=o.b.useState(E.D),A=Object(r.a)(h,2),p=A[0],P=A[1],f=o.b.useState(null),k=Object(r.a)(f,2),R=k[0],L=k[1],C=o.b.useState(!1),v=Object(r.a)(C,2),g=v[0],w=v[1],S=o.b.useState(!1),I=Object(r.a)(S,2),Y=I[0],H=I[1],y=o.b.useState(E.Sb),F=Object(r.a)(y,2),X=F[0],B=F[1],D=o.b.useCallback(function(){var e=Object(s.a)(Object(a.a)().mark((function e(t){var n,s,r,o,c;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(i.b)(E.T);case 2:if(n=e.sent,s=n.value,!Object(i.d)(n)&&null!==s){e.next=7;break}return w(!0),e.abrupt("return");case 7:if(L(s),t){e.next=19;break}return e.next=11,Object(u.a)({seed:s});case 11:return r=e.sent,P(r.value),e.next=15,Object(i.c)({key:N,val:String(new Date)});case 15:return e.next=17,Object(i.c)({key:M,val:r.value});case 17:e.next=26;break;case 19:return e.next=21,Object(i.b)(M);case 21:if(o=e.sent,c=o.value,!Object(i.d)(o)&&c){e.next=25;break}return e.abrupt("return");case 25:P(c);case 26:w(!0);case 27:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),[]),U=o.b.useCallback(Object(s.a)(Object(a.a)().mark((function e(){var t,n,s,r;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(i.b)(N);case 2:if(t=e.sent,n=t.value,!Object(i.d)(t)&&null!==n){e.next=7;break}return H(!0),e.abrupt("return");case 7:s=new Date,r=Math.floor((s.getTime()-new Date(n).getTime())/E.xb),B(r),r>=d?H(!0):D(!0);case 11:case"end":return e.stop()}}),e)}))),[d,D]);return o.b.useEffect((function(){U(),Y&&D()}),[D,U,Y]),g?Object(m.jsxs)(O.a,{"header-onBack":function(){e(n)},"header-title":"spa.session.tokencode.title",children:[p&&Object(m.jsxs)("section",{children:[Object(m.jsx)(_.b,{className:x.a.textSubtitle,uuid:"spa.session.tokencode.subtitle"}),Object(m.jsx)(_.b,{className:x.a.tokenCode,children:p}),Object(m.jsxs)("div",{className:x.a.boxTimer,children:[Object(m.jsx)(_.b,{className:x.a.timerSubtitle,uuid:"spa.session.tokencode.timer.text"}),Object(m.jsx)(b.RoundProgress,{maxValue:d,progress:Y?E.Sb:X,size:"small",variant:"timer",onComplete:D})]}),Object(m.jsx)(b.Alert,{hasCloseButton:!0,variant:"warning",children:Object(m.jsxs)("div",{className:x.a.alertContainer,children:[Object(m.jsx)(b.Icon,{name:"warning",size:"small",stroke:"warning"}),Object(m.jsxs)("div",{className:x.a.alertContent,children:[Object(m.jsx)(_.b,{uuid:"spa.session.tokencode.toast.title"}),Object(m.jsx)(_.b,{uuid:"spa.session.tokencode.toast.text"})]})]})})]}),!R&&Object(m.jsxs)("section",{className:x.a.boxNoLinked,children:[Object(m.jsx)(_.b,{uuid:"spa.session.tokencode.no.linked.text1"}),Object(m.jsx)(_.b,{uuid:"spa.session.tokencode.no.linked.text2"}),Object(m.jsx)(_.b,{className:x.a.instruction,uuid:"spa.session.tokencode.no.linked.instruction"})]})]}):Object(m.jsx)(j.a,{})}},481:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",textSubtitle:"_rules_textSubtitle__3dw3s",tokenCode:"_rules_tokenCode__1aOUH",boxTimer:"_rules_boxTimer__1J1Pb",timerSubtitle:"_rules_timerSubtitle__2GZJu",alertContainer:"_rules_alertContainer__2t3fu",alertContent:"_rules_alertContent__19vy9",boxNoLinked:"_rules_boxNoLinked__FM519",instruction:"_rules_instruction__11ZYk"}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var a=n(2),s=n(19),r=(n(11),n(41)),o=n(136),c=n(82),i=n(38),l=n(101),u=n(491),b=n.n(u),E={name:b.a.NAME_EXTERNAL_CONTAINER,type:b.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},_=n(492),O=n.n(_),j=n(10),T=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function d(e){var t=e,n=t["header-onBack"],u=t["header-title"],b=t.children,E=t.name,_=t.type,d=t.headerClassName,x=t.showLogo,m=Object(s.a)(t,T),N=Boolean(n||u),M=Object(r.c)(!u&&O.a.onlyRow,d),h=Object(r.c)(x&&O.a.step1Logo),A=Object(r.c)(x&&O.a.hasLogo);return Object(j.jsxs)(l.a,{children:[x&&Object(j.jsx)("div",{className:h,children:Object(j.jsx)(o.a,{alt:"logo",uuid:"logo150Login"})}),Object(j.jsx)(r.a,Object(a.a)(Object(a.a)({name:E,tag:"article",type:_},m),{},{children:Object(j.jsxs)("article",{className:A,children:[N&&Object(j.jsxs)("header",{className:M,children:[n&&Object(j.jsx)(c.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),u&&Object(j.jsx)(i.b,{tag:"h5",uuid:u})]}),b]})}))]})}d.defaultProps=E},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=91.ff9bb884.chunk.js.map