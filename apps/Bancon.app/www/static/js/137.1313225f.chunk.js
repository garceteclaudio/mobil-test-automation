(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[137,97,145,176],{488:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var a=n(2),o=n(16),r=n(19),i=n(11),c=n(502),s=n(505),u=n(41),l=n(6),b=n(79),d=n(8),m=n(493),O=n.n(m),f=n(10),j=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],E=O.a.NAME_FORM,p=O.a.TYPE_FORM;function h(e){var t=e,n=t.ariaLabel,m=t.ariaLabelledby,O=t.schema,h=t.onSubmit,M=t.children,T=t.warnings,v=t.isRequiredToast,A=t.isResetForm,x=Object(r.a)(t,j),F=Object(d.b)(),S=Object(c.e)({resolver:Object(s.a)(O)}),_=S.handleSubmit,y=S.setError,R=S.formState.errors,N=S.reset,g=Object.keys(R),L=i.b.useState(!1),P=Object(o.a)(L,2),C=P[0],D=P[1],k=i.b.useCallback((function(){v&&C&&F(b.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:l.w})),D(!1)}),[F,v,C]),I=i.b.useCallback((function(){N()}),[N]);return i.b.useEffect((function(){T&&Object.keys(T.data).map((function(e){var t=e.startsWith(l.Nb)?e.slice(l.fb):e;return y(t,{message:T.data[e]},{shouldFocus:!1}),null})),g.length>l.Sb&&k(),A&&I()}),[g.length,A,I,y,k,T]),Object(f.jsx)(c.b,Object(a.a)(Object(a.a)(Object(a.a)({},S),x),{},{children:Object(f.jsx)(u.a,{noValidate:!0,"aria-label":n,"aria-labelledby":m,name:E,tag:"form",type:p,onSubmit:_(h,(function(){return D(!C)})),children:M})}))}h.useContext=c.f,h.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},490:function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var a=n(2),o=n(19),r=n(11),i=n(41),c=n(50),s=n(495),u=n.n(s),l=(n(496),n(38)),b=n(82),d=n(10),m=["ariaLabelledBy","id","children","title","onClose","hasCloseIcon"],O=u.a.TYPE_MODAL,f=u.a.NAME_MODAL;function j(e){var t=e,n=t.ariaLabelledBy,s=t.id,u=t.children,j=t.title,E=t.onClose,p=t.hasCloseIcon,h=Object(o.a)(t,m),M="modal-header-".concat(s||""),T="string"===typeof j?M:n,v="string"===typeof j?Object(d.jsx)(l.b,{id:M,tag:"h4",uuid:j}):j;return Object(d.jsx)(i.a,{name:f,tag:"div",type:O,children:Object(d.jsxs)(c.Modal,Object(a.a)(Object(a.a)({ariaLabelledBy:T,onClose:E},h),{},{children:[Object(d.jsx)(c.Modal.Header,{children:j&&Object(d.jsxs)(r.b.Fragment,{children:[v,p&&Object(d.jsx)(b.a,{icon:"close",kind:"icon",label:{uuid:"spa.a11y.buttons.close.modal"},onClick:E})]})}),u]}))})}j.defaultProps={ariaLabelledBy:"",closeOnBgTap:!0,hasCloseIcon:!0,initialFocusElementId:"",title:""},j.Body=function(e){var t=e.children;return Object(d.jsx)(c.Modal.Body,{children:t})},j.Footer=function(e){var t=e.children,n=e.className;return Object(d.jsx)(c.Modal.Footer,{className:n,children:t})}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},495:function(e,t,n){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},496:function(e,t,n){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},500:function(e,t,n){"use strict";n.d(t,"a",(function(){return E}));var a=n(2),o=n(19),r=(n(11),n(41)),i=n(50),c=(n(536),n(6)),s=n(38),u=n(537),l=n.n(u),b=n(10),d=["amount","coverSymbol","isMasked"],m=3,O=l.a.NAME_AMOUNT_FORMATTER,f=l.a.TYPE_AMOUNT_FORMATTER,j={coverSymbol:c.s,currency:c.b,isMasked:!1};function E(e){var t=e,n=t.amount,u=t.coverSymbol,l=t.isMasked,j=Object(o.a)(t,d),E=Boolean(!n)&&n!==c.Sb,p=!E&&l,h=!E&&!l,M=u||c.s,T=" ".concat(M.repeat(m)),v="".concat(j.currency," ").concat(T," ");return Object(b.jsxs)(r.a,{name:O,type:f,children:[E&&Object(b.jsx)(s.b,{tag:"span",uuid:"spa.notAvailable.txt"}),p&&Object(b.jsx)(s.b,{className:j.className,children:v}),h&&Object(b.jsx)(i.FormattedAmount,Object(a.a)({amount:n},j))]})}E.defaultProps=j},503:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var a=n(272),o=n(2),r=n(16),i=n(19),c=n(11),s=n(50),u=n(41),l=n(488),b=n(516),d=n.n(b),m=n(10),O=["id","name","methods","options","defaultOption","onSelectOption"],f=d.a.NAME_INPUT_SELECT,j=d.a.TYPE_INPUT_SELECT,E=c.b.memo((function(e){var t,n=e.id,a=e.name,l=e.methods,b=e.options,d=e.defaultOption,E=e.onSelectOption,p=Object(i.a)(e,O),h=l.register,M=l.formState,T=l.setValue,v=l.watch,A=M.errors,x="".concat(a),F=c.b.useState(d),S=Object(r.a)(F,2),_=S[0],y=S[1];v(x);var R=c.b.useRef(null),N=A[a];return c.b.useEffect((function(){null!==d&&void 0!==d&&d.value&&T(x,null===d||void 0===d?void 0:d.value,{shouldValidate:!0})}),[null===d||void 0===d?void 0:d.value,x,T]),c.b.useEffect((function(){R.current&&R.current.blur()}),[N]),c.b.useEffect((function(){_||y(d)}),[d,_]),Object(m.jsx)(u.a,{name:f,type:j,children:Object(m.jsx)(s.SelectField,Object(o.a)(Object(o.a)(Object(o.a)({defaultOption:_,id:n||a,options:b},h(x)),N&&{error:null===(t=N.message)||void 0===t?void 0:t.toString()}),{},{ref:R,onSelectOption:function(e){T(x,e.value,{shouldValidate:!0}),E&&E(e)}},p))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function p(e){var t=l.a.useContext(),n=e,r=Object.assign({},(Object(a.a)(n),n));return Object(m.jsx)(E,Object(o.a)({methods:t},r))}},516:function(e,t,n){e.exports={NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element"}},518:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var a=n(6);function o(e,t){return t.includes("https")?t:e.replace(a.wb,t)}},519:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(2),o=n(6),r={locales:o.X.ES_AR,currencySymbol:o.b,minimumFractionDigits:o.Sb,maximumFractionDigits:o.Jb,suffix:o.D};function i(e,t){var n=Object(a.a)(Object(a.a)({},r),t),i=n.locales,c=n.currencySymbol,s=n.minimumFractionDigits,u=n.maximumFractionDigits,l=n.options,b=n.suffix,d=Object(a.a)({minimumFractionDigits:s,maximumFractionDigits:u},l),m=new Intl.NumberFormat(i,d);return(e||e===o.Sb)&&m?"".concat(c,"\xa0").concat(m.format(e)).concat(b):o.D}},536:function(e,t,n){e.exports={NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element"}},537:function(e,t,n){e.exports={NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=137.1313225f.chunk.js.map