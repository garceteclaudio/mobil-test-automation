(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[150,80,167,199,314],{310:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return M}));var a=n(0),o=n(5),r=n(16),i=n(11),s=n(39),c=n(80),l=n(8),u=n(118),E=n(79),d=n(187),b=n(147),_=n(82),T=n(38),m=n(494),O=n(488),N=n(489),j=n(6),h=n(51),C=n(429),f=n.n(C),p=n(10);function M(){var e=Object(l.b)(),t=Object(T.c)().textGet,n=Object(c.g)(),C=Object(h.sb)(h.R),M=Object(l.c)(u.c.fetching),A=Object(l.c)(u.c.warning),P=Object(l.c)(b.c.exchangeToken),R=Object(l.c)(u.c.sentData),g=Object(l.c)(u.c.sentChannelInvitationCode),x=Object(l.c)(u.c.isCorporate),S=Object(l.c)(u.c.haveCode),v=i.b.useState(!1),L=Object(r.a)(v,2),I=L[0],y=L[1],F=!x&&!S,k=t({uuid:"spa.enrollment.byCode.step2.invitationCode.input.label"}),w=t({uuid:"spa.generic.field.error.required"}),Y=s.e.object({invitationCode:Object(d.d)(s.e.string.required(),w)}),B=i.b.useCallback((function(){e(E.a.set({kind:"SUCCESS",text:{uuid:"spa.enrollment.byCode.step2.invitationCode.alert.text",replace:"<b>".concat(R,"</b>")},duration:j.v}))}),[e,R]);return i.b.useEffect((function(){(R||I)&&(B(),y(!1))}),[R,B,I]),Object(p.jsx)(N.a,{"header-onBack":function(){x?(e(u.a.clean()),e(b.a.clean()),e(E.a.clean()),n(C)):(e(u.a.notSendedInvitation()),e(u.a.cleanSentData()))},"header-title":"spa.signup.title",children:Object(p.jsx)("section",{children:Object(p.jsxs)(O.a,{schema:Y,warnings:A,onSubmit:function(e){return U.apply(this,arguments)},children:[Object(p.jsx)(T.b,{className:f.a.byCodeInvitationCode,uuid:"spa.enrollment.byCode.step2.subtitle"}),Object(p.jsx)(m.a,{withoutSpaces:!0,label:k,maxLength:j.Bb,name:"invitationCode",onChange:function(){e(u.a.cleanWarnings())}}),Object(p.jsx)(_.a,{className:f.a.submitButton,label:{uuid:"spa.form.continue"},loading:M,type:"submit"}),F&&Object(p.jsxs)("div",{className:f.a.alignInvitationCode,children:[Object(p.jsx)(T.b,{tag:"span",uuid:"spa.enrollment.byCode.notReceive.text"}),Object(p.jsx)(_.a,{className:f.a.haveCode,kind:"plain",label:{uuid:"spa.enrollment.byCode.resend.link"},onClick:function(){return X.apply(this,arguments)}})]})]})})});function U(){return(U=Object(o.a)(Object(a.a)().mark((function t(n){var o;return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return o=n.invitationCode,t.next=3,e(u.b.byCodeStep2({exchangeToken:P,invitationCode:o}));case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function X(){return(X=Object(o.a)(Object(a.a)().mark((function t(){return Object(a.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e(u.b.reSendInvitationCode({exchangeToken:P,resendChannel:g}));case 2:y(!0);case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},429:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_SECURITY_SEAL:"SecuritySeal",TYPE_SECURITY_SEAL:"Element",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",byCodeTitle:"_rules_byCodeTitle__yr3wN",byCodeInvitationCode:"_rules_byCodeInvitationCode__1vi5-",byPin:"_rules_byPin__15kE-",haveCodeSubtitle:"_rules_haveCodeSubtitle__1Zpe2",alignInputs:"_rules_alignInputs__5ZcTE",byCodeSubtitle:"_rules_byCodeSubtitle__33HL5",securitySealContainer:"_rules_securitySealContainer__2vwIC",alignInvitationCode:"_rules_alignInvitationCode__1NX5C",textSubtitle:"_rules_textSubtitle__159WN",haveCode:"_rules_haveCode__Kknyv",submitButton:"_rules_submitButton__1hASq",termsAndConditions:"_rules_termsAndConditions__2CP8-",textBody:"_rules_textBody__3hBIX"}},488:function(e,t,n){"use strict";n.d(t,"a",(function(){return j}));var a=n(2),o=n(16),r=n(19),i=n(11),s=n(502),c=n(505),l=n(41),u=n(6),E=n(79),d=n(8),b=n(493),_=n.n(b),T=n(10),m=["ariaLabel","ariaLabelledby","schema","onSubmit","children","warnings","isRequiredToast","isResetForm"],O=_.a.NAME_FORM,N=_.a.TYPE_FORM;function j(e){var t=e,n=t.ariaLabel,b=t.ariaLabelledby,_=t.schema,j=t.onSubmit,h=t.children,C=t.warnings,f=t.isRequiredToast,p=t.isResetForm,M=Object(r.a)(t,m),A=Object(d.b)(),P=Object(s.e)({resolver:Object(c.a)(_)}),R=P.handleSubmit,g=P.setError,x=P.formState.errors,S=P.reset,v=Object.keys(x),L=i.b.useState(!1),I=Object(o.a)(L,2),y=I[0],F=I[1],k=i.b.useCallback((function(){f&&y&&A(E.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:u.w})),F(!1)}),[A,f,y]),w=i.b.useCallback((function(){S()}),[S]);return i.b.useEffect((function(){C&&Object.keys(C.data).map((function(e){var t=e.startsWith(u.Nb)?e.slice(u.fb):e;return g(t,{message:C.data[e]},{shouldFocus:!1}),null})),v.length>u.Sb&&k(),p&&w()}),[v.length,p,w,g,k,C]),Object(T.jsx)(s.b,Object(a.a)(Object(a.a)(Object(a.a)({},P),M),{},{children:Object(T.jsx)(l.a,{noValidate:!0,"aria-label":n,"aria-labelledby":b,name:O,tag:"form",type:N,onSubmit:R(j,(function(){return F(!y)})),children:h})}))}j.useContext=s.f,j.defaultProps={isRequiredToast:!0,isResetForm:!1,warnings:null}},489:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),o=n(19),r=(n(11),n(41)),i=n(136),s=n(82),c=n(38),l=n(101),u=n(491),E=n.n(u),d={name:E.a.NAME_EXTERNAL_CONTAINER,type:E.a.TYPE_EXTERNAL_CONTAINER,showLogo:!1},b=n(492),_=n.n(b),T=n(10),m=["header-onBack","header-title","children","name","type","headerClassName","showLogo"];function O(e){var t=e,n=t["header-onBack"],u=t["header-title"],E=t.children,d=t.name,b=t.type,O=t.headerClassName,N=t.showLogo,j=Object(o.a)(t,m),h=Boolean(n||u),C=Object(r.c)(!u&&_.a.onlyRow,O),f=Object(r.c)(N&&_.a.step1Logo),p=Object(r.c)(N&&_.a.hasLogo);return Object(T.jsxs)(l.a,{children:[N&&Object(T.jsx)("div",{className:f,children:Object(T.jsx)(i.a,{alt:"logo",uuid:"logo150Login"})}),Object(T.jsx)(r.a,Object(a.a)(Object(a.a)({name:d,tag:"article",type:b},j),{},{children:Object(T.jsxs)("article",{className:p,children:[h&&Object(T.jsxs)("header",{className:C,children:[n&&Object(T.jsx)(s.a,{icon:"left",kind:"icon",label:{uuid:"spa.a11y.buttons.back"},size:"medium",variant:"text",onClick:n}),u&&Object(T.jsx)(c.b,{tag:"h5",uuid:u})]}),E]})}))]})}O.defaultProps=d},491:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container"}},492:function(e,t,n){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",hasLogo:"_rules_hasLogo__AxHGK",onlyRow:"_rules_onlyRow__1im8h",step1Logo:"_rules_step1Logo__3LNq5"}},493:function(e,t,n){e.exports={NAME_FORM:"Form",TYPE_FORM:"Element"}},494:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n(2),o=n(19),r=n(16),i=n(11),s=n(50),c=n(41),l=n(488),u=n(498),E=n.n(u),d=n(10),b=["id","name","methods","defaultValue","pattern","withSuggestions","onChange","onBlur"],_=E.a.NAME_INPUT_FIELD,T=E.a.TYPE_INPUT_FIELD,m=i.b.memo((function(e){var t,n=i.b.useState(!1),l=Object(r.a)(n,2),u=l[0],E=l[1],m=e.id,O=e.name,N=e.methods,j=e.defaultValue,h=e.pattern,C=e.withSuggestions,f=void 0===C||C,p=e.onChange,M=e.onBlur,A=Object(o.a)(e,b),P=N.register,R=N.formState,g=N.setValue,x=N.clearErrors,S=R.errors,v="".concat(O),L=S[O];return i.b.useEffect((function(){j&&g(v,j),j||g(v,void 0),f&&E(!0)}),[j,v,g,f,E]),Object(d.jsx)(c.a,{name:_,type:T,children:Object(d.jsx)(s.TextField,Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)(Object(a.a)({id:m||O},j&&{defaultValue:j}),L&&{error:null===(t=L.message)||void 0===t?void 0:t.toString()}),P(v,{onChange:function(e){p&&p(e);x([v])},onBlur:M})),A),{},{autoComplete:f?"on":"off",pattern:h,onKeyDown:function(e){e.target.value||u||E(!0)}}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function O(e){var t=l.a.useContext();return Object(d.jsx)(m,Object(a.a)({methods:t},e))}O.displayName=_},498:function(e,t,n){e.exports={NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=150.8e122673.chunk.js.map