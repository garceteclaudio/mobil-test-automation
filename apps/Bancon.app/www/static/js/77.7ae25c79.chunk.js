(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[77],{349:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return j}));a(11);var n=a(80),c=a(489),i=a(147),s=a(51),o=a(8),r=a(38),u=a(136),l=a(428),d=a.n(l),b=a(10);function j(){var e=Object(n.g)(),t=Object(o.b)(),a=Object(s.sb)(s.O);return Object(b.jsx)(c.a,{"header-onBack":function(){t(i.a.clean()),e(a)},"header-title":"spa.onboarding.download.app.title",children:Object(b.jsxs)("section",{children:[Object(b.jsxs)("div",{className:d.a.downloadPrincipal,children:[Object(b.jsx)(u.a,{className:d.a.imageDownload,uuid:"onboardingStep1"}),Object(b.jsx)(r.b,{uuid:"spa.onboarding.download.app.text"})]}),Object(b.jsxs)("div",{className:d.a.logosContainer,children:[Object(b.jsx)(u.a,{uuid:"logoGooglePlay"}),Object(b.jsx)(u.a,{uuid:"logoAppStore"})]})]})})}},350:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return D}));var n=a(0),c=a(5),i=a(16),s=a(8),o=a(6),r=a(150),u=a(69),l=a(149),d=a(147),b=a(187),j=a(50),p=a(489),O=a(82),m=a(488),x=a(494),g=a(517),h=a(515),f=a(270),v=a(568),N=a(38),y=a(11),P=a(99),S=a(39),C=a(530),k=a(607),E=a(74),T=a(87),B=a(428),w=a.n(B),M=a(10);function D(){var e=y.b.useState(void 0),t=Object(i.a)(e,2),a=t[0],B=t[1],D=Object(N.c)().textGet,A=Object(s.b)(),F=Object(s.c)(l.c.fetching),I=Object(s.c)(l.c.warning),L=Object(s.c)(d.c.exchangeToken),_=Object(s.c)(d.c.documentNumber),U=Object(s.c)(l.c.securitySeals),R=Object(s.c)(r.d.isPep),V=Object(s.c)(r.d.isSubject),Y=Object(s.c)(r.d.hasRF),q=Object(s.c)(r.d.subjectType),G=Object(s.c)(r.d.publicPositionDeclaration),J=Object(s.c)(r.d.publicPositionDeclarationBT),W=Object(s.c)(r.d.publicPositionType),z=Object(s.c)(r.d.publicPosition),H=Object(s.c)(r.d.countryRFId),K=Object(s.c)(r.d.exteriorIdentification),Q=Object(s.c)(r.d.publicChargeEntity),X=Object(s.c)(r.d.publicChargeDateStart),Z=Object(s.c)(r.d.publicChargeEntityOther),$=Object(s.c)(T.c.device),ee=Object(s.c)(u.c.uniqueDeviceID),te=Object(P.a)().getValueConfig,ae=D({uuid:"spa.generic.field.error.required"}),ne=Object(k.a)(D,te),ce=Object(C.a)(D,te,_),ie=D({uuid:"spa.onboarding.step10.username.input.label"}),se=D({uuid:"spa.onboarding.step10.password.input.label"}),oe=D({uuid:"spa.onboarding.step10.password.input.helper"}),re=D({uuid:"spa.form.continue"}),ue=Object(E.a)(te("spa.onboarding.step10.secondFactor.addSoftToken")),le=D({uuid:"spa.onboarding.step10.secondFactor.label"}),de=Object(E.a)(te("backend.vu.fraud.api.fingerprint.url")),be=Object(E.a)(te("backend.vu.fraud.api.fingerprint.timeout"));y.b.useEffect((function(){L&&A(l.b.securitySealList({exchangeToken:L}))}),[A,L]);var je=S.e.object(function(){var e=ue?S.e.boolean():S.e.boolean.orUndefined();return{username:ne,newPassword:ce,securitySeal:Object(b.d)(S.e.number(),ae),secondFactorCheck:e}}());return F||Object.entries(U).length===o.Sb&&U.constructor===Object?Object(M.jsx)(f.a,{}):Object(M.jsx)(p.a,{"header-onBack":function(){A(l.a.cleanBranchOfficeData())},"header-title":"spa.onboarding.step10.title",children:Object(M.jsx)("section",{children:Object(M.jsxs)(m.a,{schema:je,warnings:I,onSubmit:function(e){return pe.apply(this,arguments)},children:[Object(M.jsxs)("div",{className:w.a.inputSelectContainer,children:[Object(M.jsx)("div",{className:w.a.securitySealContainer,children:Object(M.jsx)(v.a,{buttonLabel:re,modalTitle:Object(M.jsx)(N.b,{tag:"h5",uuid:"spa.onboarding.step10.securitySeal.modal.title"}),name:"securitySeal",options:U,selectedAvatar:a,uuidError:"spa.generic.securitySeal.error.required",uuidLabel:"spa.enrollment.step10.securitySeal.label",onContinue:function(e){B(e)}})}),Object(M.jsx)(x.a,{withoutSpaces:!0,label:ie,name:"username",start:Object(M.jsx)(j.Icon,{name:"user",size:"small"}),onChange:function(){A(l.a.cleanWarnings())}}),Object(M.jsx)(g.a,{withoutSpaces:!0,helper:oe,label:se,name:"newPassword"}),ue&&Object(M.jsx)(h.a,{label:le,name:"secondFactorCheck"})]}),Object(M.jsx)(O.a,{className:w.a.submitButton,label:{uuid:"spa.form.continue"},loading:F,type:"submit"})]})})});function pe(){return(pe=Object(c.a)(Object(n.a)().mark((function e(t){var a,c,i,s,r,u;return Object(n.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return c=t.username,i=t.newPassword,s=t.securitySeal,r=t.secondFactorCheck,u={PEP:null!==R&&void 0!==R&&R,SO:null!==V&&void 0!==V&&V,RF:null!==Y&&void 0!==Y&&Y},e.next=4,A(l.b.createUser({exchangeToken:L,username:c,newPassword:i,securitySeal:s.toString(),secondFactorCheck:null!==r&&void 0!==r&&r,deviceModel:null!==(a=null===$||void 0===$?void 0:$.model)&&void 0!==a?a:o.D,uniqueDeviceId:ee,affidavit:{affidavitTypes:u,subjectType:q,publicPositionDeclaration:G,publicPositionDeclarationBT:J,publicPositionType:W,publicPosition:z,countryRFId:H,exteriorIdentification:K,clientAdditionalDataFunctionaryPublicDateStart:X,clientAdditionalDataFunctionaryPublicChargeEntity:Q,clientAdditionalDataFunctionaryPublicChargeEntityOther:Z},url:de,timeout:be}));case 4:B(void 0);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},351:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return m}));a(11);var n=a(8),c=a(489),i=a(80),s=a(147),o=a(149),r=a(150),u=a(51),l=a(38),d=a(82),b=a(136),j=a(428),p=a.n(j),O=a(10);function m(){var e=Object(i.g)(),t=Object(n.b)(),a=Object(u.sb)(u.O);return Object(O.jsx)(c.a,{children:Object(O.jsxs)("section",{children:[Object(O.jsxs)("div",{className:p.a.onboardingWelcome,children:[Object(O.jsx)(b.a,{uuid:"eOLogin"}),Object(O.jsx)(l.b,{uuid:"spa.onboarding.step11.text1"}),Object(O.jsx)(l.b,{uuid:"spa.onboarding.step11.text2"})]}),Object(O.jsx)(d.a,{className:p.a.submitButton,label:{uuid:"spa.onboarding.step11.button"},onClick:function(){t(s.a.clean()),t(o.a.clean()),t(r.b.clean()),e(a)}})]})})}},352:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return b}));a(11);var n=a(50),c=a(149),i=a(8),s=a(82),o=a(38),r=a(136),u=a(428),l=a.n(u),d=a(10);function b(){var e=Object(i.b)();return Object(d.jsxs)(n.Presentation,{className:l.a.presentation,finishButton:Object(d.jsx)(s.a,{className:l.a.finishButton,label:{uuid:"spa.onboarding.step1.tutorial.begin"},variant:"text",onClick:t}),nextButton:Object(d.jsxs)(s.a,{className:l.a.nextButton,label:{uuid:"spa.onboarding.step1.tutorial.continue"},variant:"solid",children:[Object(d.jsx)(o.b,{uuid:"spa.onboarding.step1.tutorial.continue"}),Object(d.jsx)(n.Icon,{name:"right",stroke:"white"})]}),skipButton:Object(d.jsx)(s.a,{className:l.a.skipButton,label:{uuid:"spa.onboarding.step1.tutorial.skip"},onClick:t}),children:[Object(d.jsx)(n.Presentation.Step,{column:!0,flex:!0,align:"center",background:"blue-800",justify:"center",children:Object(d.jsxs)("section",{className:l.a.presentation,children:[Object(d.jsx)(r.a,{className:l.a.image,uuid:"onboardingStep1"}),Object(d.jsxs)("div",{className:l.a.containerText,children:[Object(d.jsx)(o.b,{className:l.a.title,uuid:"spa.onboarding.step1.tutorial.firstPage.title"}),Object(d.jsx)(o.b,{className:l.a.text,uuid:"spa.onboarding.step1.tutorial.firstPage.body1"}),Object(d.jsx)(o.b,{className:l.a.text,uuid:"spa.onboarding.step1.tutorial.firstPage.body2"})]})]})}),Object(d.jsx)(n.Presentation.Step,{column:!0,flex:!0,align:"center",background:"purple",justify:"center",children:Object(d.jsxs)("section",{className:l.a.presentation,children:[Object(d.jsx)(r.a,{className:l.a.image,uuid:"onboardingStep2"}),Object(d.jsxs)("div",{className:l.a.containerText,children:[Object(d.jsx)(o.b,{className:l.a.title,uuid:"spa.onboarding.step1.tutorial.secondPage.title"}),Object(d.jsx)(o.b,{className:l.a.text,uuid:"spa.onboarding.step1.tutorial.secondPage.body1"}),Object(d.jsx)(o.b,{className:l.a.text,uuid:"spa.onboarding.step1.tutorial.secondPage.body2"}),Object(d.jsx)(o.b,{className:l.a.text,uuid:"spa.onboarding.step1.tutorial.secondPage.body3"})]})]})}),Object(d.jsx)(n.Presentation.Step,{column:!0,flex:!0,align:"center",background:"dark-green",justify:"center",children:Object(d.jsxs)("section",{className:l.a.presentation,children:[Object(d.jsx)(r.a,{className:l.a.image,uuid:"onboardingStep3"}),Object(d.jsxs)("div",{className:l.a.containerText,children:[Object(d.jsx)(o.b,{className:l.a.title,uuid:"spa.onboarding.step1.tutorial.thirdPage.title"}),Object(d.jsx)(o.b,{className:l.a.text,uuid:"spa.onboarding.step1.tutorial.thirdPage.body"})]})]})})]});function t(){e(c.a.finishPresentation())}}},490:function(e,t,a){"use strict";a.d(t,"a",(function(){return m}));var n=a(2),c=a(19),i=a(11),s=a(41),o=a(50),r=a(495),u=a.n(r),l=(a(496),a(38)),d=a(82),b=a(10),j=["ariaLabelledBy","id","children","title","onClose","hasCloseIcon"],p=u.a.TYPE_MODAL,O=u.a.NAME_MODAL;function m(e){var t=e,a=t.ariaLabelledBy,r=t.id,u=t.children,m=t.title,x=t.onClose,g=t.hasCloseIcon,h=Object(c.a)(t,j),f="modal-header-".concat(r||""),v="string"===typeof m?f:a,N="string"===typeof m?Object(b.jsx)(l.b,{id:f,tag:"h4",uuid:m}):m;return Object(b.jsx)(s.a,{name:O,tag:"div",type:p,children:Object(b.jsxs)(o.Modal,Object(n.a)(Object(n.a)({ariaLabelledBy:v,onClose:x},h),{},{children:[Object(b.jsx)(o.Modal.Header,{children:m&&Object(b.jsxs)(i.b.Fragment,{children:[N,g&&Object(b.jsx)(d.a,{icon:"close",kind:"icon",label:{uuid:"spa.a11y.buttons.close.modal"},onClick:x})]})}),u]}))})}m.defaultProps={ariaLabelledBy:"",closeOnBgTap:!0,hasCloseIcon:!0,initialFocusElementId:"",title:""},m.Body=function(e){var t=e.children;return Object(b.jsx)(o.Modal.Body,{children:t})},m.Footer=function(e){var t=e.children,a=e.className;return Object(b.jsx)(o.Modal.Footer,{className:a,children:t})}},495:function(e,t,a){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},496:function(e,t,a){e.exports={NAME_MODAL:"Modal",TYPE_MODAL:"Element"}},512:function(e,t,a){"use strict";a.d(t,"a",(function(){return x}));var n=a(2),c=a(19),i=a(11),s=a(50),o=a(41),r=a(488),u=a(514),l=a.n(u),d=a(10),b=["id","name","methods","defaultValue","onChange","valueAsNumber"],j=l.a.NAME_INPUT_NUMBER,p=l.a.TYPE_INPUT_NUMBER,O={id:j,valueAsNumber:!0},m=i.b.memo((function(e){var t,a=e.id,r=e.name,u=e.methods,l=e.defaultValue,O=e.onChange,m=e.valueAsNumber,x=Object(c.a)(e,b),g=u.register,h=u.formState,f=u.getValues,v=u.setValue,N=u.clearErrors,y=h.errors,P="".concat(r),S=f()[P],C=y[r];return i.b.useEffect((function(){l&&v(P,l,{shouldValidate:!0}),l||v(P,void 0)}),[l,P,v]),Object(d.jsx)(o.a,{name:j,type:p,children:Object(d.jsx)(s.NumberField,Object(n.a)(Object(n.a)(Object(n.a)(Object(n.a)({},l&&{defaultValue:l}),{},{id:a||r},C&&{error:null===(t=C.message)||void 0===t?void 0:t.toString()}),g(P,{onChange:function(e){O&&O(e);N([P])},valueAsNumber:m})),{},{value:S},x))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function x(e){var t=r.a.useContext();return Object(d.jsx)(m,Object(n.a)({methods:t},e))}x.displayName=j,x.defaultProps=O},514:function(e,t,a){e.exports={NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=77.7ae25c79.chunk.js.map