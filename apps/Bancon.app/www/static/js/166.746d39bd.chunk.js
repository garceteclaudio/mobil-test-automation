(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[166,82,284],{188:function(e,t,n){"use strict";n.r(t),n.d(t,"SPA_MODO_LINK_ACCOUNT",(function(){return x})),n.d(t,"default",(function(){return v}));var c=n(0),a=n(5),o=n(16),r=n(11),i=n(39),s=n(187),u=n(518),O=n(506),b=n(507),d=n(488),l=n(38),j=n(82),_=n(270),m=n(500),f=n(8),E=n(33),T=n(117),h=n(65),A=n(497),p=n(51),P=n(6),M=n(439),N=n.n(M),R=n(10),x="spa.modo.link.accounts";function v(){var e=Object(p.qb)(),t=Object(f.b)(),n=Object(p.sb)(p.n),M=Object(p.sb)(p.r),v=Object(p.sb)(p.x),k=Object(p.sb)(p.w),I=Object(p.sb)(p.C),C=Object(p.sb)(p.q),g=r.b.useState(!1),F=Object(o.a)(g,2),D=F[0],S=F[1],U=(0,Object(l.c)().textGet)({uuid:"spa.generic.field.error.required"}),L=i.e.object({linkAccount:Object(s.d)(i.e.string.required(),U)}),Y=Object(f.c)(T.c.fetching),y=Object(f.c)(T.c.warning),B=Object(f.c)(T.c.accountListToLink),H=Object(f.c)(T.c.deepLinkPath),w=Object(f.c)(T.c.isChangeFavoriteAccountFromOtherBank),G=Object(f.c)(T.c.isFavoriteAccountFromOtherBank),K=Object(f.c)(T.c.hasFinishedModoOnboarding),V=Object(f.c)(T.c.hasSentVerificationCode),q=Object(f.c)(E.e.token);return r.b.useEffect((function(){H&&t(T.a.cleanDeepLinkData())}),[H,t]),r.b.useEffect((function(){q&&(K||V?(t(T.b.getLinkAccounts({token:q})),S(!0)):e(I,{replace:!0}))}),[t,K,V,e,q,I]),r.b.useEffect((function(){(G||w)&&(G&&w||e(v))}),[G,e,v,w]),r.b.useEffect((function(){y&&t(h.a.add({id:y.code,message:y.message}))}),[y,t]),!Y&&D&&B?Object(R.jsxs)(A.a,{withFooter:!0,className:N.a.linkAccount,hasNotifications:!1,"header-onBack":function(){if(H)return void e(n);e(Object(u.a)(C,P.Z.MODO))},children:[Object(R.jsx)("header",{children:Object(R.jsx)(l.b,{tag:"h1",uuid:"spa.modo.register.title"})}),B.length>P.Sb?Object(R.jsxs)("section",{children:[Object(R.jsx)(l.b,{className:N.a.description,uuid:"".concat(x,".description")}),Object(R.jsxs)(d.a,{schema:L,onSubmit:function(e){return J.apply(this,arguments)},children:[Object(R.jsxs)("header",{children:[Object(R.jsx)(l.b,{uuid:"".concat(x,".account")}),Object(R.jsx)(l.b,{uuid:"".concat(x,".balance")})]}),Object(R.jsx)("section",{children:Object(R.jsx)(O.a,{name:"linkAccount",value:function(){var e=null===B||void 0===B?void 0:B.findIndex((function(e){return e.isFavouriteAccount}));return String(e)}(),children:B.map((function(e,t){var n=e.productType,c=e.accountCBU,a=e.amount,o=e.shortLabel;return Object(R.jsx)(b.a,{isFavorite:!0,id:c,label:X(n,o,a),name:"linkAccount",value:String(t)},c)}))})}),Object(R.jsx)("footer",{children:Object(R.jsx)(j.a,{label:{uuid:"spa.form.continue"},type:"submit"})})]})]}):Object(R.jsxs)("section",{className:N.a.withoutAccounts,children:[Object(R.jsx)(l.b,{uuid:"".concat(x,".add")}),Object(R.jsx)(j.a,{label:{uuid:"spa.form.accept"},onClick:function(){e(Object(u.a)(M,"legacy.menu.products.item.highProduct"))}}),Object(R.jsx)(j.a,{label:{uuid:"spa.form.cancel"},variant:"outlined",onClick:function(){e(n)}})]})]}):Object(R.jsx)(_.a,{});function J(){return(J=Object(a.a)(Object(c.a)().mark((function n(a){var o,r,i;return Object(c.a)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(q&&B){n.next=2;break}return n.abrupt("return");case 2:return o=a.linkAccount,r=B[Number(o)],i=r.shortLabel,t(T.a.favoriteAccountSelected(i)),n.next=8,t(T.b.sendLinkAccount({account:r,token:q,updateFavourite:!0}));case 8:e(k);case 9:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function X(e,t,n){var c=e===P.pb.CURRENT_ACCOUNT?"spa.modo.label.current.account":"spa.modo.label.saving.account";return Object(R.jsxs)("div",{className:N.a.accountInfo,children:[Object(R.jsxs)("div",{children:[Object(R.jsx)(l.b,{className:N.a.accountType,tag:"span",uuid:c}),Object(R.jsx)(l.b,{tag:"span",children:t})]}),Object(R.jsx)(m.a,{amount:n})]})}}},389:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return f}));var c=n(11),a=n(38),o=n(82),r=n(270),i=n(117),s=n(79),u=n(8),O=n(497),b=n(51),d=n(6),l=n(188),j=n(439),_=n.n(j),m=n(10);function f(){var e=Object(b.qb)(),t=Object(u.b)(),n=Object(b.sb)(b.O),j=Object(b.sb)(b.v),f=Object(u.c)(i.c.fetching),E=c.b.useCallback((function(){t(s.a.set({kind:"INFO",text:{uuid:"".concat(l.SPA_MODO_LINK_ACCOUNT,".toast.keep.info")},duration:d.v})),e(n)}),[t,e,n]);return f?Object(m.jsx)(r.a,{}):Object(m.jsxs)(O.a,{className:_.a.keepAccounts,hasNotifications:!1,"header-onBack":function(){e(n)},children:[Object(m.jsx)("header",{children:Object(m.jsx)(a.b,{className:_.a.title,tag:"h1",uuid:"spa.modo.register.title"})}),Object(m.jsxs)("section",{children:[Object(m.jsx)(a.b,{className:_.a.subtitle,uuid:"".concat(l.SPA_MODO_LINK_ACCOUNT,".keep.title")}),Object(m.jsx)(a.b,{uuid:"".concat(l.SPA_MODO_LINK_ACCOUNT,".keep.description")})]}),Object(m.jsxs)("footer",{children:[Object(m.jsx)(o.a,{label:{uuid:"".concat(l.SPA_MODO_LINK_ACCOUNT,".keep.change")},onClick:function(){t(i.a.isChangeFavoriteAccountFromOtherBank()),e(j)}}),Object(m.jsx)(o.a,{label:{uuid:"".concat(l.SPA_MODO_LINK_ACCOUNT,".keep.current")},variant:"outlined",onClick:function(){E()}})]})]})}},439:function(e,t,n){e.exports={NAME_AMOUNT_FORMATTER:"AmountFormatter",TYPE_AMOUNT_FORMATTER:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_DATETIME:"DateTime",TYPE_DATETIME:"Element",NAME_FORM:"Form",TYPE_FORM:"Element",NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element",linkAccount:"_rules_linkAccount__1AGyj",accountInfo:"_rules_accountInfo__1OuBR",accountType:"_rules_accountType__wKJJh",withoutAccounts:"_rules_withoutAccounts__LpBoE",keepAccounts:"_rules_keepAccounts__3OMSa",title:"_rules_title__Nuc-p",subtitle:"_rules_subtitle__2NTyW",linkAccountDetail:"_rules_linkAccountDetail__62gFi"}},506:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var c=n(2),a=n(19),o=n(11),r=n(50),i=n(41),s=n(488),u=n(509),O=n.n(u),b=n(10),d=["id","name","children","methods","value","onChange"],l=O.a.NAME_RADIO_GROUP,j=O.a.TYPE_RADIO_GROUP,_={id:l},m=o.b.memo((function(e){var t=e.id,n=e.name,s=e.children,u=e.methods,O=e.value,_=e.onChange,m=Object(a.a)(e,d),f=u.formState,E=u.setValue,T=f.errors[n];return o.b.useEffect((function(){O&&E(n,O,{shouldValidate:!0})}),[O,n,E]),Object(b.jsx)(i.a,{name:l,type:j,children:Object(b.jsx)(r.RadioGroup,Object(c.a)(Object(c.a)(Object(c.a)({id:t,name:n,value:O,onChange:function(e){E(n,e.target.value),_&&_(e)}},T&&{error:String(T.message)}),m),{},{children:s}))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function f(e){var t=s.a.useContext();return Object(b.jsx)(m,Object(c.a)({methods:t},e))}f.defaultProps=_},507:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var c=n(2),a=n(19),o=n(11),r=n(50),i=n(41),s=n(488),u=n(510),O=n.n(u),b=(n(511),n(10)),d=["id","name","methods","onChange"],l=O.a.NAME_INPUT_RADIO,j=O.a.TYPE_INPUT_RADIO,_={id:l},m=o.b.memo((function(e){var t=e.id,n=e.name,o=e.methods,s=e.onChange,u=Object(a.a)(e,d),O=o.register,_=o.formState,m=o.clearErrors,f=_.errors,E="".concat(n),T=f[n];return Object(b.jsx)(i.a,{name:l,type:j,children:Object(b.jsx)(r.Radio,Object(c.a)(Object(c.a)(Object(c.a)({id:t},T&&{error:String(T.message)}),O(E)),{},{name:n,onChange:function(e){s&&s(e),m([E])}},u))})}),(function(e,t){return e.methods.formState.errors===t.methods.formState.errors&&e.methods.formState.dirtyFields[e.name]!==t.methods.formState.dirtyFields[t.name]}));function f(e){var t=s.a.useContext();return Object(b.jsx)(m,Object(c.a)({methods:t},e))}f.defaultProps=_},509:function(e,t,n){e.exports={NAME_RADIO_GROUP:"RadioGroup",TYPE_RADIO_GROUP:"Element"}},510:function(e,t,n){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element"}},511:function(e,t,n){e.exports={NAME_INPUT_RADIO:"InputRadio",TYPE_INPUT_RADIO:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=166.746d39bd.chunk.js.map