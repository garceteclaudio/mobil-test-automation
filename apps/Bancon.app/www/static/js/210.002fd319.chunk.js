(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[210,311],{359:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return S}));var a=n(0),o=n(19),i=n(5),r=n(2),l=n(30),c=n(11),s=n(39),u=n(187),b=n(8),d=n(149),_=n(147),p=n(6),g=n(270),O=n(488),m=n(489),j=n(38),E=n(82),h=n(503),f=n(494),T=n(512),N=n(74),x=n(99),P=n(150),v=n(428),C=n.n(v),A=n(10),M=["locality"];function S(){var e=Object(j.c)().textGet,t=Object(b.b)(),n=Object(x.a)().getValueConfig,v=Object(b.c)(P.d.finalStatus),S=Object(b.c)(P.d.countryRFId),L=Object(b.c)(P.d.fetching),I=Object(b.c)(d.c.fetching),R=Object(b.c)(d.c.fetchingProvinces),y=Object(b.c)(d.c.fetchingLocalities),F=Object(b.c)(d.c.fetchingNeighborhoods),U=Object(b.c)(d.c.warning),B=Object(b.c)(_.c.exchangeToken),D=Object(b.c)(d.c.provincesOptions),V=Object(b.c)(d.c.localitiesOptions),k=Object(b.c)(d.c.neighborhoodsOptions),w=Object(b.c)(d.c.getProvince),Y=Object(b.c)(d.c.getLocality),H=Object(b.c)(d.c.getNeighborhood),W=Object(b.c)(d.c.getNeighborhoodName),q=Object(b.c)(d.c.getStreet),K=Object(b.c)(d.c.getPostalCode),X=Object(b.c)(d.c.getStreetNumber),G=Object(b.c)(d.c.getFloor),J=Object(b.c)(d.c.getDepartment),z=Object(b.c)(d.c.getRenaperData),Q=q||(null===z||void 0===z?void 0:z.streetAddress),Z=X?Number(X):null===z||void 0===z?void 0:z.numberStreet,$=G||(null===z||void 0===z?void 0:z.floor),ee=J||(null===z||void 0===z?void 0:z.department),te=e({uuid:"spa.generic.field.error.required"}),ne=e({uuid:"spa.onboarding.step8.postalCode.error"}),ae=e({uuid:"spa.onboarding.step8.province.label"}),oe=e({uuid:"spa.onboarding.step8.location.label"}),ie=e({uuid:"spa.onboarding.step8.neighborhood.label"}),re=e({uuid:"spa.onboarding.step8.neighborhood.name.label"}),le=e({uuid:"spa.onboarding.step8.street.label"}),ce=e({uuid:"spa.onboarding.step8.postalCode.label"}),se=e({uuid:"spa.onboarding.step8.number.label"}),ue=e({uuid:"spa.onboarding.step8.floor.label"}),be=e({uuid:"spa.onboarding.step8.department.label"}),de=e({uuid:"spa.onboarding.step8.neighborhoods.other.label"}),_e=e({uuid:"spa.onboarding.error.exceeds.maximum.allowed",replace:"".concat(p.Fb)}),pe=e({uuid:"spa.onboarding.error.exceeds.maximum.allowed",replace:"".concat(p.Fb)}),ge=e({uuid:"spa.onboarding.error.exceeds.maximum.allowed",replace:"".concat(p.A)}),Oe=Object(N.a)(n("spa.onboarding.affidavit.enabled")),me={isDisabled:!1,label:de,value:de,searchKey:de},je=H===de,Ee=[Object(r.a)({},me)].concat(Object(l.a)(k)),he=D.find((function(e){return e.value===w})),fe=V.find((function(e){return e.value===Y})),Te=Ee.find((function(e){return e.value===H})),Ne=s.e.object({province:Object(u.d)(s.e.string.required(),te),locality:Object(u.d)(s.e.string.required(),te),neighborhood:Object(u.d)(s.e.string.required(),te),neighborhoodName:je?Object(u.d)(s.e.string.ofLength(p.fb,p.Cb),te):s.e.string.orUndefined(),street:Object(u.d)(s.e.string.required(),te),postalCode:Object(u.d)(s.e.string.ofLength(p.M,p.M),ne),streetNumber:Object(s.c)((function(e){return e?Object(u.d)(Object(s.b)("street number",(function(e){return p.vb.test(String(e))})),ge):Object(u.d)(s.e.string.required(),te)})),floor:Object(u.a)(s.e.string.ofLength(p.Sb,p.Fb),_e),department:Object(u.a)(s.e.string.ofLength(p.Sb,p.Fb),pe)});return c.b.useEffect((function(){!B||Oe&&!v||t(d.b.preStep8({exchangeToken:B}))}),[t,B,Oe,v]),R||L?Object(A.jsx)(g.a,{}):Object(A.jsx)(m.a,{"header-onBack":function(){if(Oe)return S===p.Ob?void t(P.b.cleanRFCountryUSCase()):void t(P.b.cleanRFCountry());t(d.a.cleanRenaper())},"header-title":"spa.onboarding.step8.title",children:Object(A.jsx)("section",{children:Object(A.jsxs)(O.a,{schema:Ne,warnings:U,onSubmit:function(e){return xe.apply(this,arguments)},children:[Object(A.jsx)(j.b,{className:C.a.title,uuid:"spa.onboarding.step8.text1"}),Object(A.jsxs)("div",{className:C.a.inputSelectContainer,children:[Object(A.jsx)(h.a,{defaultOption:he,label:ae,name:"province",options:D,onSelectOption:function(e){var n=e.value;if(t(d.a.setProvince(String(n))),t(d.a.cleanLocalityAndNeighborhood()),!B)return;t(d.b.getLocalities({province:String(n),exchangeToken:B}))}}),Object(A.jsx)(h.a,{defaultOption:fe,disabled:!V||y,hasSpinner:y,label:oe,name:"locality",options:V,onSelectOption:function(e){var n=e.value;if(!B)return;t(d.b.getNeighborhoods({province:w,locality:String(n),exchangeToken:B}))}}),Object(A.jsx)(h.a,{defaultOption:Te,disabled:!Ee||F,hasSpinner:F,label:ie,name:"neighborhood",options:Ee,onSelectOption:function(e){var n=e.value;t(d.a.setNeighborhood(String(n)))}}),je&&Object(A.jsx)(f.a,{defaultValue:W,label:re,maxLength:p.Cb,name:"neighborhoodName"}),Object(A.jsx)(f.a,{defaultValue:Q,label:le,name:"street"}),Object(A.jsx)(f.a,{defaultValue:K,label:ce,maxLength:p.A,name:"postalCode"}),Object(A.jsx)(T.a,{defaultValue:Z,label:se,maxLength:p.A,name:"streetNumber"}),Object(A.jsx)(f.a,{defaultValue:$,label:ue,maxLength:p.Fb,name:"floor"}),Object(A.jsx)(f.a,{defaultValue:ee,label:be,maxLength:p.Fb,name:"department"})]}),Object(A.jsx)(E.a,{className:C.a.submitButton,label:{uuid:"spa.form.continue"},loading:I,type:"submit"})]})})});function xe(){return(xe=Object(i.a)(Object(a.a)().mark((function e(n){var i,l,c,s,u,b;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return c=n.locality,s=Object(o.a)(n,M),u=null!==(i=null===(l=V.find((function(e){return e.value===c})))||void 0===l?void 0:l.label)&&void 0!==i?i:p.D,b=Object(r.a)({localityId:c,locality:u},s),e.next=5,t(d.b.sendAddressData(Object(r.a)({exchangeToken:B},b)));case 5:t(d.a.setAddress(b));case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},428:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_INPUT_CHECKBOX:"InputCheckbox",TYPE_INPUT_CHECKBOX:"Element",NAME_INPUT_PASSWORD:"InputPassword",TYPE_INPUT_PASSWORD:"Element",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_IMAGE:"Image",TYPE_IMAGE:"Element",presentation:"_rules_presentation__2rnDT",image:"_rules_image__2dV7m",containerText:"_rules_containerText__pu48C",title:"_rules_title__3WK5D",text:"_rules_text__3khoq",nextButton:"_rules_nextButton__3nv4A",skipButton:"_rules_skipButton__6WOgG",finishButton:"_rules_finishButton__VsgGK",subtitle:"_rules_subtitle__bTvVh",inputSelectContainer:"_rules_inputSelectContainer__2j7Df",submitButton:"_rules_submitButton__3FaKR",alert:"_rules_alert__laL5T",alertLottie:"_rules_alertLottie__2sgW7",termsAndConditions:"_rules_termsAndConditions__cNiMg",validateTitle:"_rules_validateTitle__2Nx1p",emailValue:"_rules_emailValue__yLDPW",noteEmail:"_rules_noteEmail__4AmC9",subtitleEmail:"_rules_subtitleEmail__2J0wM",inputContainerEmail:"_rules_inputContainerEmail__2O1ou",resendCode:"_rules_resendCode__lH6Jj",inputContainerPhone:"_rules_inputContainerPhone__1gKy1",securitySealContainer:"_rules_securitySealContainer__1LU5g",onboardingWelcome:"_rules_onboardingWelcome__ijVs1",downloadPrincipal:"_rules_downloadPrincipal__2thE8",logosContainer:"_rules_logosContainer__2uaXe"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=210.002fd319.chunk.js.map