(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[172],{513:function(e,t,a){"use strict";a.d(t,"a",(function(){return L}));var n=a(9),r=a(2),l=a(16),c=a(19),o=(a(11),a(521)),E=a(159),i=a(38),T=a(540),s=a.n(T),O=a(541),P=a.n(O),b=a(10),M=["ariaLabel","to","type","children","className","target","preventNavigateCallback","onClick","role"],_=["text"],f=-1,u=s.a.NAME_LINK,p=s.a.TYPE_LINK;function L(e){var t=e,a=t.ariaLabel,T=t.to,s=t.type,O=t.children,L=t.className,N=t.target,m=t.preventNavigateCallback,d=t.onClick,A=t.role,R=Object(c.a)(t,M),v=Object.entries(R).reduce((function(e,t){var a=Object(l.a)(t,2),c=a[0],o=a[1],E="text-";return c.indexOf(E)===f?e:Object(r.a)(Object(r.a)({},e),{},{text:Object(r.a)(Object(r.a)({},e.text),{},Object(n.a)({},c.replace(E,""),o))})}),{text:{}}),j=v.text,h=Object(c.a)(v,_),k="text"===s,x=k?"".concat(L||""," ").concat(P.a.hasText):L;return Object(b.jsx)(E.a,{children:Object(b.jsx)(o.a,Object(r.a)(Object(r.a)({ariaLabel:a,className:x,"data-name":u,"data-type":p,preventNavigateCallback:m,role:A,target:N,to:T,onClick:d},h),{},{children:k?Object(b.jsx)(i.b,Object(r.a)({},j)):O}))})}L.defaultProps={}},521:function(e,t,a){"use strict";a.d(t,"b",(function(){return M})),a.d(t,"a",(function(){return f}));var n=a(2),r=a(19),l=a(11),c=a(558),o=a(22),E=a(41),i=a(527),T=a.n(i),s=(a(528),a(10)),O=["ariaLabel","children","to","target","onClick","hasToReplace","preventNavigateCallback"],P=T.a.NAME_PLATFORMLINK,b=T.a.TYPE_PLATFORMLINK,M={self:"_self",blank:"_blank",system:"_system"},_=0;function f(e){var t=e,a=t.ariaLabel,i=t.children,T=t.to,f=t.target,p=t.onClick,L=t.hasToReplace,N=t.preventNavigateCallback,m=Object(r.a)(t,O),d=Object(o.h)(),A=Object(o.j)(),R=Object(o.g)(T),v=Object(o.m)(T),j=u(T),h=j?T.toString():R,k=j?M.blank:M[f],x=l.b.useCallback((function(e){if(!N())return void e.preventDefault();p&&p(e);if(window.cordova&&k!==M.self){return e.preventDefault(),void window.cordova.InAppBrowser.open(h,M.system,"location=yes").show()}var t=e.button===_,a=Boolean(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey);if(e.defaultPrevented||!t||a||k&&"_self"!==k)return;e.preventDefault(),u?k===M.self?window.location.assign(h):window.open(h,k):A(h,{replace:L||Object(c.a)(d)===Object(c.a)(v)})}),[h,d,A,p,v,L,k,N]);return Object(s.jsx)(E.a,Object(n.a)(Object(n.a)({},m),{},{"aria-label":a,draggable:"false",href:h,name:P,tag:"a",target:k,type:b,onClick:x,children:i}))}function u(e){if("string"!==typeof e)return!1;return/^https?:/.test(e)}f.defaultProps={hasToReplace:!1,preventNavigateCallback:function(){return!0},target:"self"}},527:function(e,t,a){e.exports={NAME_PLATFORMLINK:"PlatformLink",TYPE_PLATFORMLINK:"Element"}},528:function(e,t,a){e.exports={NAME_PLATFORMLINK:"PlatformLink",TYPE_PLATFORMLINK:"Element"}},540:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_LINK:"Link",TYPE_LINK:"Element"}},541:function(e,t,a){e.exports={NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_LINK:"Link",TYPE_LINK:"Element",hasText:"_rules_hasText__3_vE8"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=172.5de9d98f.chunk.js.map