(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[78],{565:function(e,t,n){"use strict";n.d(t,"c",(function(){return R})),n.d(t,"b",(function(){return g})),n.d(t,"a",(function(){return F}));var c=n(16),a=n(11),o=n(41),u=n(99),s=n(39),i=n(87),r=n(187),l=n(50),b=n(38),d=n(82),O=n(490),j=n(74),m=n(33),p=n(8),f=n(36),T=n(6),_=n(494),E=n(79),M=n(80),x=n(51),h=n(270),P=n(574),v=n.n(P),N=n(575),S=n.n(N),A=n(10),I=S.a.NAME_MODAL_OTP,L=S.a.TYPE_MODAL_OTP,R=function(e,t,n){return Object(s.c)((function(c){return c?Object(r.d)(Object(r.m)(e),t):Object(r.d)(s.e.string.required(),n)}))},g=function(e,t,n){return s.e.object({otp:R(e,t,n)})};function F(e){var t=e,n=t.isModalVisible,s=t.handleModal,r=t.children,P=t.titleText,N=t.isLoading,S=Object(f.i)().isMobile,R=Object(p.b)(),g=Object(M.g)(),F=Object(x.sb)(x.kb),y=T.yb.SOFT_TOKEN,D=Object(p.c)(m.e.token),C=Object(p.c)(i.c.otpType),k=Object(p.c)(i.c.countSendOtpSMS),Y=Object(p.c)(i.c.fetching)||N,B=Object(b.c)().textGet,H=Object(u.a)().getValueConfig,w=Object(i.e)(),V=w.isSeedPresent,U=w.softToken,q=Object(E.d)().showSuccessToast,X=Object(j.a)(H("safeway.otps.soft.length")),K=a.b.useState(T.D),G=Object(c.a)(K,2),J=G[0],z=G[1],Q=C===T.Lb,W=a.b.useState(!1),Z=Object(c.a)(W,2),$=Z[0],ee=Z[1],te=k>T.Sb?"spa.modal.otp.button.resendCode":"spa.modal.otp.button.sendCode",ne=a.b.useCallback((function(){if(!S||!Q||!V)return z(T.D),void ee(!1);z(U),ee(!0)}),[S,Q,U,V]);return a.b.useEffect((function(){ne()}),[ne]),a.b.useEffect((function(){k>T.Sb&&q("spa.modal.otp.success.sendCode")}),[k,q]),Object(A.jsx)(o.a,{name:I,tag:"section",type:L,children:Object(A.jsxs)(O.a,{open:n,title:"spa.modal.otp.title",onClose:s,children:[!Y&&Object(A.jsxs)(a.b.Fragment,{children:[Object(A.jsxs)(O.a.Body,{children:[P&&Object(A.jsx)(b.b,{uuid:P}),C?Object(A.jsxs)(a.b.Fragment,{children:[r,!Q&&Object(A.jsx)(b.b,{uuid:"spa.modal.otp.text.sendCode"}),Object(A.jsx)("div",{className:$?v.a.hiddenInput:T.D,children:Object(A.jsx)(_.a,{defaultValue:J,label:B({uuid:"spa.modal.otp.label"}),maxLength:X,name:"otp",start:Object(A.jsx)(l.Icon,{name:"tokenPadlock"})})})]}):Object(A.jsx)(b.b,{uuid:"spa.otp.not.assign"})]}),Object(A.jsx)(O.a.Footer,{children:Object(A.jsxs)("div",{className:v.a.footer,children:[C?Object(A.jsxs)(a.b.Fragment,{children:[!Q&&Object(A.jsx)(d.a,{label:{uuid:te},onClick:function(){if(!D)return;R(i.b.sendOtpOverSms({accessToken:D}))}}),Object(A.jsx)(d.a,{disabled:!Q&&k===T.Sb,label:{uuid:"spa.modal.otp.accept.button"},type:"submit"})]}):Object(A.jsx)(d.a,{label:{uuid:"spa.otp.not.assign.button"},onClick:function(){s(),g(F.replace(x.c,y))}}),Object(A.jsx)(d.a,{label:{uuid:"spa.modal.otp.cancel.button"},variant:"outlined",onClick:s})]})})]}),Y&&Object(A.jsx)(h.a,{})]})})}F.defaultProps={isLoading:!1}},574:function(e,t,n){e.exports={NAME_MODAL_OTP:"ModalOTP",TYPE_MODAL_OTP:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_BUTTON:"Button",TYPE_BUTTON:"Element",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",hiddenInput:"_rules_hiddenInput__2xfdH",footer:"_rules_footer__OXIXm"}},575:function(e,t,n){e.exports={NAME_MODAL_OTP:"ModalOTP",TYPE_MODAL_OTP:"Section"}},603:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var c=n(0),a=n(5),o=n(16),u=n(11),s=n(8),i=n(33),r=n(87),l=function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=Object(s.b)(),n=Object(s.c)(i.e.token),l=Object(s.c)(i.e.linkedSoftTokenUser),b=Object(s.c)(i.e.linkedDeviceModel),d=u.b.useState(!0),O=Object(o.a)(d,2),j=O[0],m=O[1],p=u.b.useCallback(Object(a.a)(Object(c.a)().mark((function e(){return Object(c.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n){e.next=2;break}return e.abrupt("return");case 2:return e.next=4,t(r.b.otpConfigurationPre({accessToken:n,linkedSoftTokenUser:l,linkedDeviceModel:b}));case 4:m(!1);case 5:case"end":return e.stop()}}),e)}))),[n,l,b,t]);return u.b.useEffect((function(){e&&p()}),[p,e]),{fetchData:p,isLoading:j}}},776:function(e,t,n){"use strict";n.d(t,"a",(function(){return R}));var c=n(16),a=n(11),o=n(8),u=n(100),s=n(80),i=n(117),r=n(79),l=n(6),b=n(41),d=n(38),O=n(503),j=n(488),m=n(512),p=n(562),f=n(50),T=n(494),_=n(565),E=n(82),M=n(500),x=n(51),h=n(519),P=n(777),v=n.n(P),N=n(778),S=n.n(N),A=n(10),I=v.a.NAME_DEBITINFO_PAYMENT_FORM_LIST,L=v.a.TYPE_DEBITINFO_PAYMENT_FORM_LIST;function R(){var e=Object(s.g)(),t=Object(o.b)(),n=Object(d.c)().textGet,P=a.b.useState(!1),v=Object(c.a)(P,2),N=v[0],R=v[1],g=Object(u.c)(new Date,{format:u.a.SHORT}),F=Object(x.sb)(x.n),y=Object(o.c)(i.c.fetching),D=Object(o.c)(i.c.deepLinkCouponSendMoney),C=Object(o.c)(i.c.MODOAccountsList),k=Object(o.c)(i.c.couponAccounts),Y=Object(o.c)(i.c.couponData),B=Object(o.c)(i.c.sendMoneyRecieverInfo),H=Object(o.c)(i.c.isAlertCodeOTP),w=n({uuid:"spa.generic.field.error.required"}),V=n({uuid:"spa.modo.request.money.amount.error"}),U=Y?Y.contactName.contactName:null===B||void 0===B?void 0:B.name,q=Y?Y.creditReference:n({uuid:"spa.modo.send.money.defaultValue.motive"}),X=j.a.useContext(),K=X.getValues,G=X.setError;return a.b.useEffect((function(){!1===H&&R(!1)}),[t,H]),Object(A.jsxs)(b.a,{name:I,tag:"section",type:L,children:[Object(A.jsx)(d.b,{className:S.a.debitSubtitle,uuid:"spa.modo.send.money.info.subtitle1"}),Object(A.jsx)(O.a,{defaultOption:function(){var e=(D?k:C).find((function(e){return e.isFavouriteAccount}));if(!e)return;var t=e.shortLabel,c=e.accountNumber,a=e.amount,o=e.accountCurrency,u=n({uuid:"".concat(l.h).concat(o)});return{label:Object(A.jsxs)("div",{children:[Object(A.jsx)(d.b,{tag:"p",children:t}),Object(A.jsx)(d.b,{className:S.a.labelSecondRow,tag:"p",children:Object(A.jsx)(f.FormattedAmount,{amount:a,currency:u})})]}),searchKey:t,value:c}}(),id:"accountSelect",label:n({uuid:"spa.modo.send.money.ticket.account"}),menuClassName:S.a.accountList,name:"accountSelect",options:function(){var e=D?k:C;return null===e||void 0===e?void 0:e.map((function(e){var t=e.shortLabel,c=e.accountNumber,a=e.amount,o=e.accountCurrency,u=n({uuid:"".concat(l.h).concat(o)});return{label:Object(A.jsxs)("div",{children:[Object(A.jsx)(d.b,{tag:"p",children:t}),Object(A.jsx)(d.b,{className:S.a.labelSecondRow,tag:"p",children:Object(A.jsx)(f.FormattedAmount,{amount:a,currency:u})})]}),searchKey:t,value:c}}))}()}),D?Object(A.jsxs)("div",{children:[Object(A.jsx)(d.b,{className:S.a.subtitle,uuid:"spa.modo.send.money.input.amount.label"}),Object(A.jsx)(d.b,{className:S.a.textAmount,children:Object(M.a)({amount:null===Y||void 0===Y?void 0:Y.amount.quantity,currency:l.b})})]}):Object(A.jsx)(m.a,{fixedDecimalScale:!0,decimalScale:l.Jb,decimalSeparator:l.t,id:"amountInput",label:n({uuid:"spa.modo.send.money.input.amount.label"}),name:"amountInput",pattern:l.D,prefixCode:l.b}),Object(A.jsx)(d.b,{className:S.a.subtitle,uuid:"spa.modo.send.money.info.subtitle2"}),Object(A.jsxs)(p.a,{className:S.a.contactInfo,children:[Object(A.jsxs)(f.Box,{as:"section",children:[Object(A.jsx)(f.Avatar,{alt:U||l.D,size:"small"}),Object(A.jsx)(d.b,{children:U})]}),!Y&&Object(A.jsx)(d.b,{children:null===B||void 0===B?void 0:B.phoneNumber})]}),Object(A.jsx)(O.a,{defaultOption:function(){var e=n({uuid:"spa.modo.send.money.transferConcept1"}),t=n({uuid:"spa.modo.send.money.transferConcept1.shortName"});return{label:e,searchKey:e,value:t}}(),id:"conceptSelect",label:n({uuid:"spa.modo.send.money.input.concept.label"}),name:"conceptSelect",options:function(){for(var e=[],t=l.fb;t<l.Fb;t++){var c=n({uuid:"spa.modo.send.money.transferConcept".concat(t)}),a=n({uuid:"spa.modo.send.money.transferConcept".concat(t,".shortName")});e.push({label:c,searchKey:c,value:a})}return e}()}),Object(A.jsx)(T.a,{defaultValue:q,id:"motiveInput",label:n({uuid:"spa.modo.send.money.input.motive.label"}),name:"motiveInput"}),Object(A.jsx)(_.a,{handleModal:z,isLoading:y,isModalVisible:N,children:function(){var e=K(),t=e.accountSelect,c=e.amountInput;if(!t||!c&&!Y)return;var a=D?k:C,o=a.findIndex((function(e){return e.accountNumber===t})),s=a[o].shortLabel,i=Object(h.a)(c)||(null===Y||void 0===Y?void 0:Y.amount.quantity)&&Object(h.a)(null===Y||void 0===Y?void 0:Y.amount.quantity),r=n({uuid:"spa.a11y.currency.ARS"}),l=n({uuid:"spa.modo.send.money.modal.description",replace:['<strong aria-label="'.concat(Object(u.e)(new Date),'">').concat(g,"</strong>"),'<strong aria-label="'.concat(i," ").concat(r,'">').concat(i,"</strong>"),"<strong>".concat(s,"</strong>"),"<strong>".concat(U,"</strong>")]});return Object(A.jsx)(d.b,{children:Object(A.jsx)("span",{className:S.a.descriptionSignAndAccept,dangerouslySetInnerHTML:{__html:l}})})}()}),Object(A.jsx)(E.a,{label:{uuid:"spa.form.continue"},onClick:function(){var e=K();if(Object.entries(e).every((function(e){var t=Object(c.a)(e,2),n=t[0],a=t[1];if("otp"===n)return!0;if("amountInput"===n&&(a<l.fb||!a)){var o=a<l.fb?V:w;return G(n,{message:o},{shouldFocus:!0}),J(),!1}return Boolean(a)})))return z();return Object.entries(e).forEach((function(e){var t=Object(c.a)(e,2),n=t[0],a=t[1];"otp"===n||Boolean(a)||"amountInput"===n||(G(n,{message:w},{shouldFocus:!0}),J())}))}}),Object(A.jsx)(E.a,{label:{uuid:"spa.form.cancel"},variant:"outlined",onClick:function(){D&&t(i.a.cleanDeepLinkData());e(F)}})]});function J(){t(r.a.set({kind:"ERROR",text:{uuid:"spa.form.field.generic.error"},duration:l.w}))}function z(){H&&t(i.a.cleanOtpError()),R(!N)}}},777:function(e,t,n){e.exports={NAME_DEBITINFO_PAYMENT_FORM_LIST:"DebitInfoFormList",TYPE_DEBITINFO_PAYMENT_FORM_LIST:"Section"}},778:function(e,t,n){e.exports={NAME_DEBITINFO_PAYMENT_FORM_LIST:"DebitInfoFormList",TYPE_DEBITINFO_PAYMENT_FORM_LIST:"Section",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",subtitle:"_rules_subtitle__wGsPr",debitSubtitle:"_rules_debitSubtitle__36SWm",textAmount:"_rules_textAmount__10eR2",labelSecondRow:"_rules_labelSecondRow__3bT8c",accountList:"_rules_accountList__2Q-qS",contactInfo:"_rules_contactInfo__2xqSS"}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=78.8ab239d9.chunk.js.map