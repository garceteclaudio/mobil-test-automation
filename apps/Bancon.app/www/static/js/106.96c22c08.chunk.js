(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[106],{227:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return F}));var a=n(11),c=n(524),o=n(8),i=n(149),r=n(150),b=n(79),s=n(65),l=n(36),d=n(74),u=n(99),p=n(6),j=n(352),O=n(353),g=n(354),f=n(355),h=n(356),m=n(380),x=n(357),v=n(358),S=n(359),N=n(360),C=n(361),y=n(350),L=n(351),k=n(349),w=n(196),A=n(10);function F(){var e=Object(o.b)(),t=Object(l.i)().isMobile,n=Object(u.a)().getValueConfig,F=Object(o.c)(i.c.isStep1Intro),R=Object(o.c)(i.c.isStep2CreateAccount),T=Object(o.c)(i.c.isStep3ValidateEmail),V=Object(o.c)(i.c.isStep4ValidatePhone),q=Object(o.c)(i.c.isStep5ValidatePhone),D=Object(o.c)(i.c.isStep6Renaper),E=Object(o.c)(i.c.isStep7PersonalData),B=Object(o.c)(i.c.isStep8Address),P=Object(o.c)(i.c.isStep9Office),M=Object(o.c)(i.c.isStep10CreateUser),I=Object(o.c)(i.c.isStep11),U=Object(o.c)(i.c.isDownloadApp),G=Object(o.c)(r.d.isAffidavit),z=Object(d.a)(n("spa.onboarding.affidavit.enabled"))&&G&&!U,J=Object(d.a)(n("backend.webservices.core.version.target.actividadBuscar"))===p.zb.BANTOTAL,K={step1:{condition:F,component:j.default},step2:{condition:R,component:O.default},step3:{condition:T,component:g.default},step4:{condition:V,component:f.default},step5:{condition:q,component:h.default},step6:{condition:D,component:m.default},step7BT:{condition:J&&E,component:v.default},step7:{condition:!J&&E,component:x.default},step8:{condition:z,component:w.default},step9BT:{condition:J&&B,component:N.default},step9:{condition:!J&&B,component:S.default},step10:{condition:P,component:C.default},step11:{condition:M,component:y.default},step12:{condition:I,component:L.default},step13:{condition:U,component:k.default}},W=Object(o.c)(b.b.get);return a.b.useEffect((function(){t&&e(i.a.hideDownloadApp())}),[e,t]),Object(A.jsx)(c.b,{handleChangeStep:function(){V&&!q||!W.length||e(b.a.clean())},handleFallback:function(){var t={id:c.a,message:"ERROR ".concat(c.a," - NO TARGET STEP"),name:"ERROR ".concat(c.a),stack:"ERROR ".concat(c.a)};e(s.a.add(t))},steps:K})}},359:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return F}));var a=n(0),c=n(19),o=n(5),i=n(2),r=n(30),b=n(11),s=n(39),l=n(187),d=n(8),u=n(149),p=n(147),j=n(6),O=n(270),g=n(488),f=n(489),h=n(38),m=n(82),x=n(503),v=n(494),S=n(512),N=n(74),C=n(99),y=n(150),L=n(428),k=n.n(L),w=n(10),A=["locality"];function F(){var e=Object(h.c)().textGet,t=Object(d.b)(),n=Object(C.a)().getValueConfig,L=Object(d.c)(y.d.finalStatus),F=Object(d.c)(y.d.countryRFId),R=Object(d.c)(y.d.fetching),T=Object(d.c)(u.c.fetching),V=Object(d.c)(u.c.fetchingProvinces),q=Object(d.c)(u.c.fetchingLocalities),D=Object(d.c)(u.c.fetchingNeighborhoods),E=Object(d.c)(u.c.warning),B=Object(d.c)(p.c.exchangeToken),P=Object(d.c)(u.c.provincesOptions),M=Object(d.c)(u.c.localitiesOptions),I=Object(d.c)(u.c.neighborhoodsOptions),U=Object(d.c)(u.c.getProvince),G=Object(d.c)(u.c.getLocality),z=Object(d.c)(u.c.getNeighborhood),J=Object(d.c)(u.c.getNeighborhoodName),K=Object(d.c)(u.c.getStreet),W=Object(d.c)(u.c.getPostalCode),H=Object(d.c)(u.c.getStreetNumber),Q=Object(d.c)(u.c.getFloor),X=Object(d.c)(u.c.getDepartment),Y=Object(d.c)(u.c.getRenaperData),Z=K||(null===Y||void 0===Y?void 0:Y.streetAddress),$=H?Number(H):null===Y||void 0===Y?void 0:Y.numberStreet,_=Q||(null===Y||void 0===Y?void 0:Y.floor),ee=X||(null===Y||void 0===Y?void 0:Y.department),te=e({uuid:"spa.generic.field.error.required"}),ne=e({uuid:"spa.onboarding.step8.postalCode.error"}),ae=e({uuid:"spa.onboarding.step8.province.label"}),ce=e({uuid:"spa.onboarding.step8.location.label"}),oe=e({uuid:"spa.onboarding.step8.neighborhood.label"}),ie=e({uuid:"spa.onboarding.step8.neighborhood.name.label"}),re=e({uuid:"spa.onboarding.step8.street.label"}),be=e({uuid:"spa.onboarding.step8.postalCode.label"}),se=e({uuid:"spa.onboarding.step8.number.label"}),le=e({uuid:"spa.onboarding.step8.floor.label"}),de=e({uuid:"spa.onboarding.step8.department.label"}),ue=e({uuid:"spa.onboarding.step8.neighborhoods.other.label"}),pe=e({uuid:"spa.onboarding.error.exceeds.maximum.allowed",replace:"".concat(j.Fb)}),je=e({uuid:"spa.onboarding.error.exceeds.maximum.allowed",replace:"".concat(j.Fb)}),Oe=e({uuid:"spa.onboarding.error.exceeds.maximum.allowed",replace:"".concat(j.A)}),ge=Object(N.a)(n("spa.onboarding.affidavit.enabled")),fe={isDisabled:!1,label:ue,value:ue,searchKey:ue},he=z===ue,me=[Object(i.a)({},fe)].concat(Object(r.a)(I)),xe=P.find((function(e){return e.value===U})),ve=M.find((function(e){return e.value===G})),Se=me.find((function(e){return e.value===z})),Ne=s.e.object({province:Object(l.d)(s.e.string.required(),te),locality:Object(l.d)(s.e.string.required(),te),neighborhood:Object(l.d)(s.e.string.required(),te),neighborhoodName:he?Object(l.d)(s.e.string.ofLength(j.fb,j.Cb),te):s.e.string.orUndefined(),street:Object(l.d)(s.e.string.required(),te),postalCode:Object(l.d)(s.e.string.ofLength(j.M,j.M),ne),streetNumber:Object(s.c)((function(e){return e?Object(l.d)(Object(s.b)("street number",(function(e){return j.vb.test(String(e))})),Oe):Object(l.d)(s.e.string.required(),te)})),floor:Object(l.a)(s.e.string.ofLength(j.Sb,j.Fb),pe),department:Object(l.a)(s.e.string.ofLength(j.Sb,j.Fb),je)});return b.b.useEffect((function(){!B||ge&&!L||t(u.b.preStep8({exchangeToken:B}))}),[t,B,ge,L]),V||R?Object(w.jsx)(O.a,{}):Object(w.jsx)(f.a,{"header-onBack":function(){if(ge)return F===j.Ob?void t(y.b.cleanRFCountryUSCase()):void t(y.b.cleanRFCountry());t(u.a.cleanRenaper())},"header-title":"spa.onboarding.step8.title",children:Object(w.jsx)("section",{children:Object(w.jsxs)(g.a,{schema:Ne,warnings:E,onSubmit:function(e){return Ce.apply(this,arguments)},children:[Object(w.jsx)(h.b,{className:k.a.title,uuid:"spa.onboarding.step8.text1"}),Object(w.jsxs)("div",{className:k.a.inputSelectContainer,children:[Object(w.jsx)(x.a,{defaultOption:xe,label:ae,name:"province",options:P,onSelectOption:function(e){var n=e.value;if(t(u.a.setProvince(String(n))),t(u.a.cleanLocalityAndNeighborhood()),!B)return;t(u.b.getLocalities({province:String(n),exchangeToken:B}))}}),Object(w.jsx)(x.a,{defaultOption:ve,disabled:!M||q,hasSpinner:q,label:ce,name:"locality",options:M,onSelectOption:function(e){var n=e.value;if(!B)return;t(u.b.getNeighborhoods({province:U,locality:String(n),exchangeToken:B}))}}),Object(w.jsx)(x.a,{defaultOption:Se,disabled:!me||D,hasSpinner:D,label:oe,name:"neighborhood",options:me,onSelectOption:function(e){var n=e.value;t(u.a.setNeighborhood(String(n)))}}),he&&Object(w.jsx)(v.a,{defaultValue:J,label:ie,maxLength:j.Cb,name:"neighborhoodName"}),Object(w.jsx)(v.a,{defaultValue:Z,label:re,name:"street"}),Object(w.jsx)(v.a,{defaultValue:W,label:be,maxLength:j.A,name:"postalCode"}),Object(w.jsx)(S.a,{defaultValue:$,label:se,maxLength:j.A,name:"streetNumber"}),Object(w.jsx)(v.a,{defaultValue:_,label:le,maxLength:j.Fb,name:"floor"}),Object(w.jsx)(v.a,{defaultValue:ee,label:de,maxLength:j.Fb,name:"department"})]}),Object(w.jsx)(m.a,{className:k.a.submitButton,label:{uuid:"spa.form.continue"},loading:T,type:"submit"})]})})});function Ce(){return(Ce=Object(o.a)(Object(a.a)().mark((function e(n){var o,r,b,s,l,d;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return b=n.locality,s=Object(c.a)(n,A),l=null!==(o=null===(r=M.find((function(e){return e.value===b})))||void 0===r?void 0:r.label)&&void 0!==o?o:j.D,d=Object(i.a)({localityId:b,locality:l},s),e.next=5,t(u.b.sendAddressData(Object(i.a)({exchangeToken:B},d)));case 5:t(u.a.setAddress(d));case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},360:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return F}));var a=n(0),c=n(2),o=n(19),i=n(5),r=n(16),b=n(11),s=n(39),l=n(187),d=n(8),u=n(149),p=n(147),j=n(6),O=n(270),g=n(488),f=n(489),h=n(38),m=n(82),x=n(503),v=n(494),S=n(512),N=n(74),C=n(99),y=n(150),L=n(428),k=n.n(L),w=n(10),A=["locality"];function F(){var e=Object(h.c)().textGet,t=Object(d.b)(),n=Object(C.a)().getValueConfig,L=Object(d.c)(y.d.finalStatus),F=Object(d.c)(y.d.countryRFId),R=Object(d.c)(y.d.fetching),T=Object(d.c)(u.c.fetching),V=Object(d.c)(u.c.fetchingProvinces),q=Object(d.c)(u.c.fetchingLocalities),D=Object(d.c)(u.c.fetchingNeighborhoods),E=Object(d.c)(u.c.warning),B=Object(d.c)(p.c.exchangeToken),P=Object(d.c)(u.c.provincesOptions),M=Object(d.c)(u.c.localitiesOptions),I=Object(d.c)(u.c.neighborhoodsOptions),U=Object(d.c)(u.c.getProvince),G=Object(d.c)(u.c.getLocality),z=Object(d.c)(u.c.getNeighborhood),J=Object(d.c)(u.c.getNeighborhoodName),K=Object(d.c)(u.c.getStreet),W=Object(d.c)(u.c.getPostalCode),H=Object(d.c)(u.c.getStreetNumber),Q=Object(d.c)(u.c.getFloor),X=Object(d.c)(u.c.getDepartment),Y=Object(d.c)(u.c.getBlock),Z=Object(d.c)(u.c.getTower),$=Object(d.c)(u.c.getRenaperData),_=K||(null===$||void 0===$?void 0:$.streetAddress),ee=H?Number(H):null===$||void 0===$?void 0:$.numberStreet,te=Q||(null===$||void 0===$?void 0:$.floor),ne=X||(null===$||void 0===$?void 0:$.department),ae=e({uuid:"spa.generic.field.error.required"}),ce=e({uuid:"spa.onboarding.step8.postalCode.error"}),oe=e({uuid:"spa.onboarding.step8.province.label"}),ie=e({uuid:"spa.onboarding.step8.location.label"}),re=e({uuid:"spa.onboarding.step8.neighborhood.label"}),be=e({uuid:"spa.onboarding.step8.neighborhood.name.label"}),se=e({uuid:"spa.onboarding.step8.street.label"}),le=e({uuid:"spa.onboarding.step8.postalCode.label"}),de=e({uuid:"spa.onboarding.step8.block.label"}),ue=e({uuid:"spa.onboarding.step8.tower.label"}),pe=e({uuid:"spa.onboarding.step8.number.label"}),je=e({uuid:"spa.onboarding.step8.floor.label"}),Oe=e({uuid:"spa.onboarding.step8.department.label"}),ge=e({uuid:"spa.onboarding.error.exceeds.maximum.allowed",replace:"".concat(j.Fb)}),fe=e({uuid:"spa.onboarding.error.exceeds.maximum.allowed",replace:"".concat(j.Fb)}),he=e({uuid:"spa.onboarding.error.exceeds.maximum.allowed",replace:"".concat(j.Fb)}),me=e({uuid:"spa.onboarding.error.exceeds.maximum.allowed",replace:"".concat(j.Fb)}),xe=e({uuid:"spa.onboarding.error.exceeds.maximum.allowed",replace:"".concat(j.A)}),ve=Object(N.a)(n("spa.onboarding.affidavit.enabled")),Se=b.b.useState(!1),Ne=Object(r.a)(Se,2),Ce=Ne[0],ye=Ne[1],Le=P.find((function(e){return e.value===U})),ke=M.find((function(e){return e.value===G})),we=I.find((function(e){return e.value===z})),Ae=s.e.object({province:Object(l.d)(s.e.string.required(),ae),locality:Object(l.d)(s.e.string.required(),ae),neighborhood:Object(l.d)(s.e.string.required(),ae),neighborhoodName:Ce?Object(l.d)(s.e.string.ofLength(j.fb,j.Cb),ae):s.e.string.orUndefined(),street:Object(l.d)(s.e.string.required(),ae),postalCode:Object(l.d)(s.e.string.ofLength(j.M,j.M),ce),streetNumber:Object(s.c)((function(e){return e?Object(l.d)(Object(s.b)("street number",(function(e){return j.vb.test(String(e))})),xe):Object(l.d)(s.e.string.required(),ae)})),floor:Object(l.a)(s.e.string.ofLength(j.Sb,j.Fb),ge),block:Object(l.a)(s.e.string.ofLength(j.Sb,j.Fb),fe),tower:Object(l.a)(s.e.string.ofLength(j.Sb,j.Fb),he),department:Object(l.a)(s.e.string.ofLength(j.Sb,j.Fb),me)});return b.b.useEffect((function(){!B||ve&&!L||t(u.b.preStep8({exchangeToken:B}))}),[t,B,ve,L]),V||R?Object(w.jsx)(O.a,{}):Object(w.jsx)(f.a,{"header-onBack":function(){if(ve)return F===j.Ob?void t(y.b.cleanRFCountryUSCase()):void t(y.b.cleanRFCountry());t(u.a.cleanRenaper())},"header-title":"spa.onboarding.step8.title",children:Object(w.jsx)("section",{children:Object(w.jsxs)(g.a,{schema:Ae,warnings:E,onSubmit:function(e){return Fe.apply(this,arguments)},children:[Object(w.jsx)(h.b,{className:k.a.title,uuid:"spa.onboarding.step8.text1"}),Object(w.jsxs)("div",{className:k.a.inputSelectContainer,children:[Object(w.jsx)(x.a,{defaultOption:Le,label:oe,name:"province",options:P,onSelectOption:function(e){var n=e.value;if(t(u.a.setProvince(String(n))),t(u.a.cleanLocalityAndNeighborhood()),!B)return;t(u.b.getLocalities({province:String(n),exchangeToken:B}))}}),Object(w.jsx)(x.a,{defaultOption:ke,disabled:!M||q,hasSpinner:q,label:ie,name:"locality",options:M,onSelectOption:function(e){var n=e.value;if(!B)return;t(u.b.getNeighborhoods({province:U,locality:String(n),exchangeToken:B}))}}),Object(w.jsx)(x.a,{defaultOption:we,disabled:D,hasSpinner:D,label:re,name:"neighborhood",options:I,onSelectOption:function(e){var n=e.value,a=I.find((function(e){return e.value===n})),c=null===a||void 0===a?void 0:a.value;a&&"25500"===c?(ye(!0),t(u.a.setNeighborhood(j.D))):(t(u.a.setNeighborhood(String(n))),ye(!1))}}),Ce&&Object(w.jsx)(v.a,{defaultValue:J,label:be,maxLength:j.Cb,name:"neighborhoodName"}),Object(w.jsx)(v.a,{defaultValue:_,label:se,name:"street"}),Object(w.jsx)(v.a,{defaultValue:W,label:le,name:"postalCode"}),Object(w.jsx)(v.a,{defaultValue:Y,label:de,name:"block"}),Object(w.jsx)(v.a,{defaultValue:Z,label:ue,name:"tower"}),Object(w.jsx)(S.a,{defaultValue:ee,label:pe,maxLength:j.A,name:"streetNumber"}),Object(w.jsx)(v.a,{defaultValue:te,label:je,maxLength:j.Fb,name:"floor"}),Object(w.jsx)(v.a,{defaultValue:ne,label:Oe,maxLength:j.Fb,name:"department"})]}),Object(w.jsx)(m.a,{className:k.a.submitButton,label:{uuid:"spa.form.continue"},loading:T,type:"submit"})]})})});function Fe(){return(Fe=Object(i.a)(Object(a.a)().mark((function e(n){var i,r,b,s,l,d,p,O,g;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return l=n.locality,d=Object(o.a)(n,A),p=null!==(i=null===(r=M.find((function(e){return e.value===l})))||void 0===r?void 0:r.label)&&void 0!==i?i:j.D,O=null!==(b=null===(s=I.find((function(e){return e.value===z})))||void 0===s?void 0:s.label)&&void 0!==b?b:j.D,g=Object(c.a)({localityId:l,locality:p,neighborhoodIdName:O},d),e.next=6,t(u.b.sendAddressData(Object(c.a)({exchangeToken:B},g)));case 6:t(u.a.setAddress(g));case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},361:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return y}));var a=n(0),c=n(2),o=n(5),i=n(16),r=n(11),b=n(39),s=n(8),l=n(149),d=n(187),u=n(50),p=n(147),j=n(270),O=n(489),g=n(38),f=n(82),h=n(503),m=n(515),x=n(490),v=n(488),S=n(428),N=n.n(S),C=n(10);function y(){var e=Object(g.c)().textGet,t=Object(s.b)(),n=r.b.useState(!1),S=Object(i.a)(n,2),y=S[0],L=S[1],k=Object(s.c)(l.c.fetching),w=Object(s.c)(l.c.branchOffices),A=Object(s.c)(p.c.exchangeToken),F=Object(s.c)(l.c.warning),R=e({uuid:"spa.onboarding.error.termsAndConditions"}),T=e({uuid:"spa.onboarding.step9.branch.error.required"}),V=e({uuid:"spa.onboarding.step9.branch.label"}),q=b.e.object({branch:Object(d.d)(b.e.string.required(),T),termConditions:Object(d.d)(b.e.boolean.equals(!0),R)});if(r.b.useEffect((function(){A&&t(l.b.preStep9({exchangeToken:A}))}),[t,A]),k||!w.length)return Object(C.jsx)(j.a,{});var D=w.map((function(e){return function(e){var t=e.id,n=e.name,a=e.address,c="".concat(n," - ").concat(t),o=a;return{value:t,searchKey:c,label:Object(C.jsx)("div",{className:N.a.option,children:Object(C.jsxs)(g.b,{className:N.a.labelOptionsText,color:"gray-light",tag:"span",children:[c,"  ",o]})})}}(e)}));return Object(C.jsx)(O.a,{"header-onBack":function(){t(l.a.cleanAddresData())},"header-title":"spa.onboarding.step9.title",children:Object(C.jsxs)("section",{children:[Object(C.jsxs)(v.a,{schema:q,warnings:F,onSubmit:function(e){return B.apply(this,arguments)},children:[Object(C.jsx)(g.b,{className:N.a.title,uuid:"spa.onboarding.step9.text1"}),Object(C.jsxs)("div",{className:N.a.inputSelectContainer,children:[Object(C.jsx)(h.a,{label:V,name:"branch",options:D}),Object(C.jsx)(u.Alert,{variant:"info",children:Object(C.jsxs)("div",{className:N.a.alert,children:[Object(C.jsx)(u.Lottie,{play:!0,className:N.a.alertLottie,name:"info",size:"small"}),Object(C.jsx)(g.b,{uuid:"spa.onboarding.step9.termsAndConditions.text"})]})}),Object(C.jsx)(m.a,{label:Object(C.jsxs)("div",{className:N.a.termsAndConditions,children:[Object(C.jsx)(g.b,{uuid:"spa.onboarding.step9.termsAndConditions.label1"}),Object(C.jsx)(f.a,{kind:"plain",label:{uuid:"spa.onboarding.step9.termsAndConditions.label2"},type:"button",onClick:E})]}),name:"termConditions",onChange:function(){t(l.a.cleanWarnings())}})]}),Object(C.jsx)(f.a,{label:{uuid:"spa.form.continue"},loading:k,type:"submit"})]}),Object(C.jsxs)(x.a,{open:y,title:"spa.enrollment.terms.and.conditions.title",onClose:E,children:[Object(C.jsx)(x.a.Body,{children:Object(C.jsx)(g.b,{uuid:"spa.enrollment.terms.and.conditions"})}),Object(C.jsx)(x.a.Footer,{children:Object(C.jsx)(f.a,{label:{uuid:"spa.form.accept"},type:"button",onClick:E})})]})]})});function E(){L(!y)}function B(){return(B=Object(o.a)(Object(a.a)().mark((function e(n){return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t(l.b.sendBranchOfficeData(Object(c.a)({exchangeToken:A},n)));case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}}},535:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var a=n(6);function c(e){var t=Number(e("validationCodes.id.groups.length"));return Number(e("validationCodes.id.groupLength"))*t+t-a.fb}},554:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(39),c=n(187),o=n(6);function i(e){var t=e.textErrorRequired,n=e.textErrorEmail,i=e.textErrorMaxLength,r=e.emailMaxLength,b=e.emailValidationRegex,s=[Object(c.d)(a.e.string.ofLength(o.fb,r),i),Object(c.d)(Object(c.h)(b),n)];return Object(a.c)((function(e){var n=s.find((function(t){return!Object(a.d)(e,t)}));return e&&n?n:Object(c.d)(a.e.string.required(),t)}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=106.96c22c08.chunk.js.map