(this["webpackJsonp@app/bancon"]=this["webpackJsonp@app/bancon"]||[]).push([[88,202,316],{234:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return d}));n(11);var r=n(524),c=n(8),a=n(163),i=n(65),u=n(79),o=n(373),s=n(374),l=n(10);function d(){var e=Object(c.b)(),t=Object(c.c)(a.c.isStep1),n=Object(c.c)(a.c.isStep2),d={step1:{condition:t,component:o.default},step2:{condition:n,component:s.default}};return Object(l.jsx)(r.b,{handleChangeStep:function(){e(u.a.clean())},handleFallback:function(){e(i.a.add({id:r.a,message:"ERROR ".concat(r.a," - NO TARGET STEP"),name:"ERROR ".concat(r.a),stack:"ERROR ".concat(r.a)}))},steps:d})}},373:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return v}));var r=n(0),c=n(5),a=n(11),i=n(39),u=n(8),o=n(163),s=n(82),l=n(38),d=n(494),E=n(488),b=n(608),p=n(522),j=n(489),f=n(51),O=n(99),m=n(554),T=n(74),x=n(440),_=n.n(x),h=n(10);function v(){var e=Object(u.b)(),t=Object(l.c)().textGet,n=Object(O.a)().getValueConfig,x=Object(u.c)(o.c.getDocumentTypes),v=Object(u.c)(o.c.fetching),P=Object(f.qb)(),R=Object(f.sb)(f.O),M=t({uuid:"spa.recoverUser.email.hint"}),N=t({uuid:"spa.recoverUser.email.text"});a.b.useEffect((function(){e(o.b.getDocumentType(null))}),[e]);var g=function(){var e=t({uuid:"spa.documentType.error.cdi"}),r=t({uuid:"spa.documentType.error.cuit"}),c=t({uuid:"spa.documentType.error.passport"}),a=t({uuid:"spa.generic.field.error.required"}),u=t({uuid:"spa.generic.mail.format.invalid"}),o=Object(T.a)(n("core.email.maxLength")),s=Object(T.a)(n("spa.email.validationFormat")),l=new RegExp(s),d=t({uuid:"spa.email.error.tooBig",replace:"".concat(o)});return Object(i.a)(i.e.object({email:Object(m.a)({textErrorRequired:a,textErrorEmail:u,textErrorMaxLength:d,emailMaxLength:o,emailValidationRegex:l})}),Object(b.b)({textErrorCdi:e,textErrorCuit:r,textErrorPassport:c,textErrorRequired:a}))}();return Object(h.jsx)(j.a,{"header-onBack":function(){P(R)},"header-title":"spa.recoverUser.title",children:Object(h.jsx)("section",{children:Object(h.jsxs)(E.a,{schema:g,onSubmit:function(e){return A.apply(this,arguments)},children:[Object(h.jsx)("div",{className:_.a.textSubtitle,children:Object(h.jsx)(l.b,{uuid:"spa.recoverUser.step1.text"})}),Object(h.jsxs)("div",{className:_.a.alignInputs,children:[Object(h.jsx)(b.a,{documentTypeDefValue:p.a,documentTypeList:x}),Object(h.jsx)(d.a,{withoutSpaces:!0,helper:M,id:"email",label:N,name:"email"})]}),Object(h.jsx)(s.a,{label:{uuid:"spa.recoverUser.continue"},loading:v,type:"submit"})]})})});function A(){return(A=Object(c.a)(Object(r.a)().mark((function t(n){return Object(r.a)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e(o.b.recoverUser(n));case 2:case"end":return t.stop()}}),t)})))).apply(this,arguments)}}},374:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return f}));var r=n(11),c=n(80),a=n(8),i=n(163),u=n(270),o=n(82),s=n(38),l=n(136),d=n(489),E=n(51),b=n(440),p=n.n(b),j=n(10);function f(){var e=Object(c.g)(),t=Object(E.sb)(E.O),n=Object(a.b)(),b=Object(a.c)(i.c.fetching),f=r.b.useCallback((function(){n(i.a.clean())}),[n]);return r.b.useEffect((function(){return window.addEventListener("popstate",f),function(){return window.removeEventListener("popstate",f)}}),[f]),b?Object(j.jsx)(u.a,{}):Object(j.jsx)(d.a,{children:Object(j.jsxs)("section",{children:[Object(j.jsx)(l.a,{uuid:"eOLogin"}),Object(j.jsx)("div",{className:p.a.textBody,children:Object(j.jsx)(s.b,{uuid:"spa.recoverUser.success"})}),Object(j.jsx)(o.a,{label:{uuid:"spa.recoverUser.finish"},type:"button",onClick:function(){n(i.a.clean()),e(t)}})]})})}},440:function(e,t,n){e.exports={NAME_EXTERNAL_CONTAINER:"ContainerExternal",TYPE_EXTERNAL_CONTAINER:"Container",NAME_THEMEPLATFORM:"ThemePlatform",TYPE_THEMEPLATFORM:"Bundle",NAME_CONSUMER_THEMEPLATFORM:"ThemePlatformConsumer",TYPE_CONSUMER_THEMEPLATFORM:"Element",NAME_PROVIDER_THEMEPLATFORM:"ThemePlatformProvider",TYPE_PROVIDER_THEMEPLATFORM:"Provider",NAME_TEXT:"Text",TYPE_TEXT:"Element",NAME_INPUT_FIELD:"InputField",TYPE_INPUT_FIELD:"Element",NAME_INPUT_SELECT:"InputSelect",TYPE_INPUT_SELECT:"Element",NAME_INPUT_NUMBER:"InputNumber",TYPE_INPUT_NUMBER:"Element",NAME_XS:"xs",NAME_SM:"sm",NAME_MD:"md",NAME_LG:"lg",textSubtitle:"_rules_textSubtitle__12jSX",alignInputs:"_rules_alignInputs__32E27",textBody:"_rules_textBody__1Kovy"}},524:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return l}));var r=n(2),c=n(16),a=n(11),i=n(531),u=n.n(i),o=n(10),s=u.a.NAME_STEPPER;u.a.TYPE_STEPPER;function l(e){var t=e,n=t.steps,i=t.handleFallback,u=t.handleChangeStep,s=Object.entries(n).filter((function(e){return Boolean(e[1].condition)})).map((function(e){var t=Object(c.a)(e,2),n=t[0],a=t[1],i=a.component;return Object(o.jsx)(i,Object(r.a)({},a.props||{}),n)}),{}).shift(),l=a.b.useState(null===s||void 0===s?void 0:s.key),d=Object(c.a)(l,2),E=d[0],b=d[1];return a.b.useEffect((function(){!s&&i&&i()}),[i,s]),a.b.useEffect((function(){E!==(null===s||void 0===s?void 0:s.key)&&u&&u(),b(null===s||void 0===s?void 0:s.key)}),[E,u,null===s||void 0===s?void 0:s.key]),s||null}l.displayName=s,l.defaultProps={handleChangeStep:function(){},handleFallback:function(){}}},531:function(e,t,n){e.exports={NAME_STEPPER:"Stepper",TYPE_STEPPER:"Element"}},554:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(39),c=n(187),a=n(6);function i(e){var t=e.textErrorRequired,n=e.textErrorEmail,i=e.textErrorMaxLength,u=e.emailMaxLength,o=e.emailValidationRegex,s=[Object(c.d)(r.e.string.ofLength(a.fb,u),i),Object(c.d)(Object(c.h)(o),n)];return Object(r.c)((function(e){var n=s.find((function(t){return!Object(r.d)(e,t)}));return e&&n?n:Object(c.d)(r.e.string.required(),t)}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=88.63fcb8dd.chunk.js.map