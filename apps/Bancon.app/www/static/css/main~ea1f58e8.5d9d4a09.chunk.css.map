{"version":3,"sources":["webpack://src/sections/ErrorNetwork/_rules.module.scss","webpack://../bancor-components/Style/Layout/Flex.scss","webpack://../@pkg/react-storybook/Bundle/Theme/_index.scss","webpack://../bancor-components/Style/screen/_index.scss","webpack://src/sections/ErrorInternal/_rules.module.scss","webpack://src/sections/ErrorSaturated/_rules.module.scss","webpack://src/sections/ErrorHttp/_rules.module.scss"],"names":[],"mappings":"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","file":"main~ea1f58e8.5d9d4a09.chunk.css","sourcesContent":["@use \".\" as this;\n@use \"@app/bancor-components/Element/Button\";\n@use \"@app/bancor-components/Element/Text\";\n@use \"@app/bancor-components/Style/screen\";\n@use \"@app/bancor-components/Style/Color\";\n@use \"@app/bancor-components/Style/Font\";\n@use \"@app/bancor-components/Style/Layout\";\n@use \"@app/bancor-components/Style/Layout/Flex\";\n@use \"@app/bancor-components/Style/Layout/Margin\";\n@use \"@app/bancor-components/Style/Layout/Padding\";\n\n$container-width: 300px;\n$button-max-width: 170px;\n\n#{this.$selector} {\n    @include Flex.set($align: start, $justify: center);\n    @include Color.set($bg: \"white\");\n    width: 100%;\n    min-height: 100vh;\n\n    @include screen.xl { \n        @include Flex.set($align: center);\n    }\n\n    > div {\n        @include Flex.set($dir: column, $align: center, $justify: center);\n        max-width: $container-width;\n            \n        & > svg {\n            @include Margin.set($top: zeta, $bottom: zeta);\n            @include screen.xl { \n                @include Margin.set($top: none);\n            }\n        }\n\n        & > h1 {\n            @include Color.set($fg: \"gray-light\");\n            @include Font.set($family: heading, $weight: medium, $size: kappa, $align: center);\n            @include Margin.set($bottom: delta);\n        }\n        \n        & > p {\n            @include Color.set($fg: \"gray-light\");\n            @include Font.set($weight: medium, $size: gamma, $align: center);\n        }\n        \n        #{Button.$selector} {\n            @include Margin.set($top: zeta);\n            max-width: $button-max-width;\n            #{Text.$selector} {\n                @include Color.set($fg: \"secondary\");\n                @include Font.set($size: delta);\n            }\n        }\n    }\n}","@use \"sass:map\";\n@use \"sass:meta\";\n@use \"@pkg/react-storybook/Bundle/Theme\";\n\n$props: (\n    justify: (justify-content, (\n        start: flex-start,\n        end: flex-end,\n        center: center,\n        between: space-between,\n        around: space-around,\n        evenly: space-evenly,\n    )),\n    align: (align-items, (\n        default: stretch,\n        start: flex-start,\n        end: flex-end,\n        center: center,\n        base: baseline,\n    )),\n    wrap: (flex-wrap, (\n        default: nowrap,\n        wrap: wrap,\n        reverse: wrap-reverse,\n    )),\n    grow: (flex-grow, (\n        default: auto,\n        none: 0,\n        alpha: 1,\n        beta: 2,\n        gamma: 3\n    )),\n    shrink: (flex-shrink, (\n        default: initial,\n        none: 0,\n        alpha: 1,\n        beta: 2,\n        gamma: 3\n    )),\n    dir: (flex-direction, (\n        default: row,\n        column: column,\n        row-reverse: row-reverse,\n        column-reverse: column-reverse,\n    )),\n);\n\n$presets: (\n    default: (\n        justify: default,\n        align: default,\n        wrap: default,\n    )\n);\n\n@mixin set($preset: null, $args...) {\n    $data: Theme.data-parse(meta.keywords($args), $preset, $props, $presets);\n    display: flex;\n    @include Theme.render(map.get($data, schema));\n}\n","@use \"sass:map\";\n@use \"sass:list\";\n@use \"sass:meta\";\n@use \"@pkg/styles/util\";\n\n@use \"../../Component\";\n@use \"./util/props\";\n@use \"./util/args\";\n@use \"./util/presets\";\n@use \"./util/extras\";\n\n$name: ThemePlatform;\n$type: Component.$type-bundle;\n$selector: Component.selector($name, $type);\n\n$name-consumer: #{$name + \"Consumer\"};\n$type-consumer: Component.$type-element;\n$selector-consumer: Component.selector($name-consumer, $type-consumer);\n\n$name-provider: #{$name + \"Provider\"};\n$type-provider: Component.$type-provider;\n$selector-provider: Component.selector($name-provider, $type-provider);\n\n// ------------------------------------------------------------------------------------------- FUNCS\n\n// Helper function that shortcuts the process of obtaining vars from the theme.\n@function vars-get($vars, $name) {\n    @if not util.is-map($vars) {\n        @error util.throwable($name: \"vars\", $type: \"map\", $value: $vars);\n    }\n    $vars: map.get($vars, $name);\n    @if not $vars {\n        @error util.throwable($name: \"var\", $type: $vars, $value: $name);\n    }\n    @return $vars;\n}\n\n// Returns a schema ready to be used by the Theme.render mixin\n// - $args:\n//   The arguments sent by the user so we can know that will be rendered.\n//   A map of prop-aliases and their respective value, which can override a preset.\n//   ie: (prop-alias<string>: prop-value-alias<string>, ...)\n// - $preset\n//   A string describing the theme that has to be applied.\n// - $props:\n//   A map containing all the info about specidied prop like:\n//   (prop-alias<string>: prop-tuple)\n//   where prop-tuple is:\n//   ie: (prop-name<string>, prop-possible-values<( prop-value-alias<string>: prop-value<string> )>)\n// - $extras\n//   A list of prop-alias that should not be rendered right away, but returned to be parsed later.\n//   ie: (<string>, <string>, ...)\n// - $presets\n// - A map of presets to be used as shortcuts for writing props.\n//   ie: (preset-name<string>: (prop-alias<string>: prop-value-alias<string>, ...), ...)\n@function data-parse($args:(), $preset: null, $props: (), $presets: (), $extras: null) {\n    // simple validation for extras\n    $is-extras-string: meta.type-of($extras) == \"string\";\n    $is-extras-list: list.length($extras) > 0 and meta.type-of($extras) == \"list\";\n    @if $extras and not $is-extras-string and not $is-extras-list {\n        @error util.throwable($name: \"extras\", $type: \"list\", $value:$extras);\n    }\n    $props: props.parse($props);\n    $args: args.parse($args, $extras);\n    $presets: presets.parse($presets, $extras);\n    @if $extras {\n        $extras: extras.parse(\n            $preset,\n            map.get($args, extras),\n            map.get($presets, extras)\n        );\n    }\n    @return (\n        schema: (\n            preset: $preset,\n            props: $props,\n            args: map.get($args, schema),\n            presets: map.get($presets, schema),\n        ),\n        extras: $extras,\n    );\n}\n\n\n// -------------------------------------------------------------------------------------------- MODS\n\n@function mod-negative($value) {\n    @return calc(#{$value} * -1);\n}\n\n// ------------------------------------------------------------------------------------------ MIXINS\n\n// Given a schema, render rules.\n@mixin render($schema, $mods: null) {\n    $schema-ref: (preset, props, args, presets);\n    $schema-key: map.keys($schema);\n    // do a simple checkup for schema\n    @if $schema-key != $schema-ref {\n        @error util.throwable($name: \"schema\", $type: $schema-ref, $value: $schema-key);\n    }\n    $args: map.get($schema, args);\n    // if a valid preset is provided, then use the preset as base and let args extend it.\n    // if the preset is empty or invalid, fail silently because it might be an \"extras\" preset.\n    $preset: map.get($schema, preset);\n    @if $preset {\n        $presets: map.get($schema, presets);\n        $current: map.get($presets, $preset);\n        @if $current {\n            $args: map.merge($current, $args);\n        }\n    }\n    // iterate argumens and resolve aliases to their corresponding prop:value\n    $props: map.get($schema, props);\n    $props-aliases: map.get($props, aliases);\n    $props-values: map.get($props, values);\n    @each $arg-key, $arg-val in $args {\n        $prop-key: map.get($props-aliases, $arg-key);\n        $values: map.get($props-values, $arg-key);\n        @if not $values {\n            @error \"Argument \\\"\" + $arg-key+ \"\\\", is an invalid prop.\";\n        }\n        // as a hidden feature, instead of complaining when an alias is not found,\n        // use the raw value instead, that way arbitrary css-values can be used.\n        // NOTE: this won't be publicly disclosed to disencourage devs to use raw-values\n        //       and use aliases instead.\n        $prop-val: map.get($values, $arg-val);\n        @if not $prop-val and $arg-val {\n            $prop-val: $arg-val;\n        }\n        @if $prop-val and $prop-key {\n            // if a mod (modifier) is sent, execute it upone current value.\n            @if $mods {\n                @each $mod-suffix in $mods {\n                    $mod-name: \"mod-#{$mod-suffix}\";\n                    @if not meta.function-exists($mod-name) {\n                        @error \"Invalid mod \\\"#{$mod-suffix}\\\".\";\n                    }\n                    $mod: meta.get-function($mod-name);\n                    $prop-val: meta.call($mod, $prop-val);\n                }\n            }\n            #{$prop-key}: $prop-val;\n        }\n    }\n}\n\n:export {\n    NAME_THEMEPLATFORM: $name;\n    TYPE_THEMEPLATFORM: $type;\n    NAME_CONSUMER_THEMEPLATFORM: $name-consumer;\n    TYPE_CONSUMER_THEMEPLATFORM: $type-consumer;\n    NAME_PROVIDER_THEMEPLATFORM: $name-provider;\n    TYPE_PROVIDER_THEMEPLATFORM: $type-provider;\n}\n","// stylelint-disable at-rule-blacklist\n@use \"../size\";\n\n$name-xs: #{\"xs\"};\n$name-sm: #{\"sm\"};\n$name-md: #{\"md\"};\n$name-lg: #{\"lg\"};\n$name-xl: #{\"xl\"};\n\n$touch-ios: \"(-webkit-overflow-scrolling: touch)\";\n$sd-ios: \"(-webkit-device-pixel-ratio: 2)\";\n$hd-ios: \"(-webkit-device-pixel-ratio: 3)\";\n\n$xs: \"(min-width: #{size.$width-xs})\";\n$sm: \"(min-width: #{size.$width-sm})\";\n$md: \"(min-width: #{size.$width-md})\";\n$lg: \"(min-width: #{size.$width-lg})\";\n$xl: \"(min-width: #{size.$width-xl})\";\n\n// iPhone 5 and below\n$xs-ios: \"(max-width: #{size.$width-xs-ios}) and (max-height: #{size.$height-xs-ios}) and #{$sd-ios}\";\n// iPhone 6, 6s, 7, 8\n$sm-ios: \"(max-width: #{size.$width-sm-ios}) and (max-height: #{size.$height-sm-ios}) and #{$sd-ios}\";\n// iPhone 10, 11Pro\n$sm-ios-pro: \"(max-width: #{size.$width-sm-ios}) and (max-height: #{size.$height-sm-ios-pro}) and #{$hd-ios}\";\n// iPhone 6+, 6s+, 7+, 8+\n$sm-ios-plus: \"(max-width: #{size.$width-sm-ios-plus}) and (max-height: #{size.$height-sm-ios-plus}) and #{$hd-ios}\";\n// iPhone 10r, 10s, 11, 11ProMax\n$sm-ios-max: \"(max-width: #{size.$width-sm-ios-plus}) and (max-height: #{size.$height-sm-ios-max})\";\n// iPhone 10r, 11\n$sm-ios-max-sd: \"#{$sm-ios-max} and #{$sd-ios}\";\n// iPhone 10s, 11ProMax\n$sm-ios-max-hd: \"#{$sm-ios-max} and #{$hd-ios}\";\n\n// -------------------------------------------------------------------------------------------------\n//                                                                                 Feature detection\n// -------------------------------------------------------------------------------------------------\n\n@mixin -screen {\n    @media only screen {\n        @content;\n    }\n}\n\n@mixin landscape {\n    @include landscape {\n        @content;\n    }\n}\n\n@mixin portrait {\n    @include portrait {\n        @content;\n    }\n}\n\n// Mobile Safari, and probably any other browser running in iOS.\n@mixin touch-ios {\n    @supports #{$touch-ios} {\n        @content;\n    }\n}\n\n@mixin sd-webkit {\n    @media #{$sd-ios} {\n        @content;\n    }\n}\n\n@mixin hd-webkit {\n    @media #{$hd-ios} {\n        @content;\n    }\n}\n\n// =================================================================================================\n//                                                                                   e[X]tra [S]mall\n//                                                          Old mobile devices and resized viewports\n// =================================================================================================\n\n@mixin xs {\n    @include -screen {\n        @media #{$xs} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------ iPhone 5 and below\n\n@mixin xs-ios {\n    @include touch-ios {\n        @include -screen {\n            @media #{$xs-ios} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin xs-ios-landscape {\n    @include xs-ios {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin xs-ios-portrait {\n    @include xs-ios {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// =================================================================================================\n//                                                                                           [SM]all\n//                                                                 Most phones and resized viewports\n// =================================================================================================\n\n@mixin sm {\n    @include -screen {\n        @media #{$sm} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------------ SMall iphone\n//                                                                                       6, 6s, 7, 8\n\n@mixin sm-ios {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-landscape {\n    @include sm-ios {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-portrait {\n    @include sm-ios {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// -------------------------------------------------------------------------------- SMall iphone PRO\n//                                                                                         10, 11Pro\n\n@mixin sm-ios-pro {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-pro} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-pro-landscape {\n    @include sm-ios-pro {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-pro-portrait {\n    @include sm-ios-pro {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------- SMall iphone PLUS\n//                                                                                   6+, 6s+, 7+, 8+\n\n@mixin sm-ios-plus {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-plus} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-plus-landscape {\n    @include sm-ios-plus {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-plus-portrait {\n    @include sm-ios-plus {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// -------------------------------------------------------------------------------- SMall iphone MAX\n//                                                                            10r, 10s, 11, 11ProMax\n\n@mixin sm-ios-max-sd {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-max-sd} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-max-sd-landscape {\n    @include sm-ios-max-sd {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-max-sd-portrait {\n    @include sm-ios-max-sd {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-max-hd {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-max-hd} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-max-hd-landscape {\n    @include sm-ios-max-hd {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-max-hd-portrait {\n    @include sm-ios-max-hd {\n        @include portrait {\n            @content;\n        }\n    }\n}\n// ------------------------------------------------------------------------------------------ MeDium\n//                                                          Most mobile devices and resized viewports\n\n@mixin md {\n    @include -screen {\n        @media #{$md} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------------------- LarGe\n//                                                                 Most tablets and resized viewports\n\n@mixin lg {\n    @include -screen {\n        @media #{$lg} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------------------- XlarGe\n//                                                                 Most widescreen notebooks and desktop\n\n@mixin xl {\n    @include -screen {\n        @media #{$xl} {\n            @content;\n        }\n    }\n}\n\n\n// TODO: this was just left here for reference, DO NOT USE THIS YET.\n@mixin sm-ios-all {\n    @include sm-ios {\n        @content;\n    }\n\n    @include iphone-lg-r {\n        @content;\n    }\n\n    @include iphone-lg-s {\n        @content;\n    }\n}\n\n:export {\n    NAME_XS: $name-xs;\n    NAME_SM: $name-sm;\n    NAME_MD: $name-md;\n    NAME_LG: $name-lg;\n}\n","@use \".\" as this;\n@use \"@app/bancor-components/Element/Button\";\n@use \"@app/bancor-components/Element/Text\";\n@use \"@app/bancor-components/Style/screen\";\n@use \"@app/bancor-components/Style/Color\";\n@use \"@app/bancor-components/Style/Font\";\n@use \"@app/bancor-components/Style/Border\";\n@use \"@app/bancor-components/Style/Layout\";\n@use \"@app/bancor-components/Style/Layout/Flex\";\n@use \"@app/bancor-components/Style/Layout/Margin\";\n@use \"@app/bancor-components/Style/Layout/Padding\";\n\n$container-width: 300px;\n$button-max-width: 170px;\n\n#{this.$selector} {\n    @include Flex.set($align: start, $justify: center);\n    @include Color.set($bg: \"white\");\n    width: 100%;\n    min-height: 100vh;\n\n    @include screen.xl {\n        @include Flex.set($align: center);\n    }\n\n    > div {\n        @include Flex.set($dir: column, $align: center, $justify: center);\n        max-width: $container-width;\n\n        & > svg {\n            @include Margin.set($top: zeta, $bottom: zeta);\n            @include screen.xl {\n                @include Margin.set($top: none);\n            }\n        }\n\n        & > h1 {\n            @include Color.set($fg: \"gray-light\");\n            @include Font.set($family: heading, $weight: medium, $size: kappa, $align: center);\n            @include Margin.set($bottom: delta);\n        }\n\n        & > h3 {\n            @include Font.set($family: heading, $weight: medium, $size: kappa, $align: center);\n        }\n\n        & > p {\n            @include Color.set($fg: \"gray-light\");\n            @include Font.set($weight: medium, $size: gamma, $align: center);\n        }\n\n        #{Button.$selector} {\n            @include Margin.set($top: zeta);\n            max-width: $button-max-width;\n            #{Text.$selector} {\n                @include Color.set($fg: \"secondary\");\n                @include Font.set($size: delta);\n            }\n        }\n    }\n}\n","@use \".\" as this;\n@use \"@app/bancor-components/Style/screen\";\n@use \"@app/bancor-components/Style/Layout/Margin\";\n@use \"@app/bancor-components/Style/Layout/Padding\";\n@use \"@app/bancor-components/Style/Color\";\n@use \"@app/bancor-components/Style/Font\";\n@use \"@app/bancor-components/Style/Border\";\n@use \"@app/bancor-components/Style/Layout/Position\";\n@use \"@app/bancor-components/Style/Shadow\";\n@use \"@app/bancor-components/Element/Image\";\n@use \"@app/bancor-components/Element/Text\";\n@use \"@app/bancor-components/Element/Button\";\n@use \"@app/bancor-components/Style/Layout/Flex\";\n\n$container-width: 589px;\n\n#{this.$selector} {\n    @include Flex.set($align: start, $justify: center);\n    @include Color.set($bg: \"white\");\n\n    @include screen.xl { \n        @include Flex.set($align: center);\n    }\n\n    > div {\n        @include Flex.set($dir: column, $align: center, $justify: center);\n        \n        header {\n            @include Padding.set($top: beta, $bottom: zeta);\n            @include Color.set($bg: teal-700);\n            @include Position.set($position: absolute, $top: none);\n            @include Flex.set($dir: column, $align: center, $justify: center);\n\n            width: 100%;\n\n            #{Image.$selector} {\n                @include Margin.set($preset: beta);\n            }\n        }\n        \n        \n        & > section {\n            gap: var(--space-2);\n            z-index: 1;\n            \n            @include Shadow.set($box: kappa);\n            @include Color.set($bg: white);\n            @include Border.set($radius: delta);\n            @include Flex.set($dir: column, $align: center, $justify: center);\n            @include Padding.set($top: beta, $bottom: beta);\n\n\n            #{Image.$selector} {\n                @include Padding.set($top: delta, $bottom: delta);\n            }\n    \n            #{Text.$selector}:nth-child(2) {\n                @include Font.set($size: delta, $weight: bold, $align: center);\n            }\n    \n            \n            div {\n                @include Border.set($style: none);\n                @include Margin.set($top: delta, $bottom: epsilon);\n                @include Font.set($weight: bold);\n                \n                div {\n                    @include Margin.set($top: none, $bottom: none);\n                }\n            }\n\n            #{Button.$selector} {\n                @include Color.set($bg: white);\n                @include Border.set($style: none);\n            }\n\n            @include screen.sm {\n                \n                @include Margin.set($top: kappa, $left: delta, $right: delta, $bottom: delta);\n                \n                #{Text.$selector}:nth-child(2) {\n                    @include Padding.set($left: zeta, $right: zeta);\n                }\n            }\n\n            @include screen.xl {\n                width: $container-width;\n                \n                #{Text.$selector}:nth-child(2) {\n                    @include Padding.set($left: sigma, $right: sigma);\n                }\n            }\n        }\n    \n    }\n}","@use \".\" as this;\n@use \"@app/bancor-components/Element/Button\";\n@use \"@app/bancor-components/Element/Text\";\n@use \"@app/bancor-components/Style/screen\";\n@use \"@app/bancor-components/Style/Color\";\n@use \"@app/bancor-components/Style/Font\";\n@use \"@app/bancor-components/Style/Layout\";\n@use \"@app/bancor-components/Style/Layout/Flex\";\n@use \"@app/bancor-components/Style/Layout/Margin\";\n\n$container-width: 300px;\n$button-max-width: 170px;\n\n#{this.$selector} {\n    @include Flex.set($align: start, $justify: center);\n    @include Color.set($bg: \"white\");\n    width: 100%;\n    min-height: 100vh;\n\n    @include screen.xl { \n        @include Flex.set($align: center);\n    }\n\n    > div {\n        @include Flex.set($dir: column, $align: center, $justify: center);\n        max-width: $container-width;\n            \n        & > svg {\n            @include Margin.set($top: zeta, $bottom: zeta);\n            @include screen.xl { \n                @include Margin.set($top: none);\n            }\n        }\n\n        & > h1 {\n            @include Color.set($fg: \"gray-light\");\n            @include Font.set($family: heading, $weight: medium, $size: kappa, $align: center);\n            @include Margin.set($bottom: delta);\n        }\n        \n        & > p {\n            @include Color.set($fg: \"gray-light\");\n            @include Font.set($weight: medium, $size: gamma, $align: center);\n        }\n        \n        #{Button.$selector} {\n            @include Margin.set($top: zeta);\n            max-width: $button-max-width;\n            #{Text.$selector} {\n                @include Color.set($fg: \"secondary\");\n                @include Font.set($size: delta);\n            }\n        }\n    }\n}"]}