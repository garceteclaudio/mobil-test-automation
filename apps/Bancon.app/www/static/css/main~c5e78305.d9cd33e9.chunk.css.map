{"version":3,"sources":["webpack://../bancor-components/Element/Text/_rules.module.scss","webpack://../bancor-components/Element/Text/_index.scss","webpack://../bancor-components/Style/global.scss","webpack://../bancor-components/Element/Splash/_rules.module.scss","webpack://../@pkg/react-storybook/Bundle/Theme/_index.scss","webpack://../bancor-components/Element/Toast/_rules.module.scss","webpack://../bancor-components/Style/screen/_index.scss","webpack://../bancor-components/Style/Layout/Flex.scss","webpack://../bancor-components/Style/size.scss","webpack://../bancor-components/Element/Loading/_rules.module.scss"],"names":[],"mappings":"AAGA,oCCMI,oBAAA,CAAA,gBAAA,CACA,qBAAA,CACA,wBAAA,CACA,mBAAA,CDNA,yCACI,oBAAA,CELR,KACI,mCAAA,CAGJ,UACI,kBAAA,CACA,iBAEI,mBAAA,CCNJ,0CAEI,aAAA,CACA,cAAA,CAEA,8CCoII,cAhBO,CDlHP,OAAA,CACA,QAAA,CACA,oBAAA,CACA,wCAAA,CEEZ,qCD6HY,cAhBO,CAgBP,UAhBO,CC3Gf,oCAAA,CACA,0CAAA,CACA,UAAA,CCqRI,0CDlRA,6DDsHI,oBAhBO,CCpGP,WAXO,CAaP,sFDkHA,QAhBO,CC7FX,gED6GI,OAhBO,CC3FP,oCAAA,CAAA,CCuQJ,gEDrQI,4FDyGA,gBAhBO,CAgBP,2BAhBO,CCtFC,iCAAA,CAAA,CAMhB,kCACI,GACI,uBAAA,CAEJ,IACI,oCAAA,CAEJ,GACI,oCAAA,CAAA,CAIR,uDDoFQ,kBAhBO,CChEf,0DDgFQ,qBAhBO,CC5Df,0DERA,YAAA,CHoFQ,6BAzCD,CAyCC,kBAhBO,CAgBP,0BAhBO,CAgBP,2BAhBO,CCxDX,4DDwEI,oCAhBO,CAgBP,wBAhBO,CCpDX,8FDoEI,2BAhBO,CAgBP,4BAhBO,CAgBP,4BAhBO,CAgBP,mCAhBO,CAgBP,eAhBO,CAgBP,qBAzCD,CAyCC,4BAhBO,CCzCX,gGE3BJ,YAAA,CHoFQ,kBAhBO,CAgBP,SAhBO,CAgBP,yCAhBO,CAgBP,iBAhBO,CCpCP,cAAA,CAIR,mEDgDQ,0BAhBO,CAgBP,2BAhBO,CEiKX,yCDjMJ,mEDgDQ,gBAhBO,CAgBP,iBAhBO,CC5BP,eG3FD,CH4FC,UAAA,CAAA,CI9FZ,uCFqDI,YAAA,CHoFQ,kBAhBO,CAgBP,sBAhBO,CKvHf,kBAAA,CACA,WAAA","file":"main~c5e78305.d9cd33e9.chunk.css","sourcesContent":["@use \".\" as this;\n@use \"@pkg/react-storybook/Component\";\n\n#{this.$selector} {\n    @include this.noDrag;\n\n    abbr {\n        text-decoration: none;\n    }\n}\n","@use \"@pkg/react-storybook/Component\";\n@use \"@app/bancor-components/Style/Layout/Position\";\n\n$name: Text;\n$type: Component.$type-element;\n$selector: Component.selector($name, $type);\n$hidden-content-space: 1px;\n\n@mixin noDrag {\n    user-select: none;\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    pointer-events: none;\n}\n\n@mixin hiddenText {\n    @include Position.set($position: absolute);\n    overflow: hidden;\n    height: $hidden-content-space;\n    width: $hidden-content-space;\n}\n\n:export {\n    NAME_TEXT: $name;\n    TYPE_TEXT: $type;\n}\n","@use \"./Color\";\n\nbody {\n    background-color: Color.get-hues(\"white\");\n}\n\nbody > main {\n    min-height: inherit;\n    + iframe {\n        // This style removes the iframe generated by webpack that blocks the application\n        pointer-events: none;\n    }\n}\n","@use \".\" as this;\n@use \"@app/bancor-components/Style/Layout/Position\";\n\n#{this.$selector} {\n    & > div {\n        //This will not be necessary when updating the DS\n        width: inherit;\n        height: inherit;\n\n        svg {\n            @include Position.set($position: fixed);\n            top: 50%;\n            left: 50%;\n            width: initial !important;\n            transform: translate(-50%, -50%) !important;\n        }\n    }\n}","@use \"sass:map\";\n@use \"sass:list\";\n@use \"sass:meta\";\n@use \"@pkg/styles/util\";\n\n@use \"../../Component\";\n@use \"./util/props\";\n@use \"./util/args\";\n@use \"./util/presets\";\n@use \"./util/extras\";\n\n$name: ThemePlatform;\n$type: Component.$type-bundle;\n$selector: Component.selector($name, $type);\n\n$name-consumer: #{$name + \"Consumer\"};\n$type-consumer: Component.$type-element;\n$selector-consumer: Component.selector($name-consumer, $type-consumer);\n\n$name-provider: #{$name + \"Provider\"};\n$type-provider: Component.$type-provider;\n$selector-provider: Component.selector($name-provider, $type-provider);\n\n// ------------------------------------------------------------------------------------------- FUNCS\n\n// Helper function that shortcuts the process of obtaining vars from the theme.\n@function vars-get($vars, $name) {\n    @if not util.is-map($vars) {\n        @error util.throwable($name: \"vars\", $type: \"map\", $value: $vars);\n    }\n    $vars: map.get($vars, $name);\n    @if not $vars {\n        @error util.throwable($name: \"var\", $type: $vars, $value: $name);\n    }\n    @return $vars;\n}\n\n// Returns a schema ready to be used by the Theme.render mixin\n// - $args:\n//   The arguments sent by the user so we can know that will be rendered.\n//   A map of prop-aliases and their respective value, which can override a preset.\n//   ie: (prop-alias<string>: prop-value-alias<string>, ...)\n// - $preset\n//   A string describing the theme that has to be applied.\n// - $props:\n//   A map containing all the info about specidied prop like:\n//   (prop-alias<string>: prop-tuple)\n//   where prop-tuple is:\n//   ie: (prop-name<string>, prop-possible-values<( prop-value-alias<string>: prop-value<string> )>)\n// - $extras\n//   A list of prop-alias that should not be rendered right away, but returned to be parsed later.\n//   ie: (<string>, <string>, ...)\n// - $presets\n// - A map of presets to be used as shortcuts for writing props.\n//   ie: (preset-name<string>: (prop-alias<string>: prop-value-alias<string>, ...), ...)\n@function data-parse($args:(), $preset: null, $props: (), $presets: (), $extras: null) {\n    // simple validation for extras\n    $is-extras-string: meta.type-of($extras) == \"string\";\n    $is-extras-list: list.length($extras) > 0 and meta.type-of($extras) == \"list\";\n    @if $extras and not $is-extras-string and not $is-extras-list {\n        @error util.throwable($name: \"extras\", $type: \"list\", $value:$extras);\n    }\n    $props: props.parse($props);\n    $args: args.parse($args, $extras);\n    $presets: presets.parse($presets, $extras);\n    @if $extras {\n        $extras: extras.parse(\n            $preset,\n            map.get($args, extras),\n            map.get($presets, extras)\n        );\n    }\n    @return (\n        schema: (\n            preset: $preset,\n            props: $props,\n            args: map.get($args, schema),\n            presets: map.get($presets, schema),\n        ),\n        extras: $extras,\n    );\n}\n\n\n// -------------------------------------------------------------------------------------------- MODS\n\n@function mod-negative($value) {\n    @return calc(#{$value} * -1);\n}\n\n// ------------------------------------------------------------------------------------------ MIXINS\n\n// Given a schema, render rules.\n@mixin render($schema, $mods: null) {\n    $schema-ref: (preset, props, args, presets);\n    $schema-key: map.keys($schema);\n    // do a simple checkup for schema\n    @if $schema-key != $schema-ref {\n        @error util.throwable($name: \"schema\", $type: $schema-ref, $value: $schema-key);\n    }\n    $args: map.get($schema, args);\n    // if a valid preset is provided, then use the preset as base and let args extend it.\n    // if the preset is empty or invalid, fail silently because it might be an \"extras\" preset.\n    $preset: map.get($schema, preset);\n    @if $preset {\n        $presets: map.get($schema, presets);\n        $current: map.get($presets, $preset);\n        @if $current {\n            $args: map.merge($current, $args);\n        }\n    }\n    // iterate argumens and resolve aliases to their corresponding prop:value\n    $props: map.get($schema, props);\n    $props-aliases: map.get($props, aliases);\n    $props-values: map.get($props, values);\n    @each $arg-key, $arg-val in $args {\n        $prop-key: map.get($props-aliases, $arg-key);\n        $values: map.get($props-values, $arg-key);\n        @if not $values {\n            @error \"Argument \\\"\" + $arg-key+ \"\\\", is an invalid prop.\";\n        }\n        // as a hidden feature, instead of complaining when an alias is not found,\n        // use the raw value instead, that way arbitrary css-values can be used.\n        // NOTE: this won't be publicly disclosed to disencourage devs to use raw-values\n        //       and use aliases instead.\n        $prop-val: map.get($values, $arg-val);\n        @if not $prop-val and $arg-val {\n            $prop-val: $arg-val;\n        }\n        @if $prop-val and $prop-key {\n            // if a mod (modifier) is sent, execute it upone current value.\n            @if $mods {\n                @each $mod-suffix in $mods {\n                    $mod-name: \"mod-#{$mod-suffix}\";\n                    @if not meta.function-exists($mod-name) {\n                        @error \"Invalid mod \\\"#{$mod-suffix}\\\".\";\n                    }\n                    $mod: meta.get-function($mod-name);\n                    $prop-val: meta.call($mod, $prop-val);\n                }\n            }\n            #{$prop-key}: $prop-val;\n        }\n    }\n}\n\n:export {\n    NAME_THEMEPLATFORM: $name;\n    TYPE_THEMEPLATFORM: $type;\n    NAME_CONSUMER_THEMEPLATFORM: $name-consumer;\n    TYPE_CONSUMER_THEMEPLATFORM: $type-consumer;\n    NAME_PROVIDER_THEMEPLATFORM: $name-provider;\n    TYPE_PROVIDER_THEMEPLATFORM: $type-provider;\n}\n","@use \".\" as this;\n@use \"@app/bancor-components/Element/Button\";\n@use \"@app/bancor-components/Element/Text\";\n@use \"@app/bancor-components/Style/screen\";\n@use \"@app/bancor-components/Style/size\";\n@use \"@app/bancor-components/Style/Color\";\n@use \"@app/bancor-components/Style/Font\";\n@use \"@app/bancor-components/Style/Border\";\n@use \"@app/bancor-components/Style/Layout\";\n@use \"@app/bancor-components/Style/Layout/Flex\";\n@use \"@app/bancor-components/Style/Layout/Margin\";\n@use \"@app/bancor-components/Style/Layout/Padding\";\n@use \"@app/bancor-components/Style/Layout/Position\";\n\n$alert-home-width: 328px;\n\n#{this.$selector} {\n    @include Position.set($position: fixed, $z-index: omega);\n    transform: translateY(Layout.get-space(delta));\n    animation: rebounce 0.25s ease;\n    width: Layout.get-width(kappa);\n\n    @include screen.xl {\n        &.toastHome {\n            @include Position.set($right: delta);\n            width: $alert-home-width;\n\n            & > .alertHome {\n                @include Margin.set($preset: none);\n            }\n        }\n\n        &.toastNotHome {\n            @include Position.set($right: none);\n            width: calc(100% - var(--width-menu));\n\n            & > .alertNotHome {\n                @include screen.xl {\n                    @include Margin.set($left: auto, $right: delta);\n                    width: calc(100% - Layout.get-space(\"zeta\"));\n                }\n            }\n        }\n    }\n\n    @keyframes rebounce {\n        0% {\n            transform: translateY(0);\n        }\n        50% {\n            transform: translateY(Layout.get-space(epsilon));\n        }\n        100% {\n            transform: translateY(Layout.get-space(delta));\n        }\n    }\n\n    &.top {\n        @include Position.set($top: beta);\n    }\n\n    &.bottom {\n        @include Position.set($bottom: epsilon);\n    }\n\n    & > .alert {\n        @include Flex.set($justify: space-between, $align: center);\n        @include Margin.set($left: alpha, $right: alpha);\n\n        b {\n            @include Font.set($weight: black, $transform: lower);\n        }\n\n        #{Text.$selector} {\n            @include Padding.set($left: alpha, $right: alpha);\n            @include Color.set($fg: \"gray-dark\");\n            @include Font.set(\n                $family: \"default\",\n                $weight: default,\n                $align: flex-start,\n                $size: gamma\n            );\n        }\n\n        #{Button.$selector} {\n            @include Flex.set($align: center);\n            @include Padding.set($preset: none);\n            @include Color.set($bg: \"transparent\");\n            @include Border.set($style: default);\n            cursor: pointer;\n        }\n    }\n\n    & > .alertLoggedOut {\n        @include Margin.set($left: alpha, $right: alpha);\n        @include screen.lg {\n            @include Margin.set($left: auto, $right: auto);\n            max-width: size.$width-md;\n            width: initial;\n        }\n    }\n}\n","// stylelint-disable at-rule-blacklist\n@use \"../size\";\n\n$name-xs: #{\"xs\"};\n$name-sm: #{\"sm\"};\n$name-md: #{\"md\"};\n$name-lg: #{\"lg\"};\n$name-xl: #{\"xl\"};\n\n$touch-ios: \"(-webkit-overflow-scrolling: touch)\";\n$sd-ios: \"(-webkit-device-pixel-ratio: 2)\";\n$hd-ios: \"(-webkit-device-pixel-ratio: 3)\";\n\n$xs: \"(min-width: #{size.$width-xs})\";\n$sm: \"(min-width: #{size.$width-sm})\";\n$md: \"(min-width: #{size.$width-md})\";\n$lg: \"(min-width: #{size.$width-lg})\";\n$xl: \"(min-width: #{size.$width-xl})\";\n\n// iPhone 5 and below\n$xs-ios: \"(max-width: #{size.$width-xs-ios}) and (max-height: #{size.$height-xs-ios}) and #{$sd-ios}\";\n// iPhone 6, 6s, 7, 8\n$sm-ios: \"(max-width: #{size.$width-sm-ios}) and (max-height: #{size.$height-sm-ios}) and #{$sd-ios}\";\n// iPhone 10, 11Pro\n$sm-ios-pro: \"(max-width: #{size.$width-sm-ios}) and (max-height: #{size.$height-sm-ios-pro}) and #{$hd-ios}\";\n// iPhone 6+, 6s+, 7+, 8+\n$sm-ios-plus: \"(max-width: #{size.$width-sm-ios-plus}) and (max-height: #{size.$height-sm-ios-plus}) and #{$hd-ios}\";\n// iPhone 10r, 10s, 11, 11ProMax\n$sm-ios-max: \"(max-width: #{size.$width-sm-ios-plus}) and (max-height: #{size.$height-sm-ios-max})\";\n// iPhone 10r, 11\n$sm-ios-max-sd: \"#{$sm-ios-max} and #{$sd-ios}\";\n// iPhone 10s, 11ProMax\n$sm-ios-max-hd: \"#{$sm-ios-max} and #{$hd-ios}\";\n\n// -------------------------------------------------------------------------------------------------\n//                                                                                 Feature detection\n// -------------------------------------------------------------------------------------------------\n\n@mixin -screen {\n    @media only screen {\n        @content;\n    }\n}\n\n@mixin landscape {\n    @include landscape {\n        @content;\n    }\n}\n\n@mixin portrait {\n    @include portrait {\n        @content;\n    }\n}\n\n// Mobile Safari, and probably any other browser running in iOS.\n@mixin touch-ios {\n    @supports #{$touch-ios} {\n        @content;\n    }\n}\n\n@mixin sd-webkit {\n    @media #{$sd-ios} {\n        @content;\n    }\n}\n\n@mixin hd-webkit {\n    @media #{$hd-ios} {\n        @content;\n    }\n}\n\n// =================================================================================================\n//                                                                                   e[X]tra [S]mall\n//                                                          Old mobile devices and resized viewports\n// =================================================================================================\n\n@mixin xs {\n    @include -screen {\n        @media #{$xs} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------ iPhone 5 and below\n\n@mixin xs-ios {\n    @include touch-ios {\n        @include -screen {\n            @media #{$xs-ios} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin xs-ios-landscape {\n    @include xs-ios {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin xs-ios-portrait {\n    @include xs-ios {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// =================================================================================================\n//                                                                                           [SM]all\n//                                                                 Most phones and resized viewports\n// =================================================================================================\n\n@mixin sm {\n    @include -screen {\n        @media #{$sm} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------------ SMall iphone\n//                                                                                       6, 6s, 7, 8\n\n@mixin sm-ios {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-landscape {\n    @include sm-ios {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-portrait {\n    @include sm-ios {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// -------------------------------------------------------------------------------- SMall iphone PRO\n//                                                                                         10, 11Pro\n\n@mixin sm-ios-pro {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-pro} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-pro-landscape {\n    @include sm-ios-pro {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-pro-portrait {\n    @include sm-ios-pro {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------- SMall iphone PLUS\n//                                                                                   6+, 6s+, 7+, 8+\n\n@mixin sm-ios-plus {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-plus} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-plus-landscape {\n    @include sm-ios-plus {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-plus-portrait {\n    @include sm-ios-plus {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// -------------------------------------------------------------------------------- SMall iphone MAX\n//                                                                            10r, 10s, 11, 11ProMax\n\n@mixin sm-ios-max-sd {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-max-sd} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-max-sd-landscape {\n    @include sm-ios-max-sd {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-max-sd-portrait {\n    @include sm-ios-max-sd {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-max-hd {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-max-hd} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-max-hd-landscape {\n    @include sm-ios-max-hd {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-max-hd-portrait {\n    @include sm-ios-max-hd {\n        @include portrait {\n            @content;\n        }\n    }\n}\n// ------------------------------------------------------------------------------------------ MeDium\n//                                                          Most mobile devices and resized viewports\n\n@mixin md {\n    @include -screen {\n        @media #{$md} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------------------- LarGe\n//                                                                 Most tablets and resized viewports\n\n@mixin lg {\n    @include -screen {\n        @media #{$lg} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------------------- XlarGe\n//                                                                 Most widescreen notebooks and desktop\n\n@mixin xl {\n    @include -screen {\n        @media #{$xl} {\n            @content;\n        }\n    }\n}\n\n\n// TODO: this was just left here for reference, DO NOT USE THIS YET.\n@mixin sm-ios-all {\n    @include sm-ios {\n        @content;\n    }\n\n    @include iphone-lg-r {\n        @content;\n    }\n\n    @include iphone-lg-s {\n        @content;\n    }\n}\n\n:export {\n    NAME_XS: $name-xs;\n    NAME_SM: $name-sm;\n    NAME_MD: $name-md;\n    NAME_LG: $name-lg;\n}\n","@use \"sass:map\";\n@use \"sass:meta\";\n@use \"@pkg/react-storybook/Bundle/Theme\";\n\n$props: (\n    justify: (justify-content, (\n        start: flex-start,\n        end: flex-end,\n        center: center,\n        between: space-between,\n        around: space-around,\n        evenly: space-evenly,\n    )),\n    align: (align-items, (\n        default: stretch,\n        start: flex-start,\n        end: flex-end,\n        center: center,\n        base: baseline,\n    )),\n    wrap: (flex-wrap, (\n        default: nowrap,\n        wrap: wrap,\n        reverse: wrap-reverse,\n    )),\n    grow: (flex-grow, (\n        default: auto,\n        none: 0,\n        alpha: 1,\n        beta: 2,\n        gamma: 3\n    )),\n    shrink: (flex-shrink, (\n        default: initial,\n        none: 0,\n        alpha: 1,\n        beta: 2,\n        gamma: 3\n    )),\n    dir: (flex-direction, (\n        default: row,\n        column: column,\n        row-reverse: row-reverse,\n        column-reverse: column-reverse,\n    )),\n);\n\n$presets: (\n    default: (\n        justify: default,\n        align: default,\n        wrap: default,\n    )\n);\n\n@mixin set($preset: null, $args...) {\n    $data: Theme.data-parse(meta.keywords($args), $preset, $props, $presets);\n    display: flex;\n    @include Theme.render(map.get($data, schema));\n}\n","$step: 1px;\n\n$icon: 14px;\n\n$width-xs: 320px;\n$width-sm: 372px;\n$width-md: 640px;\n$width-lg: 768px;\n$width-xl: 1024px;\n\n$width-md-page-external-dash: 450px;\n$width-md-page-external-form: 640px;\n\n$width-xs-ios: 320px; // 5 and below\n$width-sm-ios: 375px; // 6, 6s, 7, 8, 10, 11Pro\n$width-sm-ios-plus: 414px; // 6+, 6s+, 7+, 8+, 10r, 10s, 11, 11ProMax\n\n$width-menu: 240px;\n\n$height-header-sm: 60px;\n$height-header-md: 8.4rem;\n\n$height-xs-ios: 568px; // 5 and below\n$height-sm-ios: 667px; // 6, 6s, 7, 8\n$height-sm-ios-plus: 736px; // 6+, 6s+, 7+, 8+\n$height-sm-ios-pro: 812px; // 10, 11Pro\n$height-sm-ios-max: 896px; // 10r, 10s, 11, 11ProMax\n\n@function decrease($size) {\n    @return $size + ($step * -1);\n}\n\n@function increase($size) {\n    @return $size + $step;\n}\n","@use \".\" as this;\n@use \"@app/bancor-components/Style/Layout\";\n@use \"@app/bancor-components/Style/Layout/Flex\";\n\n#{this.$selector} {\n    @include Flex.set($align: center, $justify: center);\n    min-height: inherit;\n    height: Layout.get-height(alpha);\n}\n"]}