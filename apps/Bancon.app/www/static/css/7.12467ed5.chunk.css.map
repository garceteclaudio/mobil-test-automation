{"version":3,"sources":["webpack://../bancor-components/Container/BaseInternal/_Header/_rules.module.scss","webpack://../bancor-components/Style/Layout/Flex.scss","webpack://../@pkg/react-storybook/Bundle/Theme/_index.scss","webpack://../bancor-components/Container/BaseInternal/_index.scss","webpack://../bancor-components/Style/screen/_index.scss","webpack://../bancor-components/Container/BaseInternal/_Footer/_rules.module.scss","webpack://../bancor-components/Container/BaseInternal/_Footer/_index.scss","webpack://../bancor-components/Element/Image/_index.scss"],"names":[],"mappings":"AAeA,2DC0CI,YAAA,CCoFQ,kBAhBO,CAgBP,6BAhBO,CF5Gf,WGRU,CHUV,iGE0HQ,iBAhBO,CFtGf,+FEsHQ,SAhBO,CFnGX,qIEmHI,yCAhBO,CAgBP,QAhBO,CDpEf,YAAA,CCoFQ,0BAhBO,CF/FP,yBAAA,CAEA,kKACI,uCAAA,CI0FR,yCJjGA,qIC+BJ,YAAA,CCoFQ,sBAhBO,CFvFH,sCAAA,CAAA,CIwPR,yCJpQA,qIAgBQ,cAAA,CAAA,CAIA,8IE+FJ,yBAhBO,CF1EP,sRE0FA,eAhBO,CFtEH,0REsFJ,wBAhBO,CFjEP,mJACI,cAAA,CAKZ,kFCTA,YAAA,CCoFQ,kBAhBO,CAgBP,SAhBO,CAgBP,gBAhBO,CAgBP,2BAhBO,CF3CX,eAAA,CAZA,yGACI,uCAAA,CIbR,4CJYI,yGEuEI,cAhBO,CAAA,CEiKX,yCJxNA,yGAQQ,cAAA,CAAA,CAOR,sFC5BJ,YAAA,CCoFQ,aAhBO,CFnCX,sHEmDI,wBAhBO,CAgBP,0BAhBO,CAgBP,4BAhBO,CAgBP,eAzCD,CAyCC,mCAhBO,CAgBP,yBAhBO,CAgBP,kBAhBO,CFzBP,eAAA,CACA,sBAAA,CAKJ,4FEmCI,SAhBO,CFjBP,gGEiCA,SAhBO,CFZX,sHE4BI,YAhBO,CFPf,kFC7DA,YAAA,CCoFQ,6BAhBO,CAgBP,WAhBO,CFHf,iGCjEA,YAAA,CCoFQ,WAhBO,CE4KX,0CJ1RR,2DC0CI,YAAA,CCoFQ,wBAhBO,CFIX,4FEYI,iBAhBO,CFQX,wFEQI,aAhBO,CFWP,4FEKA,SAhBO,CFoBX,oKCxFJ,YAAA,CCoFQ,WAhBO,CAAA,CG1Gf,mEH0HQ,cAhBO,CAgBP,QAhBO,CAgBP,SAhBO,CAgBP,aAhBO,CAgBP,6BAhBO,CAgBP,2BAhBO,CAgBP,4BAhBO,CGvGX,UAAA,CAEA,uEJiCJ,YAAA,CCoFQ,kBAhBO,CAgBP,6BAhBO,CAgBP,WAhBO,CAgBP,sBAhBO,CGlGP,cAAA,CAEA,2GJ4BR,YAAA,CCoFQ,qBAhBO,CAgBP,kBAhBO,CAgBP,sBAhBO,CG7FH,+IH6GJ,6BAhBO,CAgBP,4BAhBO,CAgBP,eAzCD,CAyCC,mCAhBO,CAgBP,kBAhBO,CGlFC,oKHkGR,0BAhBO,CG9EC,0JH8FR,qCAhBO,CAgBP,oCAhBO,CG3EK,SAAA,CACA,UC3CI,CDgDhB,gGHqFA,qCAhBO,CAgBP,iBAhBO,CAgBP,oCAhBO,CDpEf,YAAA,CCoFQ,kBAhBO,CAgBP,sBAhBO,CAgBP,SAhBO,CAgBP,iBAhBO,CG/DH,mBAAA,CACA,oBAAA,CAEA,qIH4EJ,iBAhBO,CAgBP,SAhBO,CDpEf,YAAA,CCoFQ,kBAhBO,CAgBP,sBAhBO,CAgBP,kCAhBO,CAgBP,oCAhBO,CAgBP,mCAhBO,CKzGf,qBAAA,CLyHQ,qDAhBO,CGzDC,mDArDD,CAsDC,QAAA,CAIR,2FJhBR,YAAA,CCoFQ,qBAhBO,CAgBP,kBAhBO,CAgBP,sBAhBO,CAgBP,yCAhBO,CAgBP,SAhBO,CAgBP,iBAhBO,CG/CH,cAAA,CAEA,+HH6DJ,6BAhBO,CAgBP,4BAhBO,CAgBP,eAzCD,CAyCC,mCAhBO,CAgBP,kBAhBO,CGlCP,8EACI,UAAA,CHiDJ,iBAhBO,CAgBP,KAhBO,CAgBP,MAhBO,CAgBP,OAhBO,CAgBP,QAhBO,CAgBP,UAzCD,CAyCC,sCAhBO,CAgBP,oCAhBO,CAgBP,4BAhBO,CGpBH,iBAAA,CACA,WChGY,CDiGZ,WCpGA","file":"7.12467ed5.chunk.css","sourcesContent":["@use \"..\" as super;\n@use \".\" as this;\n@use \"@app/bancor-components/Element/Button\";\n@use \"@app/bancor-components/Element/Text\";\n@use \"@app/bancor-components/Element/Form\";\n@use \"@app/bancor-components/Style/screen\";\n@use \"@app/bancor-components/Style/Color\";\n@use \"@app/bancor-components/Style/Shadow\";\n@use \"@app/bancor-components/Style/Font\";\n@use \"@app/bancor-components/Style/Layout\";\n@use \"@app/bancor-components/Style/Layout/Flex\";\n@use \"@app/bancor-components/Style/Layout/Margin\";\n@use \"@app/bancor-components/Style/Layout/Position\";\n@use \"@app/bancor-components/Style/Layout/Display\";\n\n#{this.$selector} {\n    @include Flex.set($align: center, $justify: between);\n    height: super.$size-header;\n\n    & > #{Button.$selector} {\n        @include Margin.set($right: auto);\n    }\n\n    #{Form.$selector} {\n        @include Position.set($z-index: beta);\n\n        #{Button.$selector} {\n            @include Color.set($bg: \"transparent\");\n            @include Margin.set($preset: none);\n            @include Flex.set($justify: start);\n            max-width: Layout.get-space(\"lambda\");\n\n            &.dropdownButton {\n                max-width: calc(Layout.get-width(\"sigma\") - Layout.get-space(sigma));\n            }\n\n            @include screen.sm {\n                @include Flex.set($justify: center);\n                max-width: calc(Layout.get-width(\"sigma\") - Layout.get-space(kappa));\n            }\n\n            @include screen.lg {\n                max-width: initial;\n            }\n\n            & > svg {\n                path {\n                    @include Color.set($svg-fg: \"white\");\n                }\n            }\n\n            &:focus,\n            &:hover {\n                @include Shadow.set($style: none);\n\n                & * {\n                    @include Color.set($fg: \"white\");\n                }\n            }\n\n            &:focus-visible {\n                outline: revert;\n            }\n        }\n    }\n\n    .greeter {\n        @include Flex.set($align: center);\n        @include Position.set($z-index: beta);\n        @include Margin.set($left: auto, $right: alpha);\n        &.maxWidth {\n            max-width: calc(Layout.get-width(\"sigma\") - Layout.get-space(sigma));\n\n            @include screen.touch-ios {\n                @include Margin.set($right: none);\n            }\n\n            @include screen.lg {\n                max-width: initial;\n            }\n        }\n\n        overflow: hidden;\n\n        // Avatar\n        & > div {\n            @include Flex.set($shrink: none);\n        }\n\n        // Name\n        #{Text.$selector} {\n            @include Color.set($fg: \"white\");\n            @include Margin.set($left: alpha);\n            @include Font.set(\n                $size: gamma,\n                $weight: normal,\n                $family: \"default\",\n                $transform: \"caps\",\n                $space: \"nowrap\"\n            );\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n    }\n\n    .notifications {\n        & > div {\n            @include Position.set($z-index: alpha);\n            > div {\n                @include Position.set($z-index: delta);\n            }\n        }\n\n        .emptyBadge > div {\n            @include Display.set($display: none);\n        }\n    }\n\n    .actions {\n        @include Flex.set($justify: between, $grow: alpha);\n    }\n\n    .actionsWithBackHandler {\n        @include Flex.set($grow: none);\n    }\n\n    @include screen.xl {\n        @include Flex.set($justify: end);\n\n        .navigationButtons {\n            @include Margin.set($right: auto);\n        }\n\n        .notifications {\n            @include Margin.set($left: none);\n\n            & > div {\n                @include Position.set($z-index: theta);\n            }\n        }\n\n        .actions {\n            @include Flex.set($grow: none);\n        }\n\n        .greeter {\n            @include Flex.set($grow: none);\n        }\n    }\n}\n","@use \"sass:map\";\n@use \"sass:meta\";\n@use \"@pkg/react-storybook/Bundle/Theme\";\n\n$props: (\n    justify: (justify-content, (\n        start: flex-start,\n        end: flex-end,\n        center: center,\n        between: space-between,\n        around: space-around,\n        evenly: space-evenly,\n    )),\n    align: (align-items, (\n        default: stretch,\n        start: flex-start,\n        end: flex-end,\n        center: center,\n        base: baseline,\n    )),\n    wrap: (flex-wrap, (\n        default: nowrap,\n        wrap: wrap,\n        reverse: wrap-reverse,\n    )),\n    grow: (flex-grow, (\n        default: auto,\n        none: 0,\n        alpha: 1,\n        beta: 2,\n        gamma: 3\n    )),\n    shrink: (flex-shrink, (\n        default: initial,\n        none: 0,\n        alpha: 1,\n        beta: 2,\n        gamma: 3\n    )),\n    dir: (flex-direction, (\n        default: row,\n        column: column,\n        row-reverse: row-reverse,\n        column-reverse: column-reverse,\n    )),\n);\n\n$presets: (\n    default: (\n        justify: default,\n        align: default,\n        wrap: default,\n    )\n);\n\n@mixin set($preset: null, $args...) {\n    $data: Theme.data-parse(meta.keywords($args), $preset, $props, $presets);\n    display: flex;\n    @include Theme.render(map.get($data, schema));\n}\n","@use \"sass:map\";\n@use \"sass:list\";\n@use \"sass:meta\";\n@use \"@pkg/styles/util\";\n\n@use \"../../Component\";\n@use \"./util/props\";\n@use \"./util/args\";\n@use \"./util/presets\";\n@use \"./util/extras\";\n\n$name: ThemePlatform;\n$type: Component.$type-bundle;\n$selector: Component.selector($name, $type);\n\n$name-consumer: #{$name + \"Consumer\"};\n$type-consumer: Component.$type-element;\n$selector-consumer: Component.selector($name-consumer, $type-consumer);\n\n$name-provider: #{$name + \"Provider\"};\n$type-provider: Component.$type-provider;\n$selector-provider: Component.selector($name-provider, $type-provider);\n\n// ------------------------------------------------------------------------------------------- FUNCS\n\n// Helper function that shortcuts the process of obtaining vars from the theme.\n@function vars-get($vars, $name) {\n    @if not util.is-map($vars) {\n        @error util.throwable($name: \"vars\", $type: \"map\", $value: $vars);\n    }\n    $vars: map.get($vars, $name);\n    @if not $vars {\n        @error util.throwable($name: \"var\", $type: $vars, $value: $name);\n    }\n    @return $vars;\n}\n\n// Returns a schema ready to be used by the Theme.render mixin\n// - $args:\n//   The arguments sent by the user so we can know that will be rendered.\n//   A map of prop-aliases and their respective value, which can override a preset.\n//   ie: (prop-alias<string>: prop-value-alias<string>, ...)\n// - $preset\n//   A string describing the theme that has to be applied.\n// - $props:\n//   A map containing all the info about specidied prop like:\n//   (prop-alias<string>: prop-tuple)\n//   where prop-tuple is:\n//   ie: (prop-name<string>, prop-possible-values<( prop-value-alias<string>: prop-value<string> )>)\n// - $extras\n//   A list of prop-alias that should not be rendered right away, but returned to be parsed later.\n//   ie: (<string>, <string>, ...)\n// - $presets\n// - A map of presets to be used as shortcuts for writing props.\n//   ie: (preset-name<string>: (prop-alias<string>: prop-value-alias<string>, ...), ...)\n@function data-parse($args:(), $preset: null, $props: (), $presets: (), $extras: null) {\n    // simple validation for extras\n    $is-extras-string: meta.type-of($extras) == \"string\";\n    $is-extras-list: list.length($extras) > 0 and meta.type-of($extras) == \"list\";\n    @if $extras and not $is-extras-string and not $is-extras-list {\n        @error util.throwable($name: \"extras\", $type: \"list\", $value:$extras);\n    }\n    $props: props.parse($props);\n    $args: args.parse($args, $extras);\n    $presets: presets.parse($presets, $extras);\n    @if $extras {\n        $extras: extras.parse(\n            $preset,\n            map.get($args, extras),\n            map.get($presets, extras)\n        );\n    }\n    @return (\n        schema: (\n            preset: $preset,\n            props: $props,\n            args: map.get($args, schema),\n            presets: map.get($presets, schema),\n        ),\n        extras: $extras,\n    );\n}\n\n\n// -------------------------------------------------------------------------------------------- MODS\n\n@function mod-negative($value) {\n    @return calc(#{$value} * -1);\n}\n\n// ------------------------------------------------------------------------------------------ MIXINS\n\n// Given a schema, render rules.\n@mixin render($schema, $mods: null) {\n    $schema-ref: (preset, props, args, presets);\n    $schema-key: map.keys($schema);\n    // do a simple checkup for schema\n    @if $schema-key != $schema-ref {\n        @error util.throwable($name: \"schema\", $type: $schema-ref, $value: $schema-key);\n    }\n    $args: map.get($schema, args);\n    // if a valid preset is provided, then use the preset as base and let args extend it.\n    // if the preset is empty or invalid, fail silently because it might be an \"extras\" preset.\n    $preset: map.get($schema, preset);\n    @if $preset {\n        $presets: map.get($schema, presets);\n        $current: map.get($presets, $preset);\n        @if $current {\n            $args: map.merge($current, $args);\n        }\n    }\n    // iterate argumens and resolve aliases to their corresponding prop:value\n    $props: map.get($schema, props);\n    $props-aliases: map.get($props, aliases);\n    $props-values: map.get($props, values);\n    @each $arg-key, $arg-val in $args {\n        $prop-key: map.get($props-aliases, $arg-key);\n        $values: map.get($props-values, $arg-key);\n        @if not $values {\n            @error \"Argument \\\"\" + $arg-key+ \"\\\", is an invalid prop.\";\n        }\n        // as a hidden feature, instead of complaining when an alias is not found,\n        // use the raw value instead, that way arbitrary css-values can be used.\n        // NOTE: this won't be publicly disclosed to disencourage devs to use raw-values\n        //       and use aliases instead.\n        $prop-val: map.get($values, $arg-val);\n        @if not $prop-val and $arg-val {\n            $prop-val: $arg-val;\n        }\n        @if $prop-val and $prop-key {\n            // if a mod (modifier) is sent, execute it upone current value.\n            @if $mods {\n                @each $mod-suffix in $mods {\n                    $mod-name: \"mod-#{$mod-suffix}\";\n                    @if not meta.function-exists($mod-name) {\n                        @error \"Invalid mod \\\"#{$mod-suffix}\\\".\";\n                    }\n                    $mod: meta.get-function($mod-name);\n                    $prop-val: meta.call($mod, $prop-val);\n                }\n            }\n            #{$prop-key}: $prop-val;\n        }\n    }\n}\n\n:export {\n    NAME_THEMEPLATFORM: $name;\n    TYPE_THEMEPLATFORM: $type;\n    NAME_CONSUMER_THEMEPLATFORM: $name-consumer;\n    TYPE_CONSUMER_THEMEPLATFORM: $type-consumer;\n    NAME_PROVIDER_THEMEPLATFORM: $name-provider;\n    TYPE_PROVIDER_THEMEPLATFORM: $type-provider;\n}\n","@use \"@pkg/react-storybook/Component\";\n@use \"@app/bancor-components/Style/Layout\";\n\n$name: BaseInternalContainer;\n$type: Component.$type-container;\n$selector: Component.selector($name, $type);\n\n// top and bottom space + buggest icon size.\n$size-header-icon: Layout.get-size(gamma);\n$size-header: 54px;\n$size-footer: Layout.get-space(iota);\n\n:export {\n    NAME_BASEINTERNAL_CONTAINER: $name;\n    TYPE_BASEINTERNAL_CONTAINER: $type;\n}\n","// stylelint-disable at-rule-blacklist\n@use \"../size\";\n\n$name-xs: #{\"xs\"};\n$name-sm: #{\"sm\"};\n$name-md: #{\"md\"};\n$name-lg: #{\"lg\"};\n$name-xl: #{\"xl\"};\n\n$touch-ios: \"(-webkit-overflow-scrolling: touch)\";\n$sd-ios: \"(-webkit-device-pixel-ratio: 2)\";\n$hd-ios: \"(-webkit-device-pixel-ratio: 3)\";\n\n$xs: \"(min-width: #{size.$width-xs})\";\n$sm: \"(min-width: #{size.$width-sm})\";\n$md: \"(min-width: #{size.$width-md})\";\n$lg: \"(min-width: #{size.$width-lg})\";\n$xl: \"(min-width: #{size.$width-xl})\";\n\n// iPhone 5 and below\n$xs-ios: \"(max-width: #{size.$width-xs-ios}) and (max-height: #{size.$height-xs-ios}) and #{$sd-ios}\";\n// iPhone 6, 6s, 7, 8\n$sm-ios: \"(max-width: #{size.$width-sm-ios}) and (max-height: #{size.$height-sm-ios}) and #{$sd-ios}\";\n// iPhone 10, 11Pro\n$sm-ios-pro: \"(max-width: #{size.$width-sm-ios}) and (max-height: #{size.$height-sm-ios-pro}) and #{$hd-ios}\";\n// iPhone 6+, 6s+, 7+, 8+\n$sm-ios-plus: \"(max-width: #{size.$width-sm-ios-plus}) and (max-height: #{size.$height-sm-ios-plus}) and #{$hd-ios}\";\n// iPhone 10r, 10s, 11, 11ProMax\n$sm-ios-max: \"(max-width: #{size.$width-sm-ios-plus}) and (max-height: #{size.$height-sm-ios-max})\";\n// iPhone 10r, 11\n$sm-ios-max-sd: \"#{$sm-ios-max} and #{$sd-ios}\";\n// iPhone 10s, 11ProMax\n$sm-ios-max-hd: \"#{$sm-ios-max} and #{$hd-ios}\";\n\n// -------------------------------------------------------------------------------------------------\n//                                                                                 Feature detection\n// -------------------------------------------------------------------------------------------------\n\n@mixin -screen {\n    @media only screen {\n        @content;\n    }\n}\n\n@mixin landscape {\n    @include landscape {\n        @content;\n    }\n}\n\n@mixin portrait {\n    @include portrait {\n        @content;\n    }\n}\n\n// Mobile Safari, and probably any other browser running in iOS.\n@mixin touch-ios {\n    @supports #{$touch-ios} {\n        @content;\n    }\n}\n\n@mixin sd-webkit {\n    @media #{$sd-ios} {\n        @content;\n    }\n}\n\n@mixin hd-webkit {\n    @media #{$hd-ios} {\n        @content;\n    }\n}\n\n// =================================================================================================\n//                                                                                   e[X]tra [S]mall\n//                                                          Old mobile devices and resized viewports\n// =================================================================================================\n\n@mixin xs {\n    @include -screen {\n        @media #{$xs} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------ iPhone 5 and below\n\n@mixin xs-ios {\n    @include touch-ios {\n        @include -screen {\n            @media #{$xs-ios} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin xs-ios-landscape {\n    @include xs-ios {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin xs-ios-portrait {\n    @include xs-ios {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// =================================================================================================\n//                                                                                           [SM]all\n//                                                                 Most phones and resized viewports\n// =================================================================================================\n\n@mixin sm {\n    @include -screen {\n        @media #{$sm} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------------ SMall iphone\n//                                                                                       6, 6s, 7, 8\n\n@mixin sm-ios {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-landscape {\n    @include sm-ios {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-portrait {\n    @include sm-ios {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// -------------------------------------------------------------------------------- SMall iphone PRO\n//                                                                                         10, 11Pro\n\n@mixin sm-ios-pro {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-pro} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-pro-landscape {\n    @include sm-ios-pro {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-pro-portrait {\n    @include sm-ios-pro {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------- SMall iphone PLUS\n//                                                                                   6+, 6s+, 7+, 8+\n\n@mixin sm-ios-plus {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-plus} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-plus-landscape {\n    @include sm-ios-plus {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-plus-portrait {\n    @include sm-ios-plus {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n// -------------------------------------------------------------------------------- SMall iphone MAX\n//                                                                            10r, 10s, 11, 11ProMax\n\n@mixin sm-ios-max-sd {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-max-sd} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-max-sd-landscape {\n    @include sm-ios-max-sd {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-max-sd-portrait {\n    @include sm-ios-max-sd {\n        @include portrait {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-max-hd {\n    @include touch-ios {\n        @include -screen {\n            @media #{$sm-ios-max-hd} {\n                @content;\n            }\n        }\n    }\n}\n\n@mixin sm-ios-max-hd-landscape {\n    @include sm-ios-max-hd {\n        @include landscape {\n            @content;\n        }\n    }\n}\n\n@mixin sm-ios-max-hd-portrait {\n    @include sm-ios-max-hd {\n        @include portrait {\n            @content;\n        }\n    }\n}\n// ------------------------------------------------------------------------------------------ MeDium\n//                                                          Most mobile devices and resized viewports\n\n@mixin md {\n    @include -screen {\n        @media #{$md} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------------------- LarGe\n//                                                                 Most tablets and resized viewports\n\n@mixin lg {\n    @include -screen {\n        @media #{$lg} {\n            @content;\n        }\n    }\n}\n\n// ------------------------------------------------------------------------------------------- XlarGe\n//                                                                 Most widescreen notebooks and desktop\n\n@mixin xl {\n    @include -screen {\n        @media #{$xl} {\n            @content;\n        }\n    }\n}\n\n\n// TODO: this was just left here for reference, DO NOT USE THIS YET.\n@mixin sm-ios-all {\n    @include sm-ios {\n        @content;\n    }\n\n    @include iphone-lg-r {\n        @content;\n    }\n\n    @include iphone-lg-s {\n        @content;\n    }\n}\n\n:export {\n    NAME_XS: $name-xs;\n    NAME_SM: $name-sm;\n    NAME_MD: $name-md;\n    NAME_LG: $name-lg;\n}\n","@use \"sass:math\";\n@use \".\" as this;\n@use \"..\" as super;\n@use \"@app/bancor-components/Element/Image\";\n@use \"@app/bancor-components/Element/Text\";\n@use \"@app/bancor-components/Element/Link\";\n@use \"@app/bancor-components/Style/Color\";\n@use \"@app/bancor-components/Style/Font\";\n@use \"@app/bancor-components/Style/Border\";\n@use \"@app/bancor-components/Style/Shadow\";\n@use \"@app/bancor-components/Style/Layout\";\n@use \"@app/bancor-components/Style/Layout/Flex\";\n@use \"@app/bancor-components/Style/Layout/Padding\";\n@use \"@app/bancor-components/Style/Layout/Position\";\n\n$pos-x-modo-badge: calc(Layout.get-space(beta) - Layout.get-space(gamma) - 2.5px);\n$pos-y-modo-badge: Layout.get-space(theta);\n\n#{this.$selector} {\n    > section {\n        @include Position.set($position: fixed, $bottom: none, $z-index: alpha);\n        @include Padding.set($top: none, $bottom: beta, $left: alpha, $right: alpha);\n        width: Layout.get-max-width(alpha);\n\n        & > nav {\n            @include Flex.set($align: center, $justify: between, $grow: beta);\n            @include Padding.set(beta);\n            filter: blur(0);\n\n            #{Link.$selector} {\n                @include Flex.set($dir: column, $align: center, $justify: center);\n\n                #{Text.$selector} {\n                    @include Color.set($fg: \"gray-light\");\n                    @include Font.set(\n                        $size: gamma,\n                        $weight: normal,\n                        $family: \"default\",\n                        $space: \"nowrap\"\n                    );\n                }\n\n                &.active {\n                    #{Text.$selector} {\n                        @include Color.set($fg: \"primary\");\n                    }\n\n                    .spanActive {\n                        @include Color.set($bg: \"primary\");\n                        @include Border.set($radius: iota);\n                        width: 60%;\n                        height: this.$footer-height-span-active;\n                    }\n                }\n            }\n\n            .principal {\n                @include Color.set($bg: \"primary\");\n                @include Border.set($style: default, $radius: kappa);\n                @include Flex.set($align: center, $justify: center);\n                @include Padding.set($preset: none);\n                @include Position.set($position: relative);\n                width: Layout.get-size(delta);\n                height: Layout.get-size(delta);\n\n                #{Image.$selector} {\n                    @include Image.asModoBadge;\n                    @include Border.set($width: gamma);\n                    right: $pos-x-modo-badge;\n                    top: -$pos-y-modo-badge;\n                }\n            }\n\n            .menu {\n                @include Flex.set($dir: column, $align: center, $justify: center);\n                @include Color.set($bg: \"transparent\");\n                @include Padding.set($preset: none);\n                @include Border.set($style: default);\n                cursor: pointer;\n\n                #{Text.$selector} {\n                    @include Color.set($fg: \"gray-light\");\n                    @include Font.set(\n                        $size: gamma,\n                        $weight: normal,\n                        $family: \"default\",\n                        $space: \"nowrap\"\n                    );\n                }\n            }\n\n            &:before {\n                content: \"\";\n                @include Position.set(\n                    $position: absolute,\n                    $top: none,\n                    $left: none,\n                    $right: none,\n                    $bottom: none,\n                    $z-index: this.$footer-z-index-background\n                );\n                @include Color.set($bg: \"gray-200\");\n                @include Border.set($radius: delta);\n                @include Shadow.set($box: alpha);\n                -webkit-filter: blur(this.$footer-background-blur);\n                filter: blur(this.$footer-background-blur);\n                opacity: this.$footer-background-opacity;\n                height: this.$footer-height;\n            }\n        }\n    }\n}\n","@use \"@pkg/react-storybook/Component\";\n@use \"..\" as super;\n\n$name: #{super.$name + \"Footer\"};\n$type: Component.$type-section;\n$selector: Component.selector($name, $type);\n\n$footer-height: 79px;\n$footer-height-span-active: 3px;\n$footer-z-index-background: -1;\n$footer-background-opacity: 0.98;\n$footer-background-blur: 0.5px;\n\n:export {\n    NAME_BASEINTERNAL_CONTAINERFOOTER: $name;\n    TYPE_BASEINTERNAL_CONTAINERFOOTER: $type;\n}\n","@use \"@pkg/react-storybook/Component\";\n@use \"@app/bancor-components/Style/Layout\";\n@use \"@app/bancor-components/Style/Layout/Flex\";\n@use \"@app/bancor-components/Style/Layout/Margin\";\n@use \"@app/bancor-components/Style/Layout/Position\";\n@use \"@app/bancor-components/Style/Color\";\n@use \"@app/bancor-components/Style/Border\";\n\n$name: Image;\n$type: Component.$type-element;\n$selector: Component.selector($name, $type);\n\n$height-logo-modo: 18px;\n$width-logo-modo: 80px;\n\n@mixin asModoBadge {\n    @include Position.set($position: absolute, $z-index: alpha);\n    @include Flex.set($align: \"center\", $justify: \"center\");\n    @include Border.set($style: gamma, $width: beta, $color: \"white\", $radius: kappa );\n    @include Color.set($bg: \"white\");\n    box-sizing: border-box;\n}\n\n@mixin asModoLogo {\n    @include Margin.set($left: alpha, $right: alpha);\n    flex: 0 0 $width-logo-modo;\n    svg {\n        height: $height-logo-modo;\n        width: $width-logo-modo;\n    }\n}\n\n:export {\n    NAME_IMAGE: $name;\n    TYPE_IMAGE: $type;\n}\n"]}